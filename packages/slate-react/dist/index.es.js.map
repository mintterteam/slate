{"version":3,"file":"index.es.js","sources":["../../../.yarn/cache/@babel-runtime-npm-7.15.3-6333c71362-2f0b8d2d4e.zip/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../../.yarn/cache/@babel-runtime-npm-7.15.3-6333c71362-2f0b8d2d4e.zip/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../../../.yarn/cache/@babel-runtime-npm-7.15.3-6333c71362-2f0b8d2d4e.zip/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../src/utils/environment.ts","../src/hooks/use-isomorphic-layout-effect.ts","../src/components/string.tsx","../src/utils/weak-maps.ts","../src/components/leaf.tsx","../src/utils/range-list.ts","../src/hooks/use-content-key.ts","../src/components/text.tsx","../src/components/element.tsx","../src/hooks/use-slate-static.tsx","../src/hooks/use-decorate.ts","../src/hooks/use-selected.ts","../src/hooks/use-children.tsx","../src/utils/hotkeys.ts","../src/hooks/use-read-only.ts","../src/hooks/use-slate.tsx","../src/utils/dom.ts","../src/utils/constants.ts","../src/components/editable.tsx","../src/components/android/diff-text.ts","../src/utils/key.ts","../src/plugin/react-editor.ts","../src/components/android/mutation-detection.ts","../src/components/android/android-input-manager.ts","../src/components/android/use-mutation-observer.ts","../src/components/android/use-restore-dom.tsx","../src/components/android/use-track-user-input.ts","../src/components/android/use-android-input-manager.ts","../src/components/android/android-editable.tsx","../src/hooks/use-focused.ts","../src/hooks/use-slate-selector.tsx","../src/components/slate.tsx","../src/hooks/use-editor.tsx","../src/utils/lines.ts","../src/plugin/with-react.ts","../src/index.ts"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","import React from 'react'\n\nexport const IS_REACT_VERSION_17_OR_ABOVE =\n  parseInt(React.version.split('.')[0], 10) >= 17\n\nexport const IS_IOS =\n  typeof navigator !== 'undefined' &&\n  typeof window !== 'undefined' &&\n  /iPad|iPhone|iPod/.test(navigator.userAgent) &&\n  !window.MSStream\n\nexport const IS_APPLE =\n  typeof navigator !== 'undefined' && /Mac OS X/.test(navigator.userAgent)\n\nexport const IS_ANDROID =\n  typeof navigator !== 'undefined' && /Android/.test(navigator.userAgent)\n\nexport const IS_FIREFOX =\n  typeof navigator !== 'undefined' &&\n  /^(?!.*Seamonkey)(?=.*Firefox).*/i.test(navigator.userAgent)\n\nexport const IS_SAFARI =\n  typeof navigator !== 'undefined' &&\n  /Version\\/[\\d\\.]+.*Safari/.test(navigator.userAgent)\n\n// \"modern\" Edge was released at 79.x\nexport const IS_EDGE_LEGACY =\n  typeof navigator !== 'undefined' &&\n  /Edge?\\/(?:[0-6][0-9]|[0-7][0-8])(?:\\.)/i.test(navigator.userAgent)\n\nexport const IS_CHROME =\n  typeof navigator !== 'undefined' && /Chrome/i.test(navigator.userAgent)\n\n// Native `beforeInput` events don't work well with react on Chrome 75\n// and older, Chrome 76+ can use `beforeInput` though.\nexport const IS_CHROME_LEGACY =\n  typeof navigator !== 'undefined' &&\n  /Chrome?\\/(?:[0-7][0-5]|[0-6][0-9])(?:\\.)/i.test(navigator.userAgent)\n\n// Firefox did not support `beforeInput` until `v87`.\nexport const IS_FIREFOX_LEGACY =\n  typeof navigator !== 'undefined' &&\n  /^(?!.*Seamonkey)(?=.*Firefox\\/(?:[0-7][0-9]|[0-8][0-6])(?:\\.)).*/i.test(\n    navigator.userAgent\n  )\n\n// qq browser\nexport const IS_QQBROWSER =\n  typeof navigator !== 'undefined' && /.*QQBrowser/.test(navigator.userAgent)\n\n// UC mobile browser\nexport const IS_UC_MOBILE =\n  typeof navigator !== 'undefined' && /.*UCBrowser/.test(navigator.userAgent)\n\n// Wechat browser\nexport const IS_WECHATBROWSER =\n  typeof navigator !== 'undefined' && /.*Wechat/.test(navigator.userAgent)\n\n// Check if DOM is available as React does internally.\n// https://github.com/facebook/react/blob/master/packages/shared/ExecutionEnvironment.js\nexport const CAN_USE_DOM = !!(\n  typeof window !== 'undefined' &&\n  typeof window.document !== 'undefined' &&\n  typeof window.document.createElement !== 'undefined'\n)\n\n// COMPAT: Firefox/Edge Legacy don't support the `beforeinput` event\n// Chrome Legacy doesn't support `beforeinput` correctly\nexport const HAS_BEFORE_INPUT_SUPPORT =\n  !IS_CHROME_LEGACY &&\n  !IS_EDGE_LEGACY &&\n  // globalThis is undefined in older browsers\n  typeof globalThis !== 'undefined' &&\n  globalThis.InputEvent &&\n  // @ts-ignore The `getTargetRanges` property isn't recognized.\n  typeof globalThis.InputEvent.prototype.getTargetRanges === 'function'\n","import { useLayoutEffect, useEffect } from 'react'\nimport { CAN_USE_DOM } from '../utils/environment'\n\n/**\n * Prevent warning on SSR by falling back to useEffect when DOM isn't available\n */\n\nexport const useIsomorphicLayoutEffect = CAN_USE_DOM\n  ? useLayoutEffect\n  : useEffect\n","import React, { useRef } from 'react'\nimport { Editor, Text, Path, Element, Node } from 'slate'\n\nimport { ReactEditor, useSlateStatic } from '..'\nimport { useIsomorphicLayoutEffect } from '../hooks/use-isomorphic-layout-effect'\n\n/**\n * Leaf content strings.\n */\n\nconst String = (props: {\n  isLast: boolean\n  leaf: Text\n  parent: Element\n  text: Text\n}) => {\n  const { isLast, leaf, parent, text } = props\n  const editor = useSlateStatic()\n  const path = ReactEditor.findPath(editor, text)\n  const parentPath = Path.parent(path)\n\n  // COMPAT: Render text inside void nodes with a zero-width space.\n  // So the node can contain selection but the text is not visible.\n  if (editor.isVoid(parent)) {\n    return <ZeroWidthString length={Node.string(parent).length} />\n  }\n\n  // COMPAT: If this is the last text node in an empty block, render a zero-\n  // width space that will convert into a line break when copying and pasting\n  // to support expected plain text.\n  if (\n    leaf.value === '' &&\n    parent.children[parent.children.length - 1] === text &&\n    !editor.isInline(parent) &&\n    Editor.string(editor, parentPath) === ''\n  ) {\n    return <ZeroWidthString isLineBreak />\n  }\n\n  // COMPAT: If the text is empty, it's because it's on the edge of an inline\n  // node, so we render a zero-width space so that the selection can be\n  // inserted next to it still.\n  if (leaf.value === '') {\n    return <ZeroWidthString />\n  }\n\n  // COMPAT: Browsers will collapse trailing new lines at the end of blocks,\n  // so we need to add an extra trailing new lines to prevent that.\n  if (isLast && leaf.value.slice(-1) === '\\n') {\n    return <TextString isTrailing text={leaf.value} />\n  }\n\n  return <TextString text={leaf.value} />\n}\n\n/**\n * Leaf strings with text in them.\n */\nconst TextString = (props: { text: string; isTrailing?: boolean }) => {\n  const { text, isTrailing = false } = props\n\n  const ref = useRef<HTMLSpanElement>(null)\n\n  const getTextContent = () => {\n    return `${text ?? ''}${isTrailing ? '\\n' : ''}`\n  }\n\n  // This is the actual text rendering boundary where we interface with the DOM\n  // The text is not rendered as part of the virtual DOM, as since we handle basic character insertions natively,\n  // updating the DOM is not a one way dataflow anymore. What we need here is not reconciliation and diffing\n  // with previous version of the virtual DOM, but rather diffing with the actual DOM element, and replace the DOM <span> content\n  // exactly if and only if its current content does not match our current virtual DOM.\n  // Otherwise the DOM TextNode would always be replaced by React as the user types, which interferes with native text features,\n  // eg makes native spellcheck opt out from checking the text node.\n\n  // useLayoutEffect: updating our span before browser paint\n  useIsomorphicLayoutEffect(() => {\n    // null coalescing text to make sure we're not outputing \"null\" as a string in the extreme case it is nullish at runtime\n    const textWithTrailing = getTextContent()\n\n    if (ref.current && ref.current.textContent !== textWithTrailing) {\n      ref.current.textContent = textWithTrailing\n    }\n\n    // intentionally not specifying dependencies, so that this effect runs on every render\n    // as this effectively replaces \"specifying the text in the virtual DOM under the <span> below\" on each render\n  })\n\n  // Render text content immediately if it's the first-time render\n  // Ensure that text content is rendered on server-side rendering\n  if (!ref.current) {\n    return (\n      <span data-slate-string ref={ref}>\n        {getTextContent()}\n      </span>\n    )\n  }\n\n  // the span is intentionally same on every render in virtual DOM, actual rendering happens in the layout effect above\n  return <span data-slate-string ref={ref} />\n}\n\n/**\n * Leaf strings without text, render as zero-width strings.\n */\n\nconst ZeroWidthString = (props: { length?: number; isLineBreak?: boolean }) => {\n  const { length = 0, isLineBreak = false } = props\n  return (\n    <span\n      data-slate-zero-width={isLineBreak ? 'n' : 'z'}\n      data-slate-length={length}\n    >\n      {'\\uFEFF'}\n      {isLineBreak ? <br /> : null}\n    </span>\n  )\n}\n\nexport default String\n","import { Ancestor, Editor, Node, RangeRef } from 'slate'\nimport { Key } from './key'\nimport { TextInsertion } from '../components/android/diff-text'\n\n/**\n * Two weak maps that allow us rebuild a path given a node. They are populated\n * at render time such that after a render occurs we can always backtrack.\n */\n\nexport const NODE_TO_INDEX: WeakMap<Node, number> = new WeakMap()\nexport const NODE_TO_PARENT: WeakMap<Node, Ancestor> = new WeakMap()\n\n/**\n * Weak maps that allow us to go between Slate nodes and DOM nodes. These\n * are used to resolve DOM event-related logic into Slate actions.\n */\nexport const EDITOR_TO_WINDOW: WeakMap<Editor, Window> = new WeakMap()\nexport const EDITOR_TO_ELEMENT: WeakMap<Editor, HTMLElement> = new WeakMap()\nexport const EDITOR_TO_PLACEHOLDER: WeakMap<Editor, string> = new WeakMap()\nexport const ELEMENT_TO_NODE: WeakMap<HTMLElement, Node> = new WeakMap()\nexport const NODE_TO_ELEMENT: WeakMap<Node, HTMLElement> = new WeakMap()\nexport const NODE_TO_KEY: WeakMap<Node, Key> = new WeakMap()\nexport const EDITOR_TO_KEY_TO_ELEMENT: WeakMap<\n  Editor,\n  WeakMap<Key, HTMLElement>\n> = new WeakMap()\n\n/**\n * Weak maps for storing editor-related state.\n */\n\nexport const IS_READ_ONLY: WeakMap<Editor, boolean> = new WeakMap()\nexport const IS_FOCUSED: WeakMap<Editor, boolean> = new WeakMap()\nexport const IS_DRAGGING: WeakMap<Editor, boolean> = new WeakMap()\nexport const IS_CLICKING: WeakMap<Editor, boolean> = new WeakMap()\nexport const IS_COMPOSING: WeakMap<Editor, boolean> = new WeakMap()\nexport const IS_ON_COMPOSITION_END: WeakMap<Editor, boolean> = new WeakMap()\n\nexport const EDITOR_TO_USER_SELECTION: WeakMap<Editor, RangeRef> = new WeakMap()\n\n/**\n * Weak maps for saving text on composition stage.\n */\n\nexport const EDITOR_ON_COMPOSITION_TEXT: WeakMap<\n  Editor,\n  TextInsertion[]\n> = new WeakMap()\n\n/**\n * Weak map for associating the context `onChange` context with the plugin.\n */\n\nexport const EDITOR_TO_ON_CHANGE = new WeakMap<Editor, () => void>()\n\nexport const NODE_TO_RESTORE_DOM = new WeakMap<Node, () => void>()\n\n/**\n * Symbols.\n */\n\nexport const PLACEHOLDER_SYMBOL = (Symbol('placeholder') as unknown) as string\n","import React, { useRef, useEffect } from 'react'\nimport { Element, Text } from 'slate'\nimport String from './string'\nimport { PLACEHOLDER_SYMBOL } from '../utils/weak-maps'\nimport { RenderLeafProps, RenderPlaceholderProps } from './editable'\n\n/**\n * Individual leaves in a text node with unique formatting.\n */\n\nconst Leaf = (props: {\n  isLast: boolean\n  leaf: Text\n  parent: Element\n  renderPlaceholder: (props: RenderPlaceholderProps) => JSX.Element\n  renderLeaf?: (props: RenderLeafProps) => JSX.Element\n  text: Text\n}) => {\n  const {\n    leaf,\n    isLast,\n    text,\n    parent,\n    renderPlaceholder,\n    renderLeaf = (props: RenderLeafProps) => <DefaultLeaf {...props} />,\n  } = props\n\n  const placeholderRef = useRef<HTMLSpanElement | null>(null)\n\n  useEffect(() => {\n    const placeholderEl = placeholderRef?.current\n    const editorEl = document.querySelector<HTMLDivElement>(\n      '[data-slate-editor=\"true\"]'\n    )\n\n    if (!placeholderEl || !editorEl) {\n      return\n    }\n\n    editorEl.style.minHeight = `${placeholderEl.clientHeight}px`\n\n    return () => {\n      editorEl.style.minHeight = 'auto'\n    }\n  }, [placeholderRef, leaf])\n\n  let children = (\n    <String isLast={isLast} leaf={leaf} parent={parent} text={text} />\n  )\n\n  if (leaf[PLACEHOLDER_SYMBOL]) {\n    const placeholderProps: RenderPlaceholderProps = {\n      children: leaf.placeholder,\n      attributes: {\n        'data-slate-placeholder': true,\n        style: {\n          position: 'absolute',\n          pointerEvents: 'none',\n          width: '100%',\n          maxWidth: '100%',\n          display: 'block',\n          opacity: '0.333',\n          userSelect: 'none',\n          textDecoration: 'none',\n        },\n        contentEditable: false,\n        ref: placeholderRef,\n      },\n    }\n\n    children = (\n      <React.Fragment>\n        {renderPlaceholder(placeholderProps)}\n        {children}\n      </React.Fragment>\n    )\n  }\n\n  // COMPAT: Having the `data-` attributes on these leaf elements ensures that\n  // in certain misbehaving browsers they aren't weirdly cloned/destroyed by\n  // contenteditable behaviors. (2019/05/08)\n  const attributes: {\n    'data-slate-leaf': true\n  } = {\n    'data-slate-leaf': true,\n  }\n\n  return renderLeaf({ attributes, children, leaf, text })\n}\n\nconst MemoizedLeaf = React.memo(Leaf, (prev, next) => {\n  return (\n    next.parent === prev.parent &&\n    next.isLast === prev.isLast &&\n    next.renderLeaf === prev.renderLeaf &&\n    next.renderPlaceholder === prev.renderPlaceholder &&\n    next.text === prev.text &&\n    Text.equals(next.leaf, prev.leaf) &&\n    next.leaf[PLACEHOLDER_SYMBOL] === prev.leaf[PLACEHOLDER_SYMBOL]\n  )\n})\n\nexport const DefaultLeaf = (props: RenderLeafProps) => {\n  const { attributes, children } = props\n  return <span {...attributes}>{children}</span>\n}\n\nexport default MemoizedLeaf\n","import { Range } from 'slate'\nimport { PLACEHOLDER_SYMBOL } from './weak-maps'\n\nexport const shallowCompare = (obj1: {}, obj2: {}) =>\n  Object.keys(obj1).length === Object.keys(obj2).length &&\n  Object.keys(obj1).every(\n    key => obj2.hasOwnProperty(key) && obj1[key] === obj2[key]\n  )\n\n/**\n * Check if a list of decorator ranges are equal to another.\n *\n * PERF: this requires the two lists to also have the ranges inside them in the\n * same order, but this is an okay constraint for us since decorations are\n * kept in order, and the odd case where they aren't is okay to re-render for.\n */\n\nexport const isDecoratorRangeListEqual = (\n  list: Range[],\n  another: Range[]\n): boolean => {\n  if (list.length !== another.length) {\n    return false\n  }\n\n  for (let i = 0; i < list.length; i++) {\n    const range = list[i]\n    const other = another[i]\n\n    const { anchor: rangeAnchor, focus: rangeFocus, ...rangeOwnProps } = range\n    const { anchor: otherAnchor, focus: otherFocus, ...otherOwnProps } = other\n\n    if (\n      !Range.equals(range, other) ||\n      range[PLACEHOLDER_SYMBOL] !== other[PLACEHOLDER_SYMBOL] ||\n      !shallowCompare(rangeOwnProps, otherOwnProps)\n    ) {\n      return false\n    }\n  }\n\n  return true\n}\n","import { useEffect, useRef, useState } from 'react'\nimport { Node as SlateNode } from 'slate'\nimport { NODE_TO_RESTORE_DOM } from '../utils/weak-maps'\n\nexport function useContentKey(node: SlateNode) {\n  const contentKeyRef = useRef<number>(0)\n  const updateAnimationFrameRef = useRef<number | null>(null)\n\n  const [, setForceRerenderCounter] = useState(0)\n\n  useEffect(() => {\n    NODE_TO_RESTORE_DOM.set(node, () => {\n      // Update is already queued and node hasn't re-render yet\n      if (updateAnimationFrameRef.current) {\n        return\n      }\n\n      updateAnimationFrameRef.current = requestAnimationFrame(() => {\n        setForceRerenderCounter(state => state + 1)\n        updateAnimationFrameRef.current = null\n      })\n\n      contentKeyRef.current++\n    })\n\n    return () => {\n      NODE_TO_RESTORE_DOM.delete(node)\n    }\n  }, [node])\n\n  // Node was restored => clear scheduled update\n  if (updateAnimationFrameRef.current) {\n    cancelAnimationFrame(updateAnimationFrameRef.current)\n    updateAnimationFrameRef.current = null\n  }\n\n  return contentKeyRef.current\n}\n","import React, { useRef } from 'react'\nimport { Range, Element, Text as SlateText } from 'slate'\n\nimport Leaf from './leaf'\nimport { ReactEditor, useSlateStatic } from '..'\nimport { RenderLeafProps, RenderPlaceholderProps } from './editable'\nimport { useIsomorphicLayoutEffect } from '../hooks/use-isomorphic-layout-effect'\nimport {\n  NODE_TO_ELEMENT,\n  ELEMENT_TO_NODE,\n  EDITOR_TO_KEY_TO_ELEMENT,\n} from '../utils/weak-maps'\nimport { isDecoratorRangeListEqual } from '../utils/range-list'\nimport { useContentKey } from '../hooks/use-content-key'\nimport { IS_ANDROID } from '../utils/environment'\n\n/**\n * Text.\n */\n\nconst Text = (props: {\n  decorations: Range[]\n  isLast: boolean\n  parent: Element\n  renderPlaceholder: (props: RenderPlaceholderProps) => JSX.Element\n  renderLeaf?: (props: RenderLeafProps) => JSX.Element\n  text: SlateText\n}) => {\n  const {\n    decorations,\n    isLast,\n    parent,\n    renderPlaceholder,\n    renderLeaf,\n    text,\n  } = props\n  const editor = useSlateStatic()\n  const ref = useRef<HTMLSpanElement>(null)\n  const leaves = SlateText.decorations(text, decorations)\n  const key = ReactEditor.findKey(editor, text)\n  const children = []\n\n  for (let i = 0; i < leaves.length; i++) {\n    const leaf = leaves[i]\n\n    children.push(\n      <Leaf\n        isLast={isLast && i === leaves.length - 1}\n        key={`${key.id}-${i}`}\n        renderPlaceholder={renderPlaceholder}\n        leaf={leaf}\n        text={text}\n        parent={parent}\n        renderLeaf={renderLeaf}\n      />\n    )\n  }\n\n  // Update element-related weak maps with the DOM element ref.\n  useIsomorphicLayoutEffect(() => {\n    const KEY_TO_ELEMENT = EDITOR_TO_KEY_TO_ELEMENT.get(editor)\n    if (ref.current) {\n      KEY_TO_ELEMENT?.set(key, ref.current)\n      NODE_TO_ELEMENT.set(text, ref.current)\n      ELEMENT_TO_NODE.set(ref.current, text)\n    } else {\n      KEY_TO_ELEMENT?.delete(key)\n      NODE_TO_ELEMENT.delete(text)\n    }\n  })\n\n  const contentKey = IS_ANDROID ? useContentKey(text) : undefined\n\n  return (\n    <span data-slate-node=\"text\" ref={ref} key={contentKey}>\n      {children}\n    </span>\n  )\n}\n\nconst MemoizedText = React.memo(Text, (prev, next) => {\n  return (\n    next.parent === prev.parent &&\n    next.isLast === prev.isLast &&\n    next.renderLeaf === prev.renderLeaf &&\n    next.text === prev.text &&\n    isDecoratorRangeListEqual(next.decorations, prev.decorations)\n  )\n})\n\nexport default MemoizedText\n","import React, { Fragment, useRef } from 'react'\nimport getDirection from 'direction'\nimport { Editor, Node, Range, Element as SlateElement } from 'slate'\n\nimport Text from './text'\nimport useChildren from '../hooks/use-children'\nimport { ReactEditor, useSlateStatic, useReadOnly } from '..'\nimport { useIsomorphicLayoutEffect } from '../hooks/use-isomorphic-layout-effect'\nimport {\n  NODE_TO_ELEMENT,\n  ELEMENT_TO_NODE,\n  NODE_TO_PARENT,\n  NODE_TO_INDEX,\n  EDITOR_TO_KEY_TO_ELEMENT,\n} from '../utils/weak-maps'\nimport { isDecoratorRangeListEqual } from '../utils/range-list'\nimport {\n  RenderElementProps,\n  RenderLeafProps,\n  RenderPlaceholderProps,\n} from './editable'\nimport { useContentKey } from '../hooks/use-content-key'\nimport { IS_ANDROID } from '../utils/environment'\n\n/**\n * Element.\n */\n\nconst Element = (props: {\n  decorations: Range[]\n  element: SlateElement\n  renderElement?: (props: RenderElementProps) => JSX.Element\n  renderPlaceholder: (props: RenderPlaceholderProps) => JSX.Element\n  renderLeaf?: (props: RenderLeafProps) => JSX.Element\n  selection: Range | null\n}) => {\n  const {\n    decorations,\n    element,\n    renderElement = (p: RenderElementProps) => <DefaultElement {...p} />,\n    renderPlaceholder,\n    renderLeaf,\n    selection,\n  } = props\n  const ref = useRef<HTMLElement>(null)\n  const editor = useSlateStatic()\n  const readOnly = useReadOnly()\n  const isInline = editor.isInline(element)\n  const key = ReactEditor.findKey(editor, element)\n  let children: React.ReactNode = useChildren({\n    decorations,\n    node: element,\n    renderElement,\n    renderPlaceholder,\n    renderLeaf,\n    selection,\n  })\n\n  // Attributes that the developer must mix into the element in their\n  // custom node renderer component.\n  const attributes: {\n    'data-slate-node': 'element'\n    'data-slate-void'?: true\n    'data-slate-inline'?: true\n    contentEditable?: false\n    dir?: 'rtl'\n    ref: any\n  } = {\n    'data-slate-node': 'element',\n    ref,\n  }\n\n  if (isInline) {\n    attributes['data-slate-inline'] = true\n  }\n\n  // If it's a block node with inline children, add the proper `dir` attribute\n  // for text direction.\n  if (!isInline && Editor.hasInlines(editor, element)) {\n    const text = Node.string(element)\n    const dir = getDirection(text)\n\n    if (dir === 'rtl') {\n      attributes.dir = dir\n    }\n  }\n\n  // If it's a void node, wrap the children in extra void-specific elements.\n  if (Editor.isVoid(editor, element)) {\n    attributes['data-slate-void'] = true\n\n    if (!readOnly && isInline) {\n      attributes.contentEditable = false\n    }\n\n    const Tag = isInline ? 'span' : 'div'\n    const [[text]] = Node.texts(element)\n\n    children = (\n      <Tag\n        data-slate-spacer\n        style={{\n          height: '0',\n          color: 'transparent',\n          outline: 'none',\n          position: 'absolute',\n        }}\n      >\n        <Text\n          renderPlaceholder={renderPlaceholder}\n          decorations={[]}\n          isLast={false}\n          parent={element}\n          text={text}\n        />\n      </Tag>\n    )\n\n    NODE_TO_INDEX.set(text, 0)\n    NODE_TO_PARENT.set(text, element)\n  }\n\n  // Update element-related weak maps with the DOM element ref.\n  useIsomorphicLayoutEffect(() => {\n    const KEY_TO_ELEMENT = EDITOR_TO_KEY_TO_ELEMENT.get(editor)\n    if (ref.current) {\n      KEY_TO_ELEMENT?.set(key, ref.current)\n      NODE_TO_ELEMENT.set(element, ref.current)\n      ELEMENT_TO_NODE.set(ref.current, element)\n    } else {\n      KEY_TO_ELEMENT?.delete(key)\n      NODE_TO_ELEMENT.delete(element)\n    }\n  })\n\n  const content = renderElement({ attributes, children, element })\n\n  if (IS_ANDROID) {\n    const contentKey = useContentKey(element)\n    return <Fragment key={contentKey}>{content}</Fragment>\n  }\n\n  return content\n}\n\nconst MemoizedElement = React.memo(Element, (prev, next) => {\n  return (\n    prev.element === next.element &&\n    prev.renderElement === next.renderElement &&\n    prev.renderLeaf === next.renderLeaf &&\n    isDecoratorRangeListEqual(prev.decorations, next.decorations) &&\n    (prev.selection === next.selection ||\n      (!!prev.selection &&\n        !!next.selection &&\n        Range.equals(prev.selection, next.selection)))\n  )\n})\n\n/**\n * The default element renderer.\n */\n\nexport const DefaultElement = (props: RenderElementProps) => {\n  const { attributes, children, element } = props\n  const editor = useSlateStatic()\n  const Tag = editor.isInline(element) ? 'span' : 'div'\n  return (\n    <Tag {...attributes} style={{ position: 'relative' }}>\n      {children}\n    </Tag>\n  )\n}\n\nexport default MemoizedElement\n","import { createContext, useContext } from 'react'\nimport { ReactEditor } from '../plugin/react-editor'\nimport { Editor } from 'slate'\n\n/**\n * A React context for sharing the editor object.\n */\n\nexport const EditorContext = createContext<ReactEditor | null>(null)\n\n/**\n * Get the current editor object from the React context.\n */\n\nexport const useSlateStatic = (): Editor => {\n  const editor = useContext(EditorContext)\n\n  if (!editor) {\n    throw new Error(\n      `The \\`useSlateStatic\\` hook must be used inside the <Slate> component's context.`\n    )\n  }\n\n  return editor\n}\n","import { createContext, useContext } from 'react'\nimport { Range, NodeEntry } from 'slate'\n\n/**\n * A React context for sharing the `decorate` prop of the editable.\n */\n\nexport const DecorateContext = createContext<(entry: NodeEntry) => Range[]>(\n  () => []\n)\n\n/**\n * Get the current `decorate` prop of the editable.\n */\n\nexport const useDecorate = (): ((entry: NodeEntry) => Range[]) => {\n  return useContext(DecorateContext)\n}\n","import { createContext, useContext } from 'react'\n\n/**\n * A React context for sharing the `selected` state of an element.\n */\n\nexport const SelectedContext = createContext(false)\n\n/**\n * Get the current `selected` state of an element.\n */\n\nexport const useSelected = (): boolean => {\n  return useContext(SelectedContext)\n}\n","import React from 'react'\nimport { Editor, Range, Element, Ancestor, Descendant } from 'slate'\n\nimport ElementComponent from '../components/element'\nimport TextComponent from '../components/text'\nimport { ReactEditor } from '..'\nimport { useSlateStatic } from './use-slate-static'\nimport { useDecorate } from './use-decorate'\nimport { NODE_TO_INDEX, NODE_TO_PARENT } from '../utils/weak-maps'\nimport {\n  RenderElementProps,\n  RenderLeafProps,\n  RenderPlaceholderProps,\n} from '../components/editable'\nimport { SelectedContext } from './use-selected'\n\n/**\n * Children.\n */\n\nconst useChildren = (props: {\n  decorations: Range[]\n  node: Ancestor\n  renderElement?: (props: RenderElementProps) => JSX.Element\n  renderPlaceholder: (props: RenderPlaceholderProps) => JSX.Element\n  renderLeaf?: (props: RenderLeafProps) => JSX.Element\n  selection: Range | null\n}) => {\n  const {\n    decorations,\n    node,\n    renderElement,\n    renderPlaceholder,\n    renderLeaf,\n    selection,\n  } = props\n  const decorate = useDecorate()\n  const editor = useSlateStatic()\n  const path = ReactEditor.findPath(editor, node)\n  const children = []\n  const isLeafBlock =\n    Element.isElement(node) &&\n    !editor.isInline(node) &&\n    Editor.hasInlines(editor, node)\n\n  for (let i = 0; i < node.children.length; i++) {\n    const p = path.concat(i)\n    const n = node.children[i] as Descendant\n    const key = ReactEditor.findKey(editor, n)\n    const range = Editor.range(editor, p)\n    const sel = selection && Range.intersection(range, selection)\n    const ds = decorate([n, p])\n\n    for (const dec of decorations) {\n      const d = Range.intersection(dec, range)\n\n      if (d) {\n        ds.push(d)\n      }\n    }\n\n    if (Element.isElement(n)) {\n      children.push(\n        <SelectedContext.Provider key={`provider-${key.id}`} value={!!sel}>\n          <ElementComponent\n            decorations={ds}\n            element={n}\n            key={key.id}\n            renderElement={renderElement}\n            renderPlaceholder={renderPlaceholder}\n            renderLeaf={renderLeaf}\n            selection={sel}\n          />\n        </SelectedContext.Provider>\n      )\n    } else {\n      children.push(\n        <TextComponent\n          decorations={ds}\n          key={key.id}\n          isLast={isLeafBlock && i === node.children.length - 1}\n          parent={node}\n          renderPlaceholder={renderPlaceholder}\n          renderLeaf={renderLeaf}\n          text={n}\n        />\n      )\n    }\n\n    NODE_TO_INDEX.set(n, i)\n    NODE_TO_PARENT.set(n, node)\n  }\n\n  return children\n}\n\nexport default useChildren\n","import { isKeyHotkey } from 'is-hotkey'\nimport { IS_APPLE } from './environment'\n\n/**\n * Hotkey mappings for each platform.\n */\n\nconst HOTKEYS = {\n  bold: 'mod+b',\n  compose: ['down', 'left', 'right', 'up', 'backspace', 'enter'],\n  moveBackward: 'left',\n  moveForward: 'right',\n  moveWordBackward: 'ctrl+left',\n  moveWordForward: 'ctrl+right',\n  deleteBackward: 'shift?+backspace',\n  deleteForward: 'shift?+delete',\n  extendBackward: 'shift+left',\n  extendForward: 'shift+right',\n  italic: 'mod+i',\n  insertSoftBreak: 'shift+enter',\n  splitBlock: 'enter',\n  undo: 'mod+z',\n}\n\nconst APPLE_HOTKEYS = {\n  moveLineBackward: 'opt+up',\n  moveLineForward: 'opt+down',\n  moveWordBackward: 'opt+left',\n  moveWordForward: 'opt+right',\n  deleteBackward: ['ctrl+backspace', 'ctrl+h'],\n  deleteForward: ['ctrl+delete', 'ctrl+d'],\n  deleteLineBackward: 'cmd+shift?+backspace',\n  deleteLineForward: ['cmd+shift?+delete', 'ctrl+k'],\n  deleteWordBackward: 'opt+shift?+backspace',\n  deleteWordForward: 'opt+shift?+delete',\n  extendLineBackward: 'opt+shift+up',\n  extendLineForward: 'opt+shift+down',\n  redo: 'cmd+shift+z',\n  transposeCharacter: 'ctrl+t',\n}\n\nconst WINDOWS_HOTKEYS = {\n  deleteWordBackward: 'ctrl+shift?+backspace',\n  deleteWordForward: 'ctrl+shift?+delete',\n  redo: ['ctrl+y', 'ctrl+shift+z'],\n}\n\n/**\n * Create a platform-aware hotkey checker.\n */\n\nconst create = (key: string) => {\n  const generic = HOTKEYS[key]\n  const apple = APPLE_HOTKEYS[key]\n  const windows = WINDOWS_HOTKEYS[key]\n  const isGeneric = generic && isKeyHotkey(generic)\n  const isApple = apple && isKeyHotkey(apple)\n  const isWindows = windows && isKeyHotkey(windows)\n\n  return (event: KeyboardEvent) => {\n    if (isGeneric && isGeneric(event)) return true\n    if (IS_APPLE && isApple && isApple(event)) return true\n    if (!IS_APPLE && isWindows && isWindows(event)) return true\n    return false\n  }\n}\n\n/**\n * Hotkeys.\n */\n\nexport default {\n  isBold: create('bold'),\n  isCompose: create('compose'),\n  isMoveBackward: create('moveBackward'),\n  isMoveForward: create('moveForward'),\n  isDeleteBackward: create('deleteBackward'),\n  isDeleteForward: create('deleteForward'),\n  isDeleteLineBackward: create('deleteLineBackward'),\n  isDeleteLineForward: create('deleteLineForward'),\n  isDeleteWordBackward: create('deleteWordBackward'),\n  isDeleteWordForward: create('deleteWordForward'),\n  isExtendBackward: create('extendBackward'),\n  isExtendForward: create('extendForward'),\n  isExtendLineBackward: create('extendLineBackward'),\n  isExtendLineForward: create('extendLineForward'),\n  isItalic: create('italic'),\n  isMoveLineBackward: create('moveLineBackward'),\n  isMoveLineForward: create('moveLineForward'),\n  isMoveWordBackward: create('moveWordBackward'),\n  isMoveWordForward: create('moveWordForward'),\n  isRedo: create('redo'),\n  isSoftBreak: create('insertSoftBreak'),\n  isSplitBlock: create('splitBlock'),\n  isTransposeCharacter: create('transposeCharacter'),\n  isUndo: create('undo'),\n}\n","import { createContext, useContext } from 'react'\n\n/**\n * A React context for sharing the `readOnly` state of the editor.\n */\n\nexport const ReadOnlyContext = createContext(false)\n\n/**\n * Get the current `readOnly` state of the editor.\n */\n\nexport const useReadOnly = (): boolean => {\n  return useContext(ReadOnlyContext)\n}\n","import { createContext, useContext } from 'react'\nimport { Editor } from 'slate'\nimport { ReactEditor } from '../plugin/react-editor'\n\n/**\n * A React context for sharing the editor object, in a way that re-renders the\n * context whenever changes occur.\n */\n\nexport const SlateContext = createContext<[ReactEditor] | null>(null)\n\n/**\n * Get the current editor object from the React context.\n */\n\nexport const useSlate = (): Editor => {\n  const context = useContext(SlateContext)\n\n  if (!context) {\n    throw new Error(\n      `The \\`useSlate\\` hook must be used inside the <Slate> component's context.`\n    )\n  }\n\n  const [editor] = context\n  return editor\n}\n","/**\n * Types.\n */\n\n// COMPAT: This is required to prevent TypeScript aliases from doing some very\n// weird things for Slate's types with the same name as globals. (2019/11/27)\n// https://github.com/microsoft/TypeScript/issues/35002\nimport DOMNode = globalThis.Node\nimport DOMComment = globalThis.Comment\nimport DOMElement = globalThis.Element\nimport DOMText = globalThis.Text\nimport DOMRange = globalThis.Range\nimport DOMSelection = globalThis.Selection\nimport DOMStaticRange = globalThis.StaticRange\n\nexport {\n  DOMNode,\n  DOMComment,\n  DOMElement,\n  DOMText,\n  DOMRange,\n  DOMSelection,\n  DOMStaticRange,\n}\n\ndeclare global {\n  interface Window {\n    Selection: typeof Selection['constructor']\n    DataTransfer: typeof DataTransfer['constructor']\n    Node: typeof Node['constructor']\n  }\n}\n\nexport type DOMPoint = [Node, number]\n\n/**\n * Returns the host window of a DOM node\n */\n\nexport const getDefaultView = (value: any): Window | null => {\n  return (\n    (value && value.ownerDocument && value.ownerDocument.defaultView) || null\n  )\n}\n\n/**\n * Check if a DOM node is a comment node.\n */\n\nexport const isDOMComment = (value: any): value is DOMComment => {\n  return isDOMNode(value) && value.nodeType === 8\n}\n\n/**\n * Check if a DOM node is an element node.\n */\n\nexport const isDOMElement = (value: any): value is DOMElement => {\n  return isDOMNode(value) && value.nodeType === 1\n}\n\n/**\n * Check if a value is a DOM node.\n */\n\nexport const isDOMNode = (value: any): value is DOMNode => {\n  const window = getDefaultView(value)\n  return !!window && value instanceof window.Node\n}\n\n/**\n * Check if a value is a DOM selection.\n */\n\nexport const isDOMSelection = (value: any): value is DOMSelection => {\n  const window = value && value.anchorNode && getDefaultView(value.anchorNode)\n  return !!window && value instanceof window.Selection\n}\n\n/**\n * Check if a DOM node is an element node.\n */\n\nexport const isDOMText = (value: any): value is DOMText => {\n  return isDOMNode(value) && value.nodeType === 3\n}\n\n/**\n * Checks whether a paste event is a plaintext-only event.\n */\n\nexport const isPlainTextOnlyPaste = (event: ClipboardEvent) => {\n  return (\n    event.clipboardData &&\n    event.clipboardData.getData('text/plain') !== '' &&\n    event.clipboardData.types.length === 1\n  )\n}\n\n/**\n * Normalize a DOM point so that it always refers to a text node.\n */\n\nexport const normalizeDOMPoint = (domPoint: DOMPoint): DOMPoint => {\n  let [node, offset] = domPoint\n\n  // If it's an element node, its offset refers to the index of its children\n  // including comment nodes, so try to find the right text child node.\n  if (isDOMElement(node) && node.childNodes.length) {\n    let isLast = offset === node.childNodes.length\n    let index = isLast ? offset - 1 : offset\n    ;[node, index] = getEditableChildAndIndex(\n      node,\n      index,\n      isLast ? 'backward' : 'forward'\n    )\n    // If the editable child found is in front of input offset, we instead seek to its end\n    isLast = index < offset\n\n    // If the node has children, traverse until we have a leaf node. Leaf nodes\n    // can be either text nodes, or other void DOM nodes.\n    while (isDOMElement(node) && node.childNodes.length) {\n      const i = isLast ? node.childNodes.length - 1 : 0\n      node = getEditableChild(node, i, isLast ? 'backward' : 'forward')\n    }\n\n    // Determine the new offset inside the text node.\n    offset = isLast && node.textContent != null ? node.textContent.length : 0\n  }\n\n  // Return the node and offset.\n  return [node, offset]\n}\n\n/**\n * Determines wether the active element is nested within a shadowRoot\n */\n\nexport const hasShadowRoot = () => {\n  return !!(\n    window.document.activeElement && window.document.activeElement.shadowRoot\n  )\n}\n\n/**\n * Get the nearest editable child and index at `index` in a `parent`, preferring\n * `direction`.\n */\n\nexport const getEditableChildAndIndex = (\n  parent: DOMElement,\n  index: number,\n  direction: 'forward' | 'backward'\n): [DOMNode, number] => {\n  const { childNodes } = parent\n  let child = childNodes[index]\n  let i = index\n  let triedForward = false\n  let triedBackward = false\n\n  // While the child is a comment node, or an element node with no children,\n  // keep iterating to find a sibling non-void, non-comment node.\n  while (\n    isDOMComment(child) ||\n    (isDOMElement(child) && child.childNodes.length === 0) ||\n    (isDOMElement(child) && child.getAttribute('contenteditable') === 'false')\n  ) {\n    if (triedForward && triedBackward) {\n      break\n    }\n\n    if (i >= childNodes.length) {\n      triedForward = true\n      i = index - 1\n      direction = 'backward'\n      continue\n    }\n\n    if (i < 0) {\n      triedBackward = true\n      i = index + 1\n      direction = 'forward'\n      continue\n    }\n\n    child = childNodes[i]\n    index = i\n    i += direction === 'forward' ? 1 : -1\n  }\n\n  return [child, index]\n}\n\n/**\n * Get the nearest editable child at `index` in a `parent`, preferring\n * `direction`.\n */\n\nexport const getEditableChild = (\n  parent: DOMElement,\n  index: number,\n  direction: 'forward' | 'backward'\n): DOMNode => {\n  const [child] = getEditableChildAndIndex(parent, index, direction)\n  return child\n}\n\n/**\n * Get a plaintext representation of the content of a node, accounting for block\n * elements which get a newline appended.\n *\n * The domNode must be attached to the DOM.\n */\n\nexport const getPlainText = (domNode: DOMNode) => {\n  let text = ''\n\n  if (isDOMText(domNode) && domNode.nodeValue) {\n    return domNode.nodeValue\n  }\n\n  if (isDOMElement(domNode)) {\n    for (const childNode of Array.from(domNode.childNodes)) {\n      text += getPlainText(childNode)\n    }\n\n    const display = getComputedStyle(domNode).getPropertyValue('display')\n\n    if (display === 'block' || display === 'list' || domNode.tagName === 'BR') {\n      text += '\\n'\n    }\n  }\n\n  return text\n}\n\n/**\n * Get x-slate-fragment attribute from data-slate-fragment\n */\nconst catchSlateFragment = /data-slate-fragment=\"(.+?)\"/m\nexport const getSlateFragmentAttribute = (\n  dataTransfer: DataTransfer\n): string | void => {\n  const htmlData = dataTransfer.getData('text/html')\n  const [, fragment] = htmlData.match(catchSlateFragment) || []\n  return fragment\n}\n\n/**\n * Get the x-slate-fragment attribute that exist in text/html data\n * and append it to the DataTransfer object\n */\nexport const getClipboardData = (dataTransfer: DataTransfer): DataTransfer => {\n  if (!dataTransfer.getData('application/x-slate-fragment')) {\n    const fragment = getSlateFragmentAttribute(dataTransfer)\n    if (fragment) {\n      const clipboardData = new DataTransfer()\n      dataTransfer.types.forEach(type => {\n        clipboardData.setData(type, dataTransfer.getData(type))\n      })\n      clipboardData.setData('application/x-slate-fragment', fragment)\n      return clipboardData\n    }\n  }\n  return dataTransfer\n}\n","export const TRIPLE_CLICK = 3\n","import React, { useEffect, useRef, useMemo, useCallback, useState } from 'react'\nimport {\n  Editor,\n  Element,\n  NodeEntry,\n  Node,\n  Range,\n  Text,\n  Transforms,\n  Path,\n  RangeRef,\n} from 'slate'\nimport getDirection from 'direction'\nimport debounce from 'lodash/debounce'\nimport throttle from 'lodash/throttle'\nimport scrollIntoView from 'scroll-into-view-if-needed'\n\nimport useChildren from '../hooks/use-children'\nimport Hotkeys from '../utils/hotkeys'\nimport {\n  HAS_BEFORE_INPUT_SUPPORT,\n  IS_IOS,\n  IS_CHROME,\n  IS_FIREFOX,\n  IS_FIREFOX_LEGACY,\n  IS_QQBROWSER,\n  IS_SAFARI,\n  IS_UC_MOBILE,\n  IS_WECHATBROWSER,\n  CAN_USE_DOM,\n} from '../utils/environment'\nimport { ReactEditor } from '..'\nimport { ReadOnlyContext } from '../hooks/use-read-only'\nimport { useSlate } from '../hooks/use-slate'\nimport { useIsomorphicLayoutEffect } from '../hooks/use-isomorphic-layout-effect'\nimport { DecorateContext } from '../hooks/use-decorate'\nimport {\n  DOMElement,\n  DOMNode,\n  DOMRange,\n  getDefaultView,\n  isDOMElement,\n  isDOMNode,\n  isPlainTextOnlyPaste,\n  DOMText,\n} from '../utils/dom'\n\nimport {\n  EDITOR_TO_ELEMENT,\n  ELEMENT_TO_NODE,\n  IS_READ_ONLY,\n  NODE_TO_ELEMENT,\n  IS_FOCUSED,\n  PLACEHOLDER_SYMBOL,\n  EDITOR_TO_WINDOW,\n  EDITOR_TO_USER_SELECTION,\n  IS_COMPOSING,\n} from '../utils/weak-maps'\nimport { TRIPLE_CLICK } from '../utils/constants'\n\ntype DeferredOperation = () => void\n\nconst Children = (props: Parameters<typeof useChildren>[0]) => (\n  <React.Fragment>{useChildren(props)}</React.Fragment>\n)\n\n/**\n * `RenderElementProps` are passed to the `renderElement` handler.\n */\n\nexport interface RenderElementProps {\n  children: any\n  element: Element\n  attributes: {\n    'data-slate-node': 'element'\n    'data-slate-inline'?: true\n    'data-slate-void'?: true\n    dir?: 'rtl'\n    ref: any\n  }\n}\n\n/**\n * `RenderLeafProps` are passed to the `renderLeaf` handler.\n */\n\nexport interface RenderLeafProps {\n  children: any\n  leaf: Text\n  text: Text\n  attributes: {\n    'data-slate-leaf': true\n  }\n}\n\n/**\n * `EditableProps` are passed to the `<Editable>` component.\n */\n\nexport type EditableProps = {\n  decorate?: (entry: NodeEntry) => Range[]\n  onDOMBeforeInput?: (event: InputEvent) => void\n  placeholder?: string\n  readOnly?: boolean\n  role?: string\n  style?: React.CSSProperties\n  renderElement?: (props: RenderElementProps) => JSX.Element\n  renderLeaf?: (props: RenderLeafProps) => JSX.Element\n  renderPlaceholder?: (props: RenderPlaceholderProps) => JSX.Element\n  scrollSelectionIntoView?: (editor: ReactEditor, domRange: DOMRange) => void\n  as?: React.ElementType\n} & React.TextareaHTMLAttributes<HTMLDivElement>\n\n/**\n * Editable.\n */\n\nexport const Editable = (props: EditableProps) => {\n  const {\n    autoFocus,\n    decorate = defaultDecorate,\n    onDOMBeforeInput: propsOnDOMBeforeInput,\n    placeholder,\n    readOnly = false,\n    renderElement,\n    renderLeaf,\n    renderPlaceholder = props => <DefaultPlaceholder {...props} />,\n    scrollSelectionIntoView = defaultScrollSelectionIntoView,\n    style = {},\n    as: Component = 'div',\n    ...attributes\n  } = props\n  const editor = useSlate()\n  // Rerender editor when composition status changed\n  const [isComposing, setIsComposing] = useState(false)\n  const ref = useRef<HTMLDivElement>(null)\n  const deferredOperations = useRef<DeferredOperation[]>([])\n\n  // Update internal state on each render.\n  IS_READ_ONLY.set(editor, readOnly)\n\n  // Keep track of some state for the event handler logic.\n  const state = useMemo(\n    () => ({\n      hasInsertPrefixInCompositon: false,\n      isDraggingInternally: false,\n      isUpdatingSelection: false,\n      latestElement: null as DOMElement | null,\n    }),\n    []\n  )\n\n  // Whenever the editor updates...\n  useIsomorphicLayoutEffect(() => {\n    // Update element-related weak maps with the DOM element ref.\n    let window\n    if (ref.current && (window = getDefaultView(ref.current))) {\n      EDITOR_TO_WINDOW.set(editor, window)\n      EDITOR_TO_ELEMENT.set(editor, ref.current)\n      NODE_TO_ELEMENT.set(editor, ref.current)\n      ELEMENT_TO_NODE.set(ref.current, editor)\n    } else {\n      NODE_TO_ELEMENT.delete(editor)\n    }\n\n    // Make sure the DOM selection state is in sync.\n    const { selection } = editor\n    const root = ReactEditor.findDocumentOrShadowRoot(editor)\n    const domSelection = root.getSelection()\n\n    if (\n      ReactEditor.isComposing(editor) ||\n      !domSelection ||\n      !ReactEditor.isFocused(editor)\n    ) {\n      return\n    }\n\n    const hasDomSelection = domSelection.type !== 'None'\n\n    // If the DOM selection is properly unset, we're done.\n    if (!selection && !hasDomSelection) {\n      return\n    }\n\n    // verify that the dom selection is in the editor\n    const editorElement = EDITOR_TO_ELEMENT.get(editor)!\n    let hasDomSelectionInEditor = false\n    if (\n      editorElement.contains(domSelection.anchorNode) &&\n      editorElement.contains(domSelection.focusNode)\n    ) {\n      hasDomSelectionInEditor = true\n    }\n\n    // If the DOM selection is in the editor and the editor selection is already correct, we're done.\n    if (hasDomSelection && hasDomSelectionInEditor && selection) {\n      const slateRange = ReactEditor.toSlateRange(editor, domSelection, {\n        exactMatch: true,\n\n        // domSelection is not necessarily a valid Slate range\n        // (e.g. when clicking on contentEditable:false element)\n        suppressThrow: true,\n      })\n      if (slateRange && Range.equals(slateRange, selection)) {\n        return\n      }\n    }\n\n    // when <Editable/> is being controlled through external value\n    // then its children might just change - DOM responds to it on its own\n    // but Slate's value is not being updated through any operation\n    // and thus it doesn't transform selection on its own\n    if (selection && !ReactEditor.hasRange(editor, selection)) {\n      editor.selection = ReactEditor.toSlateRange(editor, domSelection, {\n        exactMatch: false,\n        suppressThrow: false,\n      })\n      return\n    }\n\n    // Otherwise the DOM selection is out of sync, so update it.\n    state.isUpdatingSelection = true\n\n    const newDomRange = selection && ReactEditor.toDOMRange(editor, selection)\n    if (newDomRange) {\n      if (Range.isBackward(selection!)) {\n        domSelection.setBaseAndExtent(\n          newDomRange.endContainer,\n          newDomRange.endOffset,\n          newDomRange.startContainer,\n          newDomRange.startOffset\n        )\n      } else {\n        domSelection.setBaseAndExtent(\n          newDomRange.startContainer,\n          newDomRange.startOffset,\n          newDomRange.endContainer,\n          newDomRange.endOffset\n        )\n      }\n      scrollSelectionIntoView(editor, newDomRange)\n    } else {\n      domSelection.removeAllRanges()\n    }\n\n    setTimeout(() => {\n      // COMPAT: In Firefox, it's not enough to create a range, you also need\n      // to focus the contenteditable element too. (2016/11/16)\n      if (newDomRange && IS_FIREFOX) {\n        const el = ReactEditor.toDOMNode(editor, editor)\n        el.focus()\n      }\n\n      state.isUpdatingSelection = false\n    })\n  })\n\n  // The autoFocus TextareaHTMLAttribute doesn't do anything on a div, so it\n  // needs to be manually focused.\n  useEffect(() => {\n    if (ref.current && autoFocus) {\n      ref.current.focus()\n    }\n  }, [autoFocus])\n\n  // Listen on the native `selectionchange` event to be able to update any time\n  // the selection changes. This is required because React's `onSelect` is leaky\n  // and non-standard so it doesn't fire until after a selection has been\n  // released. This causes issues in situations where another change happens\n  // while a selection is being dragged.\n  const onDOMSelectionChange = useCallback(\n    throttle(() => {\n      if (\n        !ReactEditor.isComposing(editor) &&\n        !state.isUpdatingSelection &&\n        !state.isDraggingInternally\n      ) {\n        const root = ReactEditor.findDocumentOrShadowRoot(editor)\n        const { activeElement } = root\n        const el = ReactEditor.toDOMNode(editor, editor)\n        const domSelection = root.getSelection()\n\n        if (activeElement === el) {\n          state.latestElement = activeElement\n          IS_FOCUSED.set(editor, true)\n        } else {\n          IS_FOCUSED.delete(editor)\n        }\n\n        if (!domSelection) {\n          return Transforms.deselect(editor)\n        }\n\n        const { anchorNode, focusNode } = domSelection\n\n        const anchorNodeSelectable =\n          hasEditableTarget(editor, anchorNode) ||\n          isTargetInsideNonReadonlyVoid(editor, anchorNode)\n\n        const focusNodeSelectable =\n          hasEditableTarget(editor, focusNode) ||\n          isTargetInsideNonReadonlyVoid(editor, focusNode)\n\n        if (anchorNodeSelectable && focusNodeSelectable) {\n          const range = ReactEditor.toSlateRange(editor, domSelection, {\n            exactMatch: false,\n            suppressThrow: false,\n          })\n          Transforms.select(editor, range)\n        }\n      }\n    }, 100),\n    [readOnly]\n  )\n\n  const scheduleOnDOMSelectionChange = useMemo(\n    () => debounce(onDOMSelectionChange, 0),\n    [onDOMSelectionChange]\n  )\n\n  // Listen on the native `beforeinput` event to get real \"Level 2\" events. This\n  // is required because React's `beforeinput` is fake and never really attaches\n  // to the real event sadly. (2019/11/01)\n  // https://github.com/facebook/react/issues/11211\n  const onDOMBeforeInput = useCallback(\n    (event: InputEvent) => {\n      if (\n        !readOnly &&\n        hasEditableTarget(editor, event.target) &&\n        !isDOMEventHandled(event, propsOnDOMBeforeInput)\n      ) {\n        // Some IMEs/Chrome extensions like e.g. Grammarly set the selection immediately before\n        // triggering a `beforeinput` expecting the change to be applied to the immediately before\n        // set selection.\n        scheduleOnDOMSelectionChange.flush()\n        onDOMSelectionChange.flush()\n\n        const { selection } = editor\n        const { inputType: type } = event\n        const data = (event as any).dataTransfer || event.data || undefined\n\n        // These two types occur while a user is composing text and can't be\n        // cancelled. Let them through and wait for the composition to end.\n        if (\n          type === 'insertCompositionText' ||\n          type === 'deleteCompositionText'\n        ) {\n          return\n        }\n\n        let native = false\n        if (\n          type === 'insertText' &&\n          selection &&\n          Range.isCollapsed(selection) &&\n          // Only use native character insertion for single characters a-z or space for now.\n          // Long-press events (hold a + press 4 = ä) to choose a special character otherwise\n          // causes duplicate inserts.\n          event.data &&\n          event.data.length === 1 &&\n          /[a-z ]/i.test(event.data) &&\n          // Chrome has issues correctly editing the start of nodes: https://bugs.chromium.org/p/chromium/issues/detail?id=1249405\n          // When there is an inline element, e.g. a link, and you select\n          // right after it (the start of the next node).\n          selection.anchor.offset !== 0\n        ) {\n          native = true\n\n          // Skip native if there are marks, as\n          // `insertText` will insert a node, not just text.\n          if (editor.marks) {\n            native = false\n          }\n\n          // Chrome also has issues correctly editing the end of anchor elements: https://bugs.chromium.org/p/chromium/issues/detail?id=1259100\n          // Therefore we don't allow native events to insert text at the end of anchor nodes.\n          const { anchor } = selection\n\n          const [node, offset] = ReactEditor.toDOMPoint(editor, anchor)\n          const anchorNode = node.parentElement?.closest('a')\n\n          if (anchorNode && ReactEditor.hasDOMNode(editor, anchorNode)) {\n            const { document } = ReactEditor.getWindow(editor)\n\n            // Find the last text node inside the anchor.\n            const lastText = document\n              .createTreeWalker(anchorNode, NodeFilter.SHOW_TEXT)\n              .lastChild() as DOMText | null\n\n            if (lastText === node && lastText.textContent?.length === offset) {\n              native = false\n            }\n          }\n        }\n\n        // COMPAT: For the deleting forward/backward input types we don't want\n        // to change the selection because it is the range that will be deleted,\n        // and those commands determine that for themselves.\n        if (!type.startsWith('delete') || type.startsWith('deleteBy')) {\n          const [targetRange] = (event as any).getTargetRanges()\n\n          if (targetRange) {\n            const range = ReactEditor.toSlateRange(editor, targetRange, {\n              exactMatch: false,\n              suppressThrow: false,\n            })\n\n            if (!selection || !Range.equals(selection, range)) {\n              native = false\n\n              const selectionRef =\n                editor.selection && Editor.rangeRef(editor, editor.selection)\n\n              Transforms.select(editor, range)\n\n              if (selectionRef) {\n                EDITOR_TO_USER_SELECTION.set(editor, selectionRef)\n              }\n            }\n          }\n        }\n\n        if (!native) {\n          event.preventDefault()\n        }\n\n        // COMPAT: If the selection is expanded, even if the command seems like\n        // a delete forward/backward command it should delete the selection.\n        if (\n          selection &&\n          Range.isExpanded(selection) &&\n          type.startsWith('delete')\n        ) {\n          const direction = type.endsWith('Backward') ? 'backward' : 'forward'\n          Editor.deleteFragment(editor, { direction })\n          return\n        }\n\n        switch (type) {\n          case 'deleteByComposition':\n          case 'deleteByCut':\n          case 'deleteByDrag': {\n            Editor.deleteFragment(editor)\n            break\n          }\n\n          case 'deleteContent':\n          case 'deleteContentForward': {\n            Editor.deleteForward(editor)\n            break\n          }\n\n          case 'deleteContentBackward': {\n            Editor.deleteBackward(editor)\n            break\n          }\n\n          case 'deleteEntireSoftLine': {\n            Editor.deleteBackward(editor, { unit: 'line' })\n            Editor.deleteForward(editor, { unit: 'line' })\n            break\n          }\n\n          case 'deleteHardLineBackward': {\n            Editor.deleteBackward(editor, { unit: 'block' })\n            break\n          }\n\n          case 'deleteSoftLineBackward': {\n            Editor.deleteBackward(editor, { unit: 'line' })\n            break\n          }\n\n          case 'deleteHardLineForward': {\n            Editor.deleteForward(editor, { unit: 'block' })\n            break\n          }\n\n          case 'deleteSoftLineForward': {\n            Editor.deleteForward(editor, { unit: 'line' })\n            break\n          }\n\n          case 'deleteWordBackward': {\n            Editor.deleteBackward(editor, { unit: 'word' })\n            break\n          }\n\n          case 'deleteWordForward': {\n            Editor.deleteForward(editor, { unit: 'word' })\n            break\n          }\n\n          case 'insertLineBreak':\n            Editor.insertSoftBreak(editor)\n            break\n\n          case 'insertParagraph': {\n            Editor.insertBreak(editor)\n            break\n          }\n\n          case 'insertFromComposition':\n          case 'insertFromDrop':\n          case 'insertFromPaste':\n          case 'insertFromYank':\n          case 'insertReplacementText':\n          case 'insertText': {\n            const { selection } = editor\n            if (selection) {\n              if (Range.isExpanded(selection)) {\n                Editor.deleteFragment(editor)\n              }\n            }\n\n            if (type === 'insertFromComposition') {\n              // COMPAT: in Safari, `compositionend` is dispatched after the\n              // `beforeinput` for \"insertFromComposition\". But if we wait for it\n              // then we will abort because we're still composing and the selection\n              // won't be updated properly.\n              // https://www.w3.org/TR/input-events-2/\n              if (ReactEditor.isComposing(editor)) {\n                setIsComposing(false)\n                IS_COMPOSING.set(editor, false)\n              }\n            }\n\n            // use a weak comparison instead of 'instanceof' to allow\n            // programmatic access of paste events coming from external windows\n            // like cypress where cy.window does not work realibly\n            if (data?.constructor.name === 'DataTransfer') {\n              ReactEditor.insertData(editor, data)\n            } else if (typeof data === 'string') {\n              // Only insertText operations use the native functionality, for now.\n              // Potentially expand to single character deletes, as well.\n              if (native) {\n                deferredOperations.current.push(() =>\n                  Editor.insertText(editor, data)\n                )\n              } else {\n                Editor.insertText(editor, data)\n              }\n            }\n\n            break\n          }\n        }\n\n        // Restore the actual user section if nothing manually set it.\n        const toRestore = EDITOR_TO_USER_SELECTION.get(editor)?.unref()\n        EDITOR_TO_USER_SELECTION.delete(editor)\n\n        if (\n          toRestore &&\n          (!editor.selection || !Range.equals(editor.selection, toRestore))\n        ) {\n          Transforms.select(editor, toRestore)\n        }\n      }\n    },\n    [readOnly, propsOnDOMBeforeInput]\n  )\n\n  // Attach a native DOM event handler for `beforeinput` events, because React's\n  // built-in `onBeforeInput` is actually a leaky polyfill that doesn't expose\n  // real `beforeinput` events sadly... (2019/11/04)\n  // https://github.com/facebook/react/issues/11211\n  useIsomorphicLayoutEffect(() => {\n    if (ref.current && HAS_BEFORE_INPUT_SUPPORT) {\n      // @ts-ignore The `beforeinput` event isn't recognized.\n      ref.current.addEventListener('beforeinput', onDOMBeforeInput)\n    }\n\n    return () => {\n      if (ref.current && HAS_BEFORE_INPUT_SUPPORT) {\n        // @ts-ignore The `beforeinput` event isn't recognized.\n        ref.current.removeEventListener('beforeinput', onDOMBeforeInput)\n      }\n    }\n  }, [onDOMBeforeInput])\n\n  // Attach a native DOM event handler for `selectionchange`, because React's\n  // built-in `onSelect` handler doesn't fire for all selection changes. It's a\n  // leaky polyfill that only fires on keypresses or clicks. Instead, we want to\n  // fire for any change to the selection inside the editor. (2019/11/04)\n  // https://github.com/facebook/react/issues/5785\n  useIsomorphicLayoutEffect(() => {\n    const window = ReactEditor.getWindow(editor)\n    window.document.addEventListener(\n      'selectionchange',\n      scheduleOnDOMSelectionChange\n    )\n\n    return () => {\n      window.document.removeEventListener(\n        'selectionchange',\n        scheduleOnDOMSelectionChange\n      )\n    }\n  }, [scheduleOnDOMSelectionChange])\n\n  const decorations = decorate([editor, []])\n\n  if (\n    placeholder &&\n    editor.children.length === 1 &&\n    Array.from(Node.texts(editor)).length === 1 &&\n    Node.string(editor) === '' &&\n    !isComposing\n  ) {\n    const start = Editor.start(editor, [])\n    decorations.push({\n      [PLACEHOLDER_SYMBOL]: true,\n      placeholder,\n      anchor: start,\n      focus: start,\n    })\n  }\n\n  return (\n    <ReadOnlyContext.Provider value={readOnly}>\n      <DecorateContext.Provider value={decorate}>\n        <Component\n          role={readOnly ? undefined : 'textbox'}\n          {...attributes}\n          // COMPAT: Certain browsers don't support the `beforeinput` event, so we'd\n          // have to use hacks to make these replacement-based features work.\n          // For SSR situations HAS_BEFORE_INPUT_SUPPORT is false and results in prop\n          // mismatch warning app moves to browser. Pass-through consumer props when\n          // not CAN_USE_DOM (SSR) and default to falsy value\n          spellCheck={\n            HAS_BEFORE_INPUT_SUPPORT || !CAN_USE_DOM\n              ? attributes.spellCheck\n              : false\n          }\n          autoCorrect={\n            HAS_BEFORE_INPUT_SUPPORT || !CAN_USE_DOM\n              ? attributes.autoCorrect\n              : 'false'\n          }\n          autoCapitalize={\n            HAS_BEFORE_INPUT_SUPPORT || !CAN_USE_DOM\n              ? attributes.autoCapitalize\n              : 'false'\n          }\n          data-slate-editor\n          data-slate-node=\"value\"\n          // explicitly set this\n          contentEditable={!readOnly}\n          // in some cases, a decoration needs access to the range / selection to decorate a text node,\n          // then you will select the whole text node when you select part the of text\n          // this magic zIndex=\"-1\" will fix it\n          zindex={-1}\n          suppressContentEditableWarning\n          ref={ref}\n          style={{\n            // Allow positioning relative to the editable element.\n            position: 'relative',\n            // Prevent the default outline styles.\n            outline: 'none',\n            // Preserve adjacent whitespace and new lines.\n            whiteSpace: 'pre-wrap',\n            // Allow words to break if they are too long.\n            wordWrap: 'break-word',\n            // Allow for passed-in styles to override anything.\n            ...style,\n          }}\n          onBeforeInput={useCallback(\n            (event: React.FormEvent<HTMLDivElement>) => {\n              // COMPAT: Certain browsers don't support the `beforeinput` event, so we\n              // fall back to React's leaky polyfill instead just for it. It\n              // only works for the `insertText` input type.\n              if (\n                !HAS_BEFORE_INPUT_SUPPORT &&\n                !readOnly &&\n                !isEventHandled(event, attributes.onBeforeInput) &&\n                hasEditableTarget(editor, event.target)\n              ) {\n                event.preventDefault()\n                if (!ReactEditor.isComposing(editor)) {\n                  const text = (event as any).data as string\n                  Editor.insertText(editor, text)\n                }\n              }\n            },\n            [readOnly]\n          )}\n          onInput={useCallback((event: React.SyntheticEvent) => {\n            // Flush native operations, as native events will have propogated\n            // and we can correctly compare DOM text values in components\n            // to stop rendering, so that browser functions like autocorrect\n            // and spellcheck work as expected.\n            for (const op of deferredOperations.current) {\n              op()\n            }\n            deferredOperations.current = []\n          }, [])}\n          onBlur={useCallback(\n            (event: React.FocusEvent<HTMLDivElement>) => {\n              if (\n                readOnly ||\n                state.isUpdatingSelection ||\n                !hasEditableTarget(editor, event.target) ||\n                isEventHandled(event, attributes.onBlur)\n              ) {\n                return\n              }\n\n              // COMPAT: If the current `activeElement` is still the previous\n              // one, this is due to the window being blurred when the tab\n              // itself becomes unfocused, so we want to abort early to allow to\n              // editor to stay focused when the tab becomes focused again.\n              const root = ReactEditor.findDocumentOrShadowRoot(editor)\n              if (state.latestElement === root.activeElement) {\n                return\n              }\n\n              const { relatedTarget } = event\n              const el = ReactEditor.toDOMNode(editor, editor)\n\n              // COMPAT: The event should be ignored if the focus is returning\n              // to the editor from an embedded editable element (eg. an <input>\n              // element inside a void node).\n              if (relatedTarget === el) {\n                return\n              }\n\n              // COMPAT: The event should be ignored if the focus is moving from\n              // the editor to inside a void node's spacer element.\n              if (\n                isDOMElement(relatedTarget) &&\n                relatedTarget.hasAttribute('data-slate-spacer')\n              ) {\n                return\n              }\n\n              // COMPAT: The event should be ignored if the focus is moving to a\n              // non- editable section of an element that isn't a void node (eg.\n              // a list item of the check list example).\n              if (\n                relatedTarget != null &&\n                isDOMNode(relatedTarget) &&\n                ReactEditor.hasDOMNode(editor, relatedTarget)\n              ) {\n                const node = ReactEditor.toSlateNode(editor, relatedTarget)\n\n                if (Element.isElement(node) && !editor.isVoid(node)) {\n                  return\n                }\n              }\n\n              // COMPAT: Safari doesn't always remove the selection even if the content-\n              // editable element no longer has focus. Refer to:\n              // https://stackoverflow.com/questions/12353247/force-contenteditable-div-to-stop-accepting-input-after-it-loses-focus-under-web\n              if (IS_SAFARI) {\n                const domSelection = root.getSelection()\n                domSelection?.removeAllRanges()\n              }\n\n              IS_FOCUSED.delete(editor)\n            },\n            [readOnly, attributes.onBlur]\n          )}\n          onClick={useCallback(\n            (event: React.MouseEvent<HTMLDivElement>) => {\n              if (\n                hasTarget(editor, event.target) &&\n                !isEventHandled(event, attributes.onClick) &&\n                isDOMNode(event.target)\n              ) {\n                const node = ReactEditor.toSlateNode(editor, event.target)\n                const path = ReactEditor.findPath(editor, node)\n\n                // At this time, the Slate document may be arbitrarily different,\n                // because onClick handlers can change the document before we get here.\n                // Therefore we must check that this path actually exists,\n                // and that it still refers to the same node.\n                if (\n                  !Editor.hasPath(editor, path) ||\n                  Node.get(editor, path) !== node\n                ) {\n                  return\n                }\n\n                if (event.detail === TRIPLE_CLICK && path.length >= 1) {\n                  let blockPath = path\n                  if (!Editor.isBlock(editor, node)) {\n                    const block = Editor.above(editor, {\n                      match: n => Editor.isBlock(editor, n),\n                      at: path,\n                    })\n\n                    blockPath = block?.[1] ?? path.slice(0, 1)\n                  }\n\n                  const range = Editor.range(editor, blockPath)\n                  Transforms.select(editor, range)\n                  return\n                }\n\n                if (readOnly) {\n                  return\n                }\n\n                const start = Editor.start(editor, path)\n                const end = Editor.end(editor, path)\n                const startVoid = Editor.void(editor, { at: start })\n                const endVoid = Editor.void(editor, { at: end })\n\n                if (\n                  startVoid &&\n                  endVoid &&\n                  Path.equals(startVoid[1], endVoid[1])\n                ) {\n                  const range = Editor.range(editor, start)\n                  Transforms.select(editor, range)\n                }\n              }\n            },\n            [readOnly, attributes.onClick]\n          )}\n          onCompositionEnd={useCallback(\n            (event: React.CompositionEvent<HTMLDivElement>) => {\n              if (\n                hasEditableTarget(editor, event.target) &&\n                !isEventHandled(event, attributes.onCompositionEnd)\n              ) {\n                if (ReactEditor.isComposing(editor)) {\n                  setIsComposing(false)\n                  IS_COMPOSING.set(editor, false)\n                }\n\n                // COMPAT: In Chrome, `beforeinput` events for compositions\n                // aren't correct and never fire the \"insertFromComposition\"\n                // type that we need. So instead, insert whenever a composition\n                // ends since it will already have been committed to the DOM.\n                if (\n                  !IS_SAFARI &&\n                  !IS_FIREFOX_LEGACY &&\n                  !IS_IOS &&\n                  !IS_QQBROWSER &&\n                  !IS_WECHATBROWSER &&\n                  !IS_UC_MOBILE &&\n                  event.data\n                ) {\n                  Editor.insertText(editor, event.data)\n                }\n\n                if (editor.selection && Range.isCollapsed(editor.selection)) {\n                  const leafPath = editor.selection.anchor.path\n                  const currentTextNode = Node.leaf(editor, leafPath)\n                  if (state.hasInsertPrefixInCompositon) {\n                    state.hasInsertPrefixInCompositon = false\n                    Editor.withoutNormalizing(editor, () => {\n                      // remove Unicode BOM prefix added in `onCompositionStart`\n                      const text = currentTextNode.value.replace(/^\\uFEFF/, '')\n                      Transforms.delete(editor, {\n                        distance: currentTextNode.value.length,\n                        reverse: true,\n                      })\n                      Editor.insertText(editor, text)\n                    })\n                  }\n                }\n              }\n            },\n            [attributes.onCompositionEnd]\n          )}\n          onCompositionUpdate={useCallback(\n            (event: React.CompositionEvent<HTMLDivElement>) => {\n              if (\n                hasEditableTarget(editor, event.target) &&\n                !isEventHandled(event, attributes.onCompositionUpdate)\n              ) {\n                if (!ReactEditor.isComposing(editor)) {\n                  setIsComposing(true)\n                  IS_COMPOSING.set(editor, true)\n                }\n              }\n            },\n            [attributes.onCompositionUpdate]\n          )}\n          onCompositionStart={useCallback(\n            (event: React.CompositionEvent<HTMLDivElement>) => {\n              if (\n                hasEditableTarget(editor, event.target) &&\n                !isEventHandled(event, attributes.onCompositionStart)\n              ) {\n                const { selection, marks } = editor\n                if (selection) {\n                  if (Range.isExpanded(selection)) {\n                    Editor.deleteFragment(editor)\n                    return\n                  }\n                  const inline = Editor.above(editor, {\n                    match: n => Editor.isInline(editor, n),\n                    mode: 'highest',\n                  })\n                  if (inline) {\n                    const [, inlinePath] = inline\n                    if (Editor.isEnd(editor, selection.anchor, inlinePath)) {\n                      const point = Editor.after(editor, inlinePath)!\n                      Transforms.setSelection(editor, {\n                        anchor: point,\n                        focus: point,\n                      })\n                    }\n                  }\n                  // insert new node in advance to ensure composition text will insert\n                  // along with final input text\n                  // add Unicode BOM prefix to avoid normalize removing this node\n                  if (marks) {\n                    state.hasInsertPrefixInCompositon = true\n                    Transforms.insertNodes(\n                      editor,\n                      {\n                        value: '\\uFEFF',\n                        ...marks,\n                      },\n                      {\n                        select: true,\n                      }\n                    )\n                  }\n                }\n              }\n            },\n            [attributes.onCompositionStart]\n          )}\n          onCopy={useCallback(\n            (event: React.ClipboardEvent<HTMLDivElement>) => {\n              if (\n                hasEditableTarget(editor, event.target) &&\n                !isEventHandled(event, attributes.onCopy)\n              ) {\n                event.preventDefault()\n                ReactEditor.setFragmentData(editor, event.clipboardData, 'copy')\n              }\n            },\n            [attributes.onCopy]\n          )}\n          onCut={useCallback(\n            (event: React.ClipboardEvent<HTMLDivElement>) => {\n              if (\n                !readOnly &&\n                hasEditableTarget(editor, event.target) &&\n                !isEventHandled(event, attributes.onCut)\n              ) {\n                event.preventDefault()\n                ReactEditor.setFragmentData(editor, event.clipboardData, 'cut')\n                const { selection } = editor\n\n                if (selection) {\n                  if (Range.isExpanded(selection)) {\n                    Editor.deleteFragment(editor)\n                  } else {\n                    const node = Node.parent(editor, selection.anchor.path)\n                    if (Editor.isVoid(editor, node)) {\n                      Transforms.delete(editor)\n                    }\n                  }\n                }\n              }\n            },\n            [readOnly, attributes.onCut]\n          )}\n          onDragOver={useCallback(\n            (event: React.DragEvent<HTMLDivElement>) => {\n              if (\n                hasTarget(editor, event.target) &&\n                !isEventHandled(event, attributes.onDragOver)\n              ) {\n                // Only when the target is void, call `preventDefault` to signal\n                // that drops are allowed. Editable content is droppable by\n                // default, and calling `preventDefault` hides the cursor.\n                const node = ReactEditor.toSlateNode(editor, event.target)\n\n                if (Editor.isVoid(editor, node)) {\n                  event.preventDefault()\n                }\n              }\n            },\n            [attributes.onDragOver]\n          )}\n          onDragStart={useCallback(\n            (event: React.DragEvent<HTMLDivElement>) => {\n              if (\n                !readOnly &&\n                hasTarget(editor, event.target) &&\n                !isEventHandled(event, attributes.onDragStart)\n              ) {\n                const node = ReactEditor.toSlateNode(editor, event.target)\n                const path = ReactEditor.findPath(editor, node)\n                const voidMatch =\n                  Editor.isVoid(editor, node) ||\n                  Editor.void(editor, { at: path, voids: true })\n\n                // If starting a drag on a void node, make sure it is selected\n                // so that it shows up in the selection's fragment.\n                if (voidMatch) {\n                  const range = Editor.range(editor, path)\n                  Transforms.select(editor, range)\n                }\n\n                state.isDraggingInternally = true\n\n                ReactEditor.setFragmentData(editor, event.dataTransfer, 'drag')\n              }\n            },\n            [readOnly, attributes.onDragStart]\n          )}\n          onDrop={useCallback(\n            (event: React.DragEvent<HTMLDivElement>) => {\n              if (\n                !readOnly &&\n                hasTarget(editor, event.target) &&\n                !isEventHandled(event, attributes.onDrop)\n              ) {\n                event.preventDefault()\n\n                // Keep a reference to the dragged range before updating selection\n                const draggedRange = editor.selection\n\n                // Find the range where the drop happened\n                const range = ReactEditor.findEventRange(editor, event)\n                const data = event.dataTransfer\n\n                Transforms.select(editor, range)\n\n                if (state.isDraggingInternally) {\n                  if (\n                    draggedRange &&\n                    !Range.equals(draggedRange, range) &&\n                    !Editor.void(editor, { at: range, voids: true })\n                  ) {\n                    Transforms.delete(editor, {\n                      at: draggedRange,\n                    })\n                  }\n                }\n\n                ReactEditor.insertData(editor, data)\n\n                // When dragging from another source into the editor, it's possible\n                // that the current editor does not have focus.\n                if (!ReactEditor.isFocused(editor)) {\n                  ReactEditor.focus(editor)\n                }\n              }\n\n              state.isDraggingInternally = false\n            },\n            [readOnly, attributes.onDrop]\n          )}\n          onDragEnd={useCallback(\n            (event: React.DragEvent<HTMLDivElement>) => {\n              if (\n                !readOnly &&\n                state.isDraggingInternally &&\n                attributes.onDragEnd &&\n                hasTarget(editor, event.target)\n              ) {\n                attributes.onDragEnd(event)\n              }\n\n              // When dropping on a different droppable element than the current editor,\n              // `onDrop` is not called. So we need to clean up in `onDragEnd` instead.\n              // Note: `onDragEnd` is only called when `onDrop` is not called\n              state.isDraggingInternally = false\n            },\n            [readOnly, attributes.onDragEnd]\n          )}\n          onFocus={useCallback(\n            (event: React.FocusEvent<HTMLDivElement>) => {\n              if (\n                !readOnly &&\n                !state.isUpdatingSelection &&\n                hasEditableTarget(editor, event.target) &&\n                !isEventHandled(event, attributes.onFocus)\n              ) {\n                const el = ReactEditor.toDOMNode(editor, editor)\n                const root = ReactEditor.findDocumentOrShadowRoot(editor)\n                state.latestElement = root.activeElement\n\n                // COMPAT: If the editor has nested editable elements, the focus\n                // can go to them. In Firefox, this must be prevented because it\n                // results in issues with keyboard navigation. (2017/03/30)\n                if (IS_FIREFOX && event.target !== el) {\n                  el.focus()\n                  return\n                }\n\n                IS_FOCUSED.set(editor, true)\n              }\n            },\n            [readOnly, attributes.onFocus]\n          )}\n          onKeyDown={useCallback(\n            (event: React.KeyboardEvent<HTMLDivElement>) => {\n              if (!readOnly && hasEditableTarget(editor, event.target)) {\n                const { nativeEvent } = event\n\n                // COMPAT: The composition end event isn't fired reliably in all browsers,\n                // so we sometimes might end up stuck in a composition state even though we\n                // aren't composing any more.\n                if (\n                  ReactEditor.isComposing(editor) &&\n                  nativeEvent.isComposing === false\n                ) {\n                  IS_COMPOSING.set(editor, false)\n                  setIsComposing(false)\n                }\n\n                if (\n                  isEventHandled(event, attributes.onKeyDown) ||\n                  ReactEditor.isComposing(editor)\n                ) {\n                  return\n                }\n\n                const { selection } = editor\n                const element =\n                  editor.children[\n                    selection !== null ? selection.focus.path[0] : 0\n                  ]\n                const isRTL = getDirection(Node.string(element)) === 'rtl'\n\n                // COMPAT: Since we prevent the default behavior on\n                // `beforeinput` events, the browser doesn't think there's ever\n                // any history stack to undo or redo, so we have to manage these\n                // hotkeys ourselves. (2019/11/06)\n                if (Hotkeys.isRedo(nativeEvent)) {\n                  event.preventDefault()\n                  const maybeHistoryEditor: any = editor\n\n                  if (typeof maybeHistoryEditor.redo === 'function') {\n                    maybeHistoryEditor.redo()\n                  }\n\n                  return\n                }\n\n                if (Hotkeys.isUndo(nativeEvent)) {\n                  event.preventDefault()\n                  const maybeHistoryEditor: any = editor\n\n                  if (typeof maybeHistoryEditor.undo === 'function') {\n                    maybeHistoryEditor.undo()\n                  }\n\n                  return\n                }\n\n                // COMPAT: Certain browsers don't handle the selection updates\n                // properly. In Chrome, the selection isn't properly extended.\n                // And in Firefox, the selection isn't properly collapsed.\n                // (2017/10/17)\n                if (Hotkeys.isMoveLineBackward(nativeEvent)) {\n                  event.preventDefault()\n                  Transforms.move(editor, { unit: 'line', reverse: true })\n                  return\n                }\n\n                if (Hotkeys.isMoveLineForward(nativeEvent)) {\n                  event.preventDefault()\n                  Transforms.move(editor, { unit: 'line' })\n                  return\n                }\n\n                if (Hotkeys.isExtendLineBackward(nativeEvent)) {\n                  event.preventDefault()\n                  Transforms.move(editor, {\n                    unit: 'line',\n                    edge: 'focus',\n                    reverse: true,\n                  })\n                  return\n                }\n\n                if (Hotkeys.isExtendLineForward(nativeEvent)) {\n                  event.preventDefault()\n                  Transforms.move(editor, { unit: 'line', edge: 'focus' })\n                  return\n                }\n\n                // COMPAT: If a void node is selected, or a zero-width text node\n                // adjacent to an inline is selected, we need to handle these\n                // hotkeys manually because browsers won't be able to skip over\n                // the void node with the zero-width space not being an empty\n                // string.\n                if (Hotkeys.isMoveBackward(nativeEvent)) {\n                  event.preventDefault()\n\n                  if (selection && Range.isCollapsed(selection)) {\n                    Transforms.move(editor, { reverse: !isRTL })\n                  } else {\n                    Transforms.collapse(editor, { edge: 'start' })\n                  }\n\n                  return\n                }\n\n                if (Hotkeys.isMoveForward(nativeEvent)) {\n                  event.preventDefault()\n\n                  if (selection && Range.isCollapsed(selection)) {\n                    Transforms.move(editor, { reverse: isRTL })\n                  } else {\n                    Transforms.collapse(editor, { edge: 'end' })\n                  }\n\n                  return\n                }\n\n                if (Hotkeys.isMoveWordBackward(nativeEvent)) {\n                  event.preventDefault()\n\n                  if (selection && Range.isExpanded(selection)) {\n                    Transforms.collapse(editor, { edge: 'focus' })\n                  }\n\n                  Transforms.move(editor, { unit: 'word', reverse: !isRTL })\n                  return\n                }\n\n                if (Hotkeys.isMoveWordForward(nativeEvent)) {\n                  event.preventDefault()\n\n                  if (selection && Range.isExpanded(selection)) {\n                    Transforms.collapse(editor, { edge: 'focus' })\n                  }\n\n                  Transforms.move(editor, { unit: 'word', reverse: isRTL })\n                  return\n                }\n\n                // COMPAT: Certain browsers don't support the `beforeinput` event, so we\n                // fall back to guessing at the input intention for hotkeys.\n                // COMPAT: In iOS, some of these hotkeys are handled in the\n                if (!HAS_BEFORE_INPUT_SUPPORT) {\n                  // We don't have a core behavior for these, but they change the\n                  // DOM if we don't prevent them, so we have to.\n                  if (\n                    Hotkeys.isBold(nativeEvent) ||\n                    Hotkeys.isItalic(nativeEvent) ||\n                    Hotkeys.isTransposeCharacter(nativeEvent)\n                  ) {\n                    event.preventDefault()\n                    return\n                  }\n\n                  if (Hotkeys.isSoftBreak(nativeEvent)) {\n                    event.preventDefault()\n                    Editor.insertSoftBreak(editor)\n                    return\n                  }\n\n                  if (Hotkeys.isSplitBlock(nativeEvent)) {\n                    event.preventDefault()\n                    Editor.insertBreak(editor)\n                    return\n                  }\n\n                  if (Hotkeys.isDeleteBackward(nativeEvent)) {\n                    event.preventDefault()\n\n                    if (selection && Range.isExpanded(selection)) {\n                      Editor.deleteFragment(editor, { direction: 'backward' })\n                    } else {\n                      Editor.deleteBackward(editor)\n                    }\n\n                    return\n                  }\n\n                  if (Hotkeys.isDeleteForward(nativeEvent)) {\n                    event.preventDefault()\n\n                    if (selection && Range.isExpanded(selection)) {\n                      Editor.deleteFragment(editor, { direction: 'forward' })\n                    } else {\n                      Editor.deleteForward(editor)\n                    }\n\n                    return\n                  }\n\n                  if (Hotkeys.isDeleteLineBackward(nativeEvent)) {\n                    event.preventDefault()\n\n                    if (selection && Range.isExpanded(selection)) {\n                      Editor.deleteFragment(editor, { direction: 'backward' })\n                    } else {\n                      Editor.deleteBackward(editor, { unit: 'line' })\n                    }\n\n                    return\n                  }\n\n                  if (Hotkeys.isDeleteLineForward(nativeEvent)) {\n                    event.preventDefault()\n\n                    if (selection && Range.isExpanded(selection)) {\n                      Editor.deleteFragment(editor, { direction: 'forward' })\n                    } else {\n                      Editor.deleteForward(editor, { unit: 'line' })\n                    }\n\n                    return\n                  }\n\n                  if (Hotkeys.isDeleteWordBackward(nativeEvent)) {\n                    event.preventDefault()\n\n                    if (selection && Range.isExpanded(selection)) {\n                      Editor.deleteFragment(editor, { direction: 'backward' })\n                    } else {\n                      Editor.deleteBackward(editor, { unit: 'word' })\n                    }\n\n                    return\n                  }\n\n                  if (Hotkeys.isDeleteWordForward(nativeEvent)) {\n                    event.preventDefault()\n\n                    if (selection && Range.isExpanded(selection)) {\n                      Editor.deleteFragment(editor, { direction: 'forward' })\n                    } else {\n                      Editor.deleteForward(editor, { unit: 'word' })\n                    }\n\n                    return\n                  }\n                } else {\n                  if (IS_CHROME || IS_SAFARI) {\n                    // COMPAT: Chrome and Safari support `beforeinput` event but do not fire\n                    // an event when deleting backwards in a selected void inline node\n                    if (\n                      selection &&\n                      (Hotkeys.isDeleteBackward(nativeEvent) ||\n                        Hotkeys.isDeleteForward(nativeEvent)) &&\n                      Range.isCollapsed(selection)\n                    ) {\n                      const currentNode = Node.parent(\n                        editor,\n                        selection.anchor.path\n                      )\n\n                      if (\n                        Element.isElement(currentNode) &&\n                        Editor.isVoid(editor, currentNode) &&\n                        Editor.isInline(editor, currentNode)\n                      ) {\n                        event.preventDefault()\n                        Editor.deleteBackward(editor, { unit: 'block' })\n\n                        return\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            [readOnly, attributes.onKeyDown]\n          )}\n          onPaste={useCallback(\n            (event: React.ClipboardEvent<HTMLDivElement>) => {\n              if (\n                !readOnly &&\n                hasEditableTarget(editor, event.target) &&\n                !isEventHandled(event, attributes.onPaste)\n              ) {\n                // COMPAT: Certain browsers don't support the `beforeinput` event, so we\n                // fall back to React's `onPaste` here instead.\n                // COMPAT: Firefox, Chrome and Safari don't emit `beforeinput` events\n                // when \"paste without formatting\" is used, so fallback. (2020/02/20)\n                if (\n                  !HAS_BEFORE_INPUT_SUPPORT ||\n                  isPlainTextOnlyPaste(event.nativeEvent)\n                ) {\n                  event.preventDefault()\n                  ReactEditor.insertData(editor, event.clipboardData)\n                }\n              }\n            },\n            [readOnly, attributes.onPaste]\n          )}\n        >\n          <Children\n            decorations={decorations}\n            node={editor}\n            renderElement={renderElement}\n            renderPlaceholder={renderPlaceholder}\n            renderLeaf={renderLeaf}\n            selection={editor.selection}\n          />\n        </Component>\n      </DecorateContext.Provider>\n    </ReadOnlyContext.Provider>\n  )\n}\n\n/**\n * The props that get passed to renderPlaceholder\n */\nexport type RenderPlaceholderProps = {\n  children: any\n  attributes: {\n    'data-slate-placeholder': boolean\n    dir?: 'rtl'\n    contentEditable: boolean\n    ref: React.RefObject<any>\n    style: React.CSSProperties\n  }\n}\n\n/**\n * The default placeholder element\n */\n\nexport const DefaultPlaceholder = ({\n  attributes,\n  children,\n}: RenderPlaceholderProps) => <span {...attributes}>{children}</span>\n\n/**\n * A default memoized decorate function.\n */\n\nexport const defaultDecorate: (entry: NodeEntry) => Range[] = () => []\n\n/**\n * A default implement to scroll dom range into view.\n */\n\nconst defaultScrollSelectionIntoView = (\n  editor: ReactEditor,\n  domRange: DOMRange\n) => {\n  // This was affecting the selection of multiple blocks and dragging behavior,\n  // so enabled only if the selection has been collapsed.\n  if (\n    !editor.selection ||\n    (editor.selection && Range.isCollapsed(editor.selection))\n  ) {\n    const leafEl = domRange.startContainer.parentElement!\n    leafEl.getBoundingClientRect = domRange.getBoundingClientRect.bind(domRange)\n    scrollIntoView(leafEl, {\n      scrollMode: 'if-needed',\n    })\n    delete leafEl.getBoundingClientRect\n  }\n}\n\n/**\n * Check if the target is in the editor.\n */\n\nexport const hasTarget = (\n  editor: ReactEditor,\n  target: EventTarget | null\n): target is DOMNode => {\n  return isDOMNode(target) && ReactEditor.hasDOMNode(editor, target)\n}\n\n/**\n * Check if the target is editable and in the editor.\n */\n\nexport const hasEditableTarget = (\n  editor: ReactEditor,\n  target: EventTarget | null\n): target is DOMNode => {\n  return (\n    isDOMNode(target) &&\n    ReactEditor.hasDOMNode(editor, target, { editable: true })\n  )\n}\n\n/**\n * Check if the target is inside void and in an non-readonly editor.\n */\n\nexport const isTargetInsideNonReadonlyVoid = (\n  editor: ReactEditor,\n  target: EventTarget | null\n): boolean => {\n  if (IS_READ_ONLY.get(editor)) return false\n\n  const slateNode =\n    hasTarget(editor, target) && ReactEditor.toSlateNode(editor, target)\n  return Editor.isVoid(editor, slateNode)\n}\n\n/**\n * Check if an event is overrided by a handler.\n */\n\nexport const isEventHandled = <\n  EventType extends React.SyntheticEvent<unknown, unknown>\n>(\n  event: EventType,\n  handler?: (event: EventType) => void | boolean\n) => {\n  if (!handler) {\n    return false\n  }\n  // The custom event handler may return a boolean to specify whether the event\n  // shall be treated as being handled or not.\n  const shouldTreatEventAsHandled = handler(event)\n\n  if (shouldTreatEventAsHandled != null) {\n    return shouldTreatEventAsHandled\n  }\n\n  return event.isDefaultPrevented() || event.isPropagationStopped()\n}\n\n/**\n * Check if a DOM event is overrided by a handler.\n */\n\nexport const isDOMEventHandled = <E extends Event>(\n  event: E,\n  handler?: (event: E) => void | boolean\n) => {\n  if (!handler) {\n    return false\n  }\n\n  // The custom event handler may return a boolean to specify whether the event\n  // shall be treated as being handled or not.\n  const shouldTreatEventAsHandled = handler(event)\n\n  if (shouldTreatEventAsHandled != null) {\n    return shouldTreatEventAsHandled\n  }\n\n  return event.defaultPrevented\n}\n","import { Editor, Path, Range, Text } from 'slate'\n\nimport { ReactEditor } from '../../'\nimport { DOMNode } from '../../utils/dom'\n\nexport type Diff = {\n  start: number\n  end: number\n  insertText: string\n  removeText: string\n}\n\nexport interface TextInsertion {\n  text: Diff\n  path: Path\n}\n\ntype TextRange = {\n  start: number\n  end: number\n}\n\n/**\n * Returns the number of characters that are the same at the beginning of the\n * String.\n *\n * @param prev  the previous text\n * @param next  the next text\n * @returns the offset of the start of the difference; null if there is no difference\n */\nfunction getDiffStart(prev: string, next: string): number | null {\n  const length = Math.min(prev.length, next.length)\n\n  for (let i = 0; i < length; i++) {\n    if (prev.charAt(i) !== next.charAt(i)) return i\n  }\n\n  if (prev.length !== next.length) return length\n  return null\n}\n\n/**\n * Returns the number of characters that are the same at the end of the String\n * up to `max`. Max prevents double-counting characters when there are\n * multiple duplicate characters around the diff area.\n *\n * @param prev  the previous text\n * @param next  the next text\n * @param max  the max length to test.\n * @returns number of characters that are the same at the end of the string\n */\nfunction getDiffEnd(prev: string, next: string, max: number): number | null {\n  const prevLength = prev.length\n  const nextLength = next.length\n  const length = Math.min(prevLength, nextLength, max)\n\n  for (let i = 0; i < length; i++) {\n    const prevChar = prev.charAt(prevLength - i - 1)\n    const nextChar = next.charAt(nextLength - i - 1)\n    if (prevChar !== nextChar) return i\n  }\n\n  if (prev.length !== next.length) return length\n  return null\n}\n\n/**\n * Takes two strings and returns an object representing two offsets. The\n * first, `start` represents the number of characters that are the same at\n * the front of the String. The `end` represents the number of characters\n * that are the same at the end of the String.\n *\n * Returns null if they are identical.\n *\n * @param prev  the previous text\n * @param next  the next text\n * @returns the difference text range; null if there are no differences.\n */\nfunction getDiffOffsets(prev: string, next: string): TextRange | null {\n  if (prev === next) return null\n  const start = getDiffStart(prev, next)\n  if (start === null) return null\n  const maxEnd = Math.min(prev.length - start, next.length - start)\n  const end = getDiffEnd(prev, next, maxEnd)!\n  if (end === null) return null\n  return { start, end }\n}\n\n/**\n * Takes a text string and returns a slice from the string at the given text range\n *\n * @param text  the text\n * @param offsets  the text range\n * @returns the text slice at text range\n */\nfunction sliceText(text: string, offsets: TextRange): string {\n  return text.slice(offsets.start, text.length - offsets.end)\n}\n\n/**\n * Takes two strings and returns a smart diff that can be used to describe the\n * change in a way that can be used as operations like inserting, removing or\n * replacing text.\n *\n * @param prev the previous text\n * @param next the next text\n * @returns the text difference\n */\nexport function diffText(prev?: string, next?: string): Diff | null {\n  if (prev === undefined || next === undefined) return null\n  const offsets = getDiffOffsets(prev, next)\n  if (offsets == null) return null\n  const insertText = sliceText(next, offsets)\n  const removeText = sliceText(prev, offsets)\n  return {\n    start: offsets.start,\n    end: prev.length - offsets.end,\n    insertText,\n    removeText,\n  }\n}\n\nexport function combineInsertedText(insertedText: TextInsertion[]): string {\n  return insertedText.reduce((acc, { text }) => `${acc}${text.insertText}`, '')\n}\n\nexport function getTextInsertion<T extends Editor>(\n  editor: T,\n  domNode: DOMNode\n): TextInsertion | undefined {\n  const node = ReactEditor.toSlateNode(editor, domNode)\n\n  if (!Text.isText(node)) {\n    return undefined\n  }\n\n  const prevText = node.value\n  let nextText = domNode.textContent!\n\n  // textContent will pad an extra \\n when the textContent ends with an \\n\n  if (nextText.endsWith('\\n')) {\n    nextText = nextText.slice(0, nextText.length - 1)\n  }\n\n  // If the text is no different, there is no diff.\n  if (nextText !== prevText) {\n    const textDiff = diffText(prevText, nextText)\n    if (textDiff !== null) {\n      const textPath = ReactEditor.findPath(editor, node)\n\n      return {\n        text: textDiff,\n        path: textPath,\n      }\n    }\n  }\n\n  return undefined\n}\n\nexport function normalizeTextInsertionRange(\n  editor: Editor,\n  range: Range | null,\n  { path, text }: TextInsertion\n) {\n  const insertionRange = {\n    anchor: { path, offset: text.start },\n    focus: { path, offset: text.end },\n  }\n\n  if (!range || !Range.isCollapsed(range)) {\n    return insertionRange\n  }\n\n  const { insertText, removeText } = text\n  const isSingleCharacterInsertion =\n    insertText.length === 1 || removeText.length === 1\n\n  /**\n   * This code handles edge cases that arise from text diffing when the\n   * inserted or removed character is a single character, and the character\n   * right before or after the anchor is the same as the one being inserted or\n   * removed.\n   *\n   * Take this example: hello|o\n   *\n   * If another `o` is inserted at the selection's anchor in the example above,\n   * it should be inserted at the anchor, but using text diffing, we actually\n   * detect that the character was inserted after the second `o`:\n   *\n   * helloo[o]|\n   *\n   * Instead, in these very specific edge cases, we assume that the character\n   * needs to be inserted after the anchor rather than where the diff was found:\n   *\n   * hello[o]|o\n   */\n  if (isSingleCharacterInsertion && Path.equals(range.anchor.path, path)) {\n    const [text] = Array.from(\n      Editor.nodes(editor, { at: range, match: Text.isText })\n    )\n\n    if (text) {\n      const [node] = text\n      const { anchor } = range\n      const characterBeforeAnchor = node.value[anchor.offset - 1]\n      const characterAfterAnchor = node.value[anchor.offset]\n\n      if (insertText.length === 1 && insertText === characterAfterAnchor) {\n        // Assume text should be inserted at the anchor\n        return range\n      }\n\n      if (removeText.length === 1 && removeText === characterBeforeAnchor) {\n        // Assume text should be removed right before the anchor\n        return {\n          anchor: { path, offset: anchor.offset - 1 },\n          focus: { path, offset: anchor.offset },\n        }\n      }\n    }\n  }\n\n  return insertionRange\n}\n","/**\n * An auto-incrementing identifier for keys.\n */\n\nlet n = 0\n\n/**\n * A class that keeps track of a key string. We use a full class here because we\n * want to be able to use them as keys in `WeakMap` objects.\n */\n\nexport class Key {\n  id: string\n\n  constructor() {\n    this.id = `${n++}`\n  }\n}\n","import { Editor, Node, Path, Point, Range, Transforms, BaseEditor } from 'slate'\n\nimport { Key } from '../utils/key'\nimport {\n  EDITOR_TO_ELEMENT,\n  ELEMENT_TO_NODE,\n  IS_FOCUSED,\n  IS_READ_ONLY,\n  NODE_TO_INDEX,\n  NODE_TO_KEY,\n  NODE_TO_PARENT,\n  EDITOR_TO_WINDOW,\n  EDITOR_TO_KEY_TO_ELEMENT,\n  IS_COMPOSING,\n} from '../utils/weak-maps'\nimport {\n  DOMElement,\n  DOMNode,\n  DOMPoint,\n  DOMRange,\n  DOMSelection,\n  DOMStaticRange,\n  isDOMElement,\n  isDOMSelection,\n  normalizeDOMPoint,\n  hasShadowRoot,\n} from '../utils/dom'\nimport { IS_CHROME, IS_FIREFOX } from '../utils/environment'\n\n/**\n * A React and DOM-specific version of the `Editor` interface.\n */\n\nexport interface ReactEditor extends BaseEditor {\n  insertData: (data: DataTransfer) => void\n  insertFragmentData: (data: DataTransfer) => boolean\n  insertTextData: (data: DataTransfer) => boolean\n  setFragmentData: (\n    data: DataTransfer,\n    originEvent?: 'drag' | 'copy' | 'cut'\n  ) => void\n  hasRange: (editor: ReactEditor, range: Range) => boolean\n}\n\nexport const ReactEditor = {\n  /**\n   * Check if the user is currently composing inside the editor.\n   */\n\n  isComposing(editor: ReactEditor): boolean {\n    return !!IS_COMPOSING.get(editor)\n  },\n\n  /**\n   * Return the host window of the current editor.\n   */\n\n  getWindow(editor: ReactEditor): Window {\n    const window = EDITOR_TO_WINDOW.get(editor)\n    if (!window) {\n      throw new Error('Unable to find a host window element for this editor')\n    }\n    return window\n  },\n\n  /**\n   * Find a key for a Slate node.\n   */\n\n  findKey(editor: ReactEditor, node: Node): Key {\n    let key = NODE_TO_KEY.get(node)\n\n    if (!key) {\n      key = new Key()\n      NODE_TO_KEY.set(node, key)\n    }\n\n    return key\n  },\n\n  /**\n   * Find the path of Slate node.\n   */\n\n  findPath(editor: ReactEditor, node: Node): Path {\n    const path: Path = []\n    let child = node\n\n    while (true) {\n      const parent = NODE_TO_PARENT.get(child)\n\n      if (parent == null) {\n        if (Editor.isEditor(child)) {\n          return path\n        } else {\n          break\n        }\n      }\n\n      const i = NODE_TO_INDEX.get(child)\n\n      if (i == null) {\n        break\n      }\n\n      path.unshift(i)\n      child = parent\n    }\n\n    throw new Error(\n      `Unable to find the path for Slate node: ${JSON.stringify(node)}`\n    )\n  },\n\n  /**\n   * Find the DOM node that implements DocumentOrShadowRoot for the editor.\n   */\n\n  findDocumentOrShadowRoot(editor: ReactEditor): Document | ShadowRoot {\n    const el = ReactEditor.toDOMNode(editor, editor)\n    const root = el.getRootNode()\n\n    if (\n      (root instanceof Document || root instanceof ShadowRoot) &&\n      root.getSelection != null\n    ) {\n      return root\n    }\n\n    return el.ownerDocument\n  },\n\n  /**\n   * Check if the editor is focused.\n   */\n\n  isFocused(editor: ReactEditor): boolean {\n    return !!IS_FOCUSED.get(editor)\n  },\n\n  /**\n   * Check if the editor is in read-only mode.\n   */\n\n  isReadOnly(editor: ReactEditor): boolean {\n    return !!IS_READ_ONLY.get(editor)\n  },\n\n  /**\n   * Blur the editor.\n   */\n\n  blur(editor: ReactEditor): void {\n    const el = ReactEditor.toDOMNode(editor, editor)\n    const root = ReactEditor.findDocumentOrShadowRoot(editor)\n    IS_FOCUSED.set(editor, false)\n\n    if (root.activeElement === el) {\n      el.blur()\n    }\n  },\n\n  /**\n   * Focus the editor.\n   */\n\n  focus(editor: ReactEditor): void {\n    const el = ReactEditor.toDOMNode(editor, editor)\n    const root = ReactEditor.findDocumentOrShadowRoot(editor)\n    IS_FOCUSED.set(editor, true)\n\n    if (root.activeElement !== el) {\n      el.focus({ preventScroll: true })\n    }\n  },\n\n  /**\n   * Deselect the editor.\n   */\n\n  deselect(editor: ReactEditor): void {\n    const el = ReactEditor.toDOMNode(editor, editor)\n    const { selection } = editor\n    const root = ReactEditor.findDocumentOrShadowRoot(editor)\n    const domSelection = root.getSelection()\n\n    if (domSelection && domSelection.rangeCount > 0) {\n      domSelection.removeAllRanges()\n    }\n\n    if (selection) {\n      Transforms.deselect(editor)\n    }\n  },\n\n  /**\n   * Check if a DOM node is within the editor.\n   */\n\n  hasDOMNode(\n    editor: ReactEditor,\n    target: DOMNode,\n    options: { editable?: boolean } = {}\n  ): boolean {\n    const { editable = false } = options\n    const editorEl = ReactEditor.toDOMNode(editor, editor)\n    let targetEl\n\n    // COMPAT: In Firefox, reading `target.nodeType` will throw an error if\n    // target is originating from an internal \"restricted\" element (e.g. a\n    // stepper arrow on a number input). (2018/05/04)\n    // https://github.com/ianstormtaylor/slate/issues/1819\n    try {\n      targetEl = (isDOMElement(target)\n        ? target\n        : target.parentElement) as HTMLElement\n    } catch (err) {\n      if (\n        !err.message.includes('Permission denied to access property \"nodeType\"')\n      ) {\n        throw err\n      }\n    }\n\n    if (!targetEl) {\n      return false\n    }\n\n    return (\n      targetEl.closest(`[data-slate-editor]`) === editorEl &&\n      (!editable || targetEl.isContentEditable\n        ? true\n        : (typeof targetEl.isContentEditable === 'boolean' && // isContentEditable exists only on HTMLElement, and on other nodes it will be undefined\n            // this is the core logic that lets you know you got the right editor.selection instead of null when editor is contenteditable=\"false\"(readOnly)\n            targetEl.closest('[contenteditable=\"false\"]') === editorEl) ||\n          !!targetEl.getAttribute('data-slate-zero-width'))\n    )\n  },\n\n  /**\n   * Insert data from a `DataTransfer` into the editor.\n   */\n\n  insertData(editor: ReactEditor, data: DataTransfer): void {\n    editor.insertData(data)\n  },\n\n  /**\n   * Insert fragment data from a `DataTransfer` into the editor.\n   */\n\n  insertFragmentData(editor: ReactEditor, data: DataTransfer): boolean {\n    return editor.insertFragmentData(data)\n  },\n\n  /**\n   * Insert text data from a `DataTransfer` into the editor.\n   */\n\n  insertTextData(editor: ReactEditor, data: DataTransfer): boolean {\n    return editor.insertTextData(data)\n  },\n\n  /**\n   * Sets data from the currently selected fragment on a `DataTransfer`.\n   */\n\n  setFragmentData(\n    editor: ReactEditor,\n    data: DataTransfer,\n    originEvent?: 'drag' | 'copy' | 'cut'\n  ): void {\n    editor.setFragmentData(data, originEvent)\n  },\n\n  /**\n   * Find the native DOM element from a Slate node.\n   */\n\n  toDOMNode(editor: ReactEditor, node: Node): HTMLElement {\n    const KEY_TO_ELEMENT = EDITOR_TO_KEY_TO_ELEMENT.get(editor)\n    const domNode = Editor.isEditor(node)\n      ? EDITOR_TO_ELEMENT.get(editor)\n      : KEY_TO_ELEMENT?.get(ReactEditor.findKey(editor, node))\n\n    if (!domNode) {\n      throw new Error(\n        `Cannot resolve a DOM node from Slate node: ${JSON.stringify(node)}`\n      )\n    }\n\n    return domNode\n  },\n\n  /**\n   * Find a native DOM selection point from a Slate point.\n   */\n\n  toDOMPoint(editor: ReactEditor, point: Point): DOMPoint {\n    const [node] = Editor.node(editor, point.path)\n    const el = ReactEditor.toDOMNode(editor, node)\n    let domPoint: DOMPoint | undefined\n\n    // If we're inside a void node, force the offset to 0, otherwise the zero\n    // width spacing character will result in an incorrect offset of 1\n    if (Editor.void(editor, { at: point })) {\n      point = { path: point.path, offset: 0 }\n    }\n\n    // For each leaf, we need to isolate its content, which means filtering\n    // to its direct text and zero-width spans. (We have to filter out any\n    // other siblings that may have been rendered alongside them.)\n    const selector = `[data-slate-string], [data-slate-zero-width]`\n    const texts = Array.from(el.querySelectorAll(selector))\n    let start = 0\n\n    for (const text of texts) {\n      const domNode = text.childNodes[0] as HTMLElement\n\n      if (domNode == null || domNode.textContent == null) {\n        continue\n      }\n\n      const { length } = domNode.textContent\n      const attr = text.getAttribute('data-slate-length')\n      const trueLength = attr == null ? length : parseInt(attr, 10)\n      const end = start + trueLength\n\n      if (point.offset <= end) {\n        const offset = Math.min(length, Math.max(0, point.offset - start))\n        domPoint = [domNode, offset]\n        break\n      }\n\n      start = end\n    }\n\n    if (!domPoint) {\n      throw new Error(\n        `Cannot resolve a DOM point from Slate point: ${JSON.stringify(point)}`\n      )\n    }\n\n    return domPoint\n  },\n\n  /**\n   * Find a native DOM range from a Slate `range`.\n   *\n   * Notice: the returned range will always be ordinal regardless of the direction of Slate `range` due to DOM API limit.\n   *\n   * there is no way to create a reverse DOM Range using Range.setStart/setEnd\n   * according to https://dom.spec.whatwg.org/#concept-range-bp-set.\n   */\n\n  toDOMRange(editor: ReactEditor, range: Range): DOMRange {\n    const { anchor, focus } = range\n    const isBackward = Range.isBackward(range)\n    const domAnchor = ReactEditor.toDOMPoint(editor, anchor)\n    const domFocus = Range.isCollapsed(range)\n      ? domAnchor\n      : ReactEditor.toDOMPoint(editor, focus)\n\n    const window = ReactEditor.getWindow(editor)\n    const domRange = window.document.createRange()\n    const [startNode, startOffset] = isBackward ? domFocus : domAnchor\n    const [endNode, endOffset] = isBackward ? domAnchor : domFocus\n\n    // A slate Point at zero-width Leaf always has an offset of 0 but a native DOM selection at\n    // zero-width node has an offset of 1 so we have to check if we are in a zero-width node and\n    // adjust the offset accordingly.\n    const startEl = (isDOMElement(startNode)\n      ? startNode\n      : startNode.parentElement) as HTMLElement\n    const isStartAtZeroWidth = !!startEl.getAttribute('data-slate-zero-width')\n    const endEl = (isDOMElement(endNode)\n      ? endNode\n      : endNode.parentElement) as HTMLElement\n    const isEndAtZeroWidth = !!endEl.getAttribute('data-slate-zero-width')\n\n    domRange.setStart(startNode, isStartAtZeroWidth ? 1 : startOffset)\n    domRange.setEnd(endNode, isEndAtZeroWidth ? 1 : endOffset)\n    return domRange\n  },\n\n  /**\n   * Find a Slate node from a native DOM `element`.\n   */\n\n  toSlateNode(editor: ReactEditor, domNode: DOMNode): Node {\n    let domEl = isDOMElement(domNode) ? domNode : domNode.parentElement\n\n    if (domEl && !domEl.hasAttribute('data-slate-node')) {\n      domEl = domEl.closest(`[data-slate-node]`)\n    }\n\n    const node = domEl ? ELEMENT_TO_NODE.get(domEl as HTMLElement) : null\n\n    if (!node) {\n      throw new Error(`Cannot resolve a Slate node from DOM node: ${domEl}`)\n    }\n\n    return node\n  },\n\n  /**\n   * Get the target range from a DOM `event`.\n   */\n\n  findEventRange(editor: ReactEditor, event: any): Range {\n    if ('nativeEvent' in event) {\n      event = event.nativeEvent\n    }\n\n    const { clientX: x, clientY: y, target } = event\n\n    if (x == null || y == null) {\n      throw new Error(`Cannot resolve a Slate range from a DOM event: ${event}`)\n    }\n\n    const node = ReactEditor.toSlateNode(editor, event.target)\n    const path = ReactEditor.findPath(editor, node)\n\n    // If the drop target is inside a void node, move it into either the\n    // next or previous node, depending on which side the `x` and `y`\n    // coordinates are closest to.\n    if (Editor.isVoid(editor, node)) {\n      const rect = target.getBoundingClientRect()\n      const isPrev = editor.isInline(node)\n        ? x - rect.left < rect.left + rect.width - x\n        : y - rect.top < rect.top + rect.height - y\n\n      const edge = Editor.point(editor, path, {\n        edge: isPrev ? 'start' : 'end',\n      })\n      const point = isPrev\n        ? Editor.before(editor, edge)\n        : Editor.after(editor, edge)\n\n      if (point) {\n        const range = Editor.range(editor, point)\n        return range\n      }\n    }\n\n    // Else resolve a range from the caret position where the drop occured.\n    let domRange\n    const { document } = ReactEditor.getWindow(editor)\n\n    // COMPAT: In Firefox, `caretRangeFromPoint` doesn't exist. (2016/07/25)\n    if (document.caretRangeFromPoint) {\n      domRange = document.caretRangeFromPoint(x, y)\n    } else {\n      const position = document.caretPositionFromPoint(x, y)\n\n      if (position) {\n        domRange = document.createRange()\n        domRange.setStart(position.offsetNode, position.offset)\n        domRange.setEnd(position.offsetNode, position.offset)\n      }\n    }\n\n    if (!domRange) {\n      throw new Error(`Cannot resolve a Slate range from a DOM event: ${event}`)\n    }\n\n    // Resolve a Slate range from the DOM range.\n    const range = ReactEditor.toSlateRange(editor, domRange, {\n      exactMatch: false,\n      suppressThrow: false,\n    })\n    return range\n  },\n\n  /**\n   * Find a Slate point from a DOM selection's `domNode` and `domOffset`.\n   */\n\n  toSlatePoint<T extends boolean>(\n    editor: ReactEditor,\n    domPoint: DOMPoint,\n    options: {\n      exactMatch: T\n      suppressThrow: T\n    }\n  ): T extends true ? Point | null : Point {\n    const { exactMatch, suppressThrow } = options\n    const [nearestNode, nearestOffset] = exactMatch\n      ? domPoint\n      : normalizeDOMPoint(domPoint)\n    const parentNode = nearestNode.parentNode as DOMElement\n    let textNode: DOMElement | null = null\n    let offset = 0\n\n    if (parentNode) {\n      const editorEl = ReactEditor.toDOMNode(editor, editor)\n      const potentialVoidNode = parentNode.closest('[data-slate-void=\"true\"]')\n      // Need to ensure that the closest void node is actually a void node\n      // within this editor, and not a void node within some parent editor. This can happen\n      // if this editor is within a void node of another editor (\"nested editors\", like in\n      // the \"Editable Voids\" example on the docs site).\n      const voidNode =\n        potentialVoidNode && editorEl.contains(potentialVoidNode)\n          ? potentialVoidNode\n          : null\n      let leafNode = parentNode.closest('[data-slate-leaf]')\n      let domNode: DOMElement | null = null\n\n      // Calculate how far into the text node the `nearestNode` is, so that we\n      // can determine what the offset relative to the text node is.\n      if (leafNode) {\n        textNode = leafNode.closest('[data-slate-node=\"text\"]')\n\n        if (textNode) {\n          const window = ReactEditor.getWindow(editor)\n          const range = window.document.createRange()\n          range.setStart(textNode, 0)\n          range.setEnd(nearestNode, nearestOffset)\n\n          const contents = range.cloneContents()\n          const removals = [\n            ...Array.prototype.slice.call(\n              contents.querySelectorAll('[data-slate-zero-width]')\n            ),\n            ...Array.prototype.slice.call(\n              contents.querySelectorAll('[contenteditable=false]')\n            ),\n          ]\n\n          removals.forEach(el => {\n            el!.parentNode!.removeChild(el)\n          })\n\n          // COMPAT: Edge has a bug where Range.prototype.toString() will\n          // convert \\n into \\r\\n. The bug causes a loop when slate-react\n          // attempts to reposition its cursor to match the native position. Use\n          // textContent.length instead.\n          // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10291116/\n          offset = contents.textContent!.length\n          domNode = textNode\n        }\n      } else if (voidNode) {\n        // For void nodes, the element with the offset key will be a cousin, not an\n        // ancestor, so find it by going down from the nearest void parent.\n        leafNode = voidNode.querySelector('[data-slate-leaf]')!\n\n        // COMPAT: In read-only editors the leaf is not rendered.\n        if (!leafNode) {\n          offset = 1\n        } else {\n          textNode = leafNode.closest('[data-slate-node=\"text\"]')!\n          domNode = leafNode\n          offset = domNode.textContent!.length\n          domNode.querySelectorAll('[data-slate-zero-width]').forEach(el => {\n            offset -= el.textContent!.length\n          })\n        }\n      }\n\n      if (\n        domNode &&\n        offset === domNode.textContent!.length &&\n        // COMPAT: If the parent node is a Slate zero-width space, editor is\n        // because the text node should have no characters. However, during IME\n        // composition the ASCII characters will be prepended to the zero-width\n        // space, so subtract 1 from the offset to account for the zero-width\n        // space character.\n        (parentNode.hasAttribute('data-slate-zero-width') ||\n          // COMPAT: In Firefox, `range.cloneContents()` returns an extra trailing '\\n'\n          // when the document ends with a new-line character. This results in the offset\n          // length being off by one, so we need to subtract one to account for this.\n          (IS_FIREFOX && domNode.textContent?.endsWith('\\n\\n')))\n      ) {\n        offset--\n      }\n    }\n\n    if (!textNode) {\n      if (suppressThrow) {\n        return null as T extends true ? Point | null : Point\n      }\n      throw new Error(\n        `Cannot resolve a Slate point from DOM point: ${domPoint}`\n      )\n    }\n\n    // COMPAT: If someone is clicking from one Slate editor into another,\n    // the select event fires twice, once for the old editor's `element`\n    // first, and then afterwards for the correct `element`. (2017/03/03)\n    const slateNode = ReactEditor.toSlateNode(editor, textNode!)\n    const path = ReactEditor.findPath(editor, slateNode)\n    return { path, offset } as T extends true ? Point | null : Point\n  },\n\n  /**\n   * Find a Slate range from a DOM range or selection.\n   */\n\n  toSlateRange<T extends boolean>(\n    editor: ReactEditor,\n    domRange: DOMRange | DOMStaticRange | DOMSelection,\n    options: {\n      exactMatch: T\n      suppressThrow: T\n    }\n  ): T extends true ? Range | null : Range {\n    const { exactMatch, suppressThrow } = options\n    const el = isDOMSelection(domRange)\n      ? domRange.anchorNode\n      : domRange.startContainer\n    let anchorNode\n    let anchorOffset\n    let focusNode\n    let focusOffset\n    let isCollapsed\n\n    if (el) {\n      if (isDOMSelection(domRange)) {\n        anchorNode = domRange.anchorNode\n        anchorOffset = domRange.anchorOffset\n        focusNode = domRange.focusNode\n        focusOffset = domRange.focusOffset\n        // COMPAT: There's a bug in chrome that always returns `true` for\n        // `isCollapsed` for a Selection that comes from a ShadowRoot.\n        // (2020/08/08)\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=447523\n        if (IS_CHROME && hasShadowRoot()) {\n          isCollapsed =\n            domRange.anchorNode === domRange.focusNode &&\n            domRange.anchorOffset === domRange.focusOffset\n        } else {\n          isCollapsed = domRange.isCollapsed\n        }\n      } else {\n        anchorNode = domRange.startContainer\n        anchorOffset = domRange.startOffset\n        focusNode = domRange.endContainer\n        focusOffset = domRange.endOffset\n        isCollapsed = domRange.collapsed\n      }\n    }\n\n    if (\n      anchorNode == null ||\n      focusNode == null ||\n      anchorOffset == null ||\n      focusOffset == null\n    ) {\n      throw new Error(\n        `Cannot resolve a Slate range from DOM range: ${domRange}`\n      )\n    }\n\n    const anchor = ReactEditor.toSlatePoint(\n      editor,\n      [anchorNode, anchorOffset],\n      { exactMatch, suppressThrow }\n    )\n    if (!anchor) {\n      return null as T extends true ? Range | null : Range\n    }\n\n    const focus = isCollapsed\n      ? anchor\n      : ReactEditor.toSlatePoint(editor, [focusNode, focusOffset], {\n          exactMatch,\n          suppressThrow,\n        })\n    if (!focus) {\n      return null as T extends true ? Range | null : Range\n    }\n\n    let range: Range = { anchor: anchor as Point, focus: focus as Point }\n    // if the selection is a hanging range that ends in a void\n    // and the DOM focus is an Element\n    // (meaning that the selection ends before the element)\n    // unhang the range to avoid mistakenly including the void\n    if (\n      Range.isExpanded(range) &&\n      Range.isForward(range) &&\n      isDOMElement(focusNode) &&\n      Editor.void(editor, { at: range.focus, mode: 'highest' })\n    ) {\n      range = Editor.unhangRange(editor, range, { voids: true })\n    }\n\n    return (range as unknown) as T extends true ? Range | null : Range\n  },\n\n  hasRange(editor: ReactEditor, range: Range): boolean {\n    const { anchor, focus } = range\n    return (\n      Editor.hasPath(editor, anchor.path) && Editor.hasPath(editor, focus.path)\n    )\n  },\n}\n","import { Editor, Node, Path, Range } from 'slate'\n\nimport { DOMNode } from '../../utils/dom'\nimport { ReactEditor } from '../..'\nimport { TextInsertion, getTextInsertion } from './diff-text'\n\ninterface MutationData {\n  addedNodes: DOMNode[]\n  removedNodes: DOMNode[]\n  insertedText: TextInsertion[]\n  characterDataMutations: MutationRecord[]\n}\n\ntype MutationDetection = (editor: Editor, mutationData: MutationData) => boolean\n\nexport function gatherMutationData(\n  editor: Editor,\n  mutations: MutationRecord[]\n): MutationData {\n  const addedNodes: DOMNode[] = []\n  const removedNodes: DOMNode[] = []\n  const insertedText: TextInsertion[] = []\n  const characterDataMutations: MutationRecord[] = []\n\n  mutations.forEach(mutation => {\n    switch (mutation.type) {\n      case 'childList': {\n        if (mutation.addedNodes.length) {\n          mutation.addedNodes.forEach(addedNode => {\n            addedNodes.push(addedNode)\n          })\n        }\n\n        mutation.removedNodes.forEach(removedNode => {\n          removedNodes.push(removedNode)\n        })\n\n        break\n      }\n      case 'characterData': {\n        characterDataMutations.push(mutation)\n\n        // Changes to text nodes should consider the parent element\n        const { parentNode } = mutation.target\n\n        if (!parentNode) {\n          return\n        }\n\n        const textInsertion = getTextInsertion(editor, parentNode)\n\n        if (!textInsertion) {\n          return\n        }\n\n        // If we've already detected a diff at that path, we can return early\n        if (\n          insertedText.some(({ path }) => Path.equals(path, textInsertion.path))\n        ) {\n          return\n        }\n\n        // Add the text diff to the array of detected text insertions that need to be reconciled\n        insertedText.push(textInsertion)\n      }\n    }\n  })\n\n  return { addedNodes, removedNodes, insertedText, characterDataMutations }\n}\n\n/**\n * In general, when a line break occurs, there will be more `addedNodes` than `removedNodes`.\n *\n * This isn't always the case however. In some cases, there will be more `removedNodes` than\n * `addedNodes`.\n *\n * To account for these edge cases, the most reliable strategy to detect line break mutations\n * is to check whether a new block was inserted of the same type as the current block.\n */\nexport const isLineBreak: MutationDetection = (editor, { addedNodes }) => {\n  const { selection } = editor\n  const parentNode = selection\n    ? Node.parent(editor, selection.anchor.path)\n    : null\n  const parentDOMNode = parentNode\n    ? ReactEditor.toDOMNode(editor, parentNode)\n    : null\n\n  if (!parentDOMNode) {\n    return false\n  }\n\n  return addedNodes.some(\n    addedNode =>\n      addedNode instanceof HTMLElement &&\n      addedNode.tagName === parentDOMNode?.tagName\n  )\n}\n\n/**\n * So long as we check for line break mutations before deletion mutations,\n * we can safely assume that a set of mutations was a deletion if there are\n * removed nodes.\n */\nexport const isDeletion: MutationDetection = (_, { removedNodes }) => {\n  return removedNodes.length > 0\n}\n\n/**\n * If the selection was expanded and there are removed nodes,\n * the contents of the selection need to be replaced with the diff\n */\nexport const isReplaceExpandedSelection: MutationDetection = (\n  { selection },\n  { removedNodes }\n) => {\n  return selection\n    ? Range.isExpanded(selection) && removedNodes.length > 0\n    : false\n}\n\n/**\n * Plain text insertion\n */\nexport const isTextInsertion: MutationDetection = (_, { insertedText }) => {\n  return insertedText.length > 0\n}\n\n/**\n * Edge case. Detect mutations that remove leaf nodes and also update character data\n */\nexport const isRemoveLeafNodes: MutationDetection = (\n  _,\n  { addedNodes, characterDataMutations, removedNodes }\n) => {\n  return (\n    removedNodes.length > 0 &&\n    addedNodes.length === 0 &&\n    characterDataMutations.length > 0\n  )\n}\n","import { ReactEditor } from '../../plugin/react-editor'\nimport { Editor, Range, Transforms, Text } from 'slate'\nimport {\n  IS_ON_COMPOSITION_END,\n  EDITOR_ON_COMPOSITION_TEXT,\n} from '../../utils/weak-maps'\n\nimport { DOMNode } from '../../utils/dom'\n\nimport {\n  normalizeTextInsertionRange,\n  combineInsertedText,\n  TextInsertion,\n} from './diff-text'\nimport {\n  gatherMutationData,\n  isDeletion,\n  isLineBreak,\n  isRemoveLeafNodes,\n  isReplaceExpandedSelection,\n  isTextInsertion,\n} from './mutation-detection'\n\n// Replace with `const debug = console.log` to debug\nconst debug = (...message: any[]) => {}\n\n/**\n * Based loosely on:\n *\n * https://github.com/facebook/draft-js/blob/master/src/component/handlers/composition/DOMObserver.js\n * https://github.com/ProseMirror/prosemirror-view/blob/master/src/domobserver.js\n *\n * The input manager attempts to map observed mutations on the document to a\n * set of operations in order to reconcile Slate's internal value with the DOM.\n *\n * Mutations are processed synchronously as they come in. Only mutations that occur\n * during a user input loop are processed, as other mutations can occur within the\n * document that were not initiated by user input.\n *\n * The mutation reconciliation process attempts to match mutations to the following\n * patterns:\n *\n * - Text updates\n * - Deletions\n * - Line breaks\n *\n * @param editor\n * @param restoreDOM\n */\n\nexport class AndroidInputManager {\n  constructor(private editor: ReactEditor, private restoreDOM: () => void) {\n    this.editor = editor\n    this.restoreDOM = restoreDOM\n  }\n\n  /**\n   * Handle MutationObserver flush\n   *\n   * @param mutations\n   */\n\n  flush = (mutations: MutationRecord[]) => {\n    debug('flush')\n\n    try {\n      this.reconcileMutations(mutations)\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err)\n\n      // Failed to reconcile mutations, restore DOM to its previous state\n      this.restoreDOM()\n    }\n  }\n\n  /**\n   * Reconcile a batch of mutations\n   *\n   * @param mutations\n   */\n\n  private reconcileMutations = (mutations: MutationRecord[]) => {\n    const mutationData = gatherMutationData(this.editor, mutations)\n    const { insertedText, removedNodes } = mutationData\n\n    debug('processMutations', mutations, mutationData)\n\n    if (isReplaceExpandedSelection(this.editor, mutationData)) {\n      const text = combineInsertedText(insertedText)\n      this.replaceExpandedSelection(text)\n    } else if (isLineBreak(this.editor, mutationData)) {\n      this.insertBreak()\n    } else if (isRemoveLeafNodes(this.editor, mutationData)) {\n      this.removeLeafNodes(removedNodes)\n    } else if (isDeletion(this.editor, mutationData)) {\n      this.deleteBackward()\n    } else if (isTextInsertion(this.editor, mutationData)) {\n      this.insertText(insertedText)\n    }\n  }\n\n  /**\n   * Apply text diff\n   */\n\n  private insertText = (insertedText: TextInsertion[]) => {\n    debug('insertText')\n\n    const { selection } = this.editor\n\n    // If it is in composing or after `onCompositionend`, set `EDITOR_ON_COMPOSITION_TEXT` and return.\n    // Text will be inserted on compositionend event.\n    if (\n      ReactEditor.isComposing(this.editor) ||\n      IS_ON_COMPOSITION_END.get(this.editor)\n    ) {\n      EDITOR_ON_COMPOSITION_TEXT.set(this.editor, insertedText)\n      IS_ON_COMPOSITION_END.set(this.editor, false)\n      return\n    }\n\n    // Insert the batched text diffs\n    insertedText.forEach(insertion => {\n      const text = insertion.text.insertText\n      const at = normalizeTextInsertionRange(this.editor, selection, insertion)\n      Transforms.setSelection(this.editor, at)\n      Editor.insertText(this.editor, text)\n    })\n  }\n\n  /**\n   * Handle line breaks\n   */\n\n  private insertBreak = () => {\n    debug('insertBreak')\n\n    const { selection } = this.editor\n\n    Editor.insertBreak(this.editor)\n\n    this.restoreDOM()\n\n    if (selection) {\n      // Compat: Move selection to the newly inserted block if it has not moved\n      setTimeout(() => {\n        if (\n          this.editor.selection &&\n          Range.equals(selection, this.editor.selection)\n        ) {\n          Transforms.move(this.editor)\n        }\n      }, 100)\n    }\n  }\n\n  /**\n   * Handle expanded selection being deleted or replaced by text\n   */\n\n  private replaceExpandedSelection = (text: string) => {\n    debug('replaceExpandedSelection')\n\n    // Delete expanded selection\n    Editor.deleteFragment(this.editor)\n\n    if (text.length) {\n      // Selection was replaced by text, insert the entire text diff\n      Editor.insertText(this.editor, text)\n    }\n\n    this.restoreDOM()\n  }\n\n  /**\n   * Handle `backspace` that merges blocks\n   */\n\n  private deleteBackward = () => {\n    debug('deleteBackward')\n\n    Editor.deleteBackward(this.editor)\n    ReactEditor.focus(this.editor)\n\n    this.restoreDOM()\n  }\n\n  /**\n   * Handle mutations that remove specific leaves\n   */\n  private removeLeafNodes = (nodes: DOMNode[]) => {\n    for (const node of nodes) {\n      const slateNode = ReactEditor.toSlateNode(this.editor, node)\n\n      if (slateNode) {\n        const path = ReactEditor.findPath(this.editor, slateNode)\n\n        Transforms.delete(this.editor, { at: path })\n        this.restoreDOM()\n      }\n    }\n  }\n}\n\nexport default AndroidInputManager\n","import { RefObject, useEffect, useState } from 'react'\nimport { useIsomorphicLayoutEffect } from '../../hooks/use-isomorphic-layout-effect'\n\nexport function useMutationObserver(\n  node: RefObject<HTMLElement>,\n  callback: MutationCallback,\n  options: MutationObserverInit\n) {\n  const [mutationObserver] = useState(() => new MutationObserver(callback))\n\n  useIsomorphicLayoutEffect(() => {\n    // Disconnect mutation observer during render phase\n    mutationObserver.disconnect()\n  })\n\n  useEffect(() => {\n    if (!node.current) {\n      throw new Error('Failed to attach MutationObserver, `node` is undefined')\n    }\n\n    // Attach mutation observer after render phase has finished\n    mutationObserver.observe(node.current, options)\n\n    // Clean up after effect\n    return mutationObserver.disconnect.bind(mutationObserver)\n  })\n}\n","import React, { useCallback, useEffect, useRef } from 'react'\nimport { Node as SlateNode, Path } from 'slate'\nimport { ReactEditor, useSlateStatic } from '../..'\nimport { DOMNode, isDOMElement } from '../../utils/dom'\nimport { ELEMENT_TO_NODE, NODE_TO_RESTORE_DOM } from '../../utils/weak-maps'\nimport { useMutationObserver } from './use-mutation-observer'\n\nconst MUTATION_OBSERVER_CONFIG: MutationObserverInit = {\n  childList: true,\n  characterData: true,\n  subtree: true,\n}\n\nfunction findClosestKnowSlateNode(domNode: DOMNode): SlateNode | null {\n  let domEl = isDOMElement(domNode) ? domNode : domNode.parentElement\n\n  if (domEl && !domEl.hasAttribute('data-slate-node')) {\n    domEl = domEl.closest(`[data-slate-node]`)\n  }\n\n  const slateNode = domEl && ELEMENT_TO_NODE.get(domEl as HTMLElement)\n  if (slateNode) {\n    return slateNode\n  }\n\n  // Unknown dom element with a slate-slate-node attribute => the IME\n  // most likely duplicated the node so we have to restore the parent\n  return domEl?.parentElement\n    ? findClosestKnowSlateNode(domEl.parentElement)\n    : null\n}\n\nexport function useRestoreDom(\n  node: React.RefObject<HTMLElement>,\n  receivedUserInput: React.RefObject<boolean>\n) {\n  const editor = useSlateStatic()\n  const mutatedNodes = useRef<Set<SlateNode>>(new Set())\n\n  const handleDOMMutation = useCallback((mutations: MutationRecord[]) => {\n    if (!receivedUserInput.current) {\n      return\n    }\n\n    mutations.forEach(({ target }) => {\n      const slateNode = findClosestKnowSlateNode(target)\n      if (!slateNode) {\n        return\n      }\n\n      return mutatedNodes.current.add(slateNode)\n    })\n  }, [])\n\n  useMutationObserver(node, handleDOMMutation, MUTATION_OBSERVER_CONFIG)\n\n  // Clear mutated nodes on every render\n  mutatedNodes.current.clear()\n  const restore = useCallback(() => {\n    const mutated = Array.from(mutatedNodes.current.values())\n\n    // Filter out child nodes of nodes that will be restored anyway\n    const nodesToRestore = mutated.filter(\n      n =>\n        !mutated.some(m =>\n          Path.isParent(\n            ReactEditor.findPath(editor, m),\n            ReactEditor.findPath(editor, n)\n          )\n        )\n    )\n\n    nodesToRestore.forEach(n => {\n      NODE_TO_RESTORE_DOM.get(n)?.()\n    })\n\n    mutatedNodes.current.clear()\n  }, [])\n\n  return restore\n}\n","import { useCallback, useEffect, useRef } from 'react'\n\nimport { ReactEditor } from '../..'\nimport { useSlateStatic } from '../../hooks/use-slate-static'\n\nexport function useTrackUserInput() {\n  const editor = useSlateStatic()\n  const receivedUserInput = useRef<boolean>(false)\n  const animationFrameRef = useRef<number | null>(null)\n  const onUserInput = useCallback(() => {\n    if (receivedUserInput.current === false) {\n      const window = ReactEditor.getWindow(editor)\n\n      receivedUserInput.current = true\n\n      if (animationFrameRef.current) {\n        window.cancelAnimationFrame(animationFrameRef.current)\n      }\n\n      animationFrameRef.current = window.requestAnimationFrame(() => {\n        receivedUserInput.current = false\n        animationFrameRef.current = null\n      })\n    }\n  }, [])\n\n  useEffect(() => {\n    // Reset user input tracking on every render\n    if (receivedUserInput.current) {\n      receivedUserInput.current = false\n    }\n  })\n\n  return {\n    receivedUserInput,\n    onUserInput,\n  }\n}\n","import { RefObject, useCallback, useMemo, useRef, useState } from 'react'\n\nimport { useSlateStatic } from '../../hooks/use-slate-static'\n\nimport { AndroidInputManager } from './android-input-manager'\nimport { useRestoreDom } from './use-restore-dom'\nimport { useMutationObserver } from './use-mutation-observer'\nimport { useTrackUserInput } from './use-track-user-input'\n\nconst MUTATION_OBSERVER_CONFIG: MutationObserverInit = {\n  childList: true,\n  characterData: true,\n  characterDataOldValue: true,\n  subtree: true,\n}\n\nexport function useAndroidInputManager(node: RefObject<HTMLElement>) {\n  const editor = useSlateStatic()\n\n  const { receivedUserInput, onUserInput } = useTrackUserInput()\n  const restoreDom = useRestoreDom(node, receivedUserInput)\n\n  const inputManager = useMemo(\n    () => new AndroidInputManager(editor, restoreDom),\n    [restoreDom, editor]\n  )\n\n  const timeoutId = useRef<ReturnType<typeof setTimeout> | null>(null)\n  const isReconciling = useRef(false)\n  const flush = useCallback((mutations: MutationRecord[]) => {\n    if (!receivedUserInput.current) {\n      return\n    }\n\n    isReconciling.current = true\n    inputManager.flush(mutations)\n\n    if (timeoutId.current) {\n      clearTimeout(timeoutId.current)\n    }\n\n    timeoutId.current = setTimeout(() => {\n      isReconciling.current = false\n      timeoutId.current = null\n    }, 250)\n  }, [])\n\n  useMutationObserver(node, flush, MUTATION_OBSERVER_CONFIG)\n\n  return {\n    isReconciling,\n    onUserInput,\n  }\n}\n","import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react'\nimport { Editor, Element, Node, Range, Transforms, Path, Text } from 'slate'\nimport throttle from 'lodash/throttle'\nimport debounce from 'lodash/debounce'\nimport scrollIntoView from 'scroll-into-view-if-needed'\n\nimport { DefaultPlaceholder, ReactEditor } from '../..'\nimport { ReadOnlyContext } from '../../hooks/use-read-only'\nimport { useSlate } from '../../hooks/use-slate'\nimport { useIsomorphicLayoutEffect } from '../../hooks/use-isomorphic-layout-effect'\nimport { DecorateContext } from '../../hooks/use-decorate'\nimport {\n  DOMElement,\n  isDOMElement,\n  isDOMNode,\n  getDefaultView,\n  getClipboardData,\n} from '../../utils/dom'\nimport {\n  EDITOR_TO_ELEMENT,\n  EDITOR_TO_WINDOW,\n  ELEMENT_TO_NODE,\n  IS_FOCUSED,\n  IS_READ_ONLY,\n  NODE_TO_ELEMENT,\n  PLACEHOLDER_SYMBOL,\n  IS_COMPOSING,\n  IS_ON_COMPOSITION_END,\n  EDITOR_ON_COMPOSITION_TEXT,\n} from '../../utils/weak-maps'\nimport { normalizeTextInsertionRange } from './diff-text'\n\nimport { EditableProps, hasTarget } from '../editable'\nimport useChildren from '../../hooks/use-children'\nimport {\n  defaultDecorate,\n  hasEditableTarget,\n  isEventHandled,\n  isDOMEventHandled,\n  isTargetInsideNonReadonlyVoid,\n} from '../editable'\n\nimport { useAndroidInputManager } from './use-android-input-manager'\nimport { useContentKey } from '../../hooks/use-content-key'\n\n/**\n * Editable.\n */\n\n// https://github.com/facebook/draft-js/blob/main/src/component/handlers/composition/DraftEditorCompositionHandler.js#L41\n// When using keyboard English association function, conpositionEnd triggered too fast, resulting in after `insertText` still maintain association state.\nconst RESOLVE_DELAY = 20\n\nexport const AndroidEditable = (props: EditableProps): JSX.Element => {\n  const {\n    autoFocus,\n    decorate = defaultDecorate,\n    onDOMBeforeInput: propsOnDOMBeforeInput,\n    placeholder,\n    readOnly = false,\n    renderElement,\n    renderLeaf,\n    renderPlaceholder = props => <DefaultPlaceholder {...props} />,\n    style = {},\n    as: Component = 'div',\n    ...attributes\n  } = props\n  const editor = useSlate()\n  // Rerender editor when composition status changed\n  const [isComposing, setIsComposing] = useState(false)\n  const ref = useRef<HTMLDivElement>(null)\n  const inputManager = useAndroidInputManager(ref)\n\n  // Update internal state on each render.\n  IS_READ_ONLY.set(editor, readOnly)\n\n  // Keep track of some state for the event handler logic.\n  const state = useMemo(\n    () => ({\n      isComposing: false,\n      isUpdatingSelection: false,\n      latestElement: null as DOMElement | null,\n    }),\n    []\n  )\n\n  const contentKey = useContentKey(editor)\n\n  // Whenever the editor updates...\n  useIsomorphicLayoutEffect(() => {\n    // Update element-related weak maps with the DOM element ref.\n    let window\n\n    if (ref.current && (window = getDefaultView(ref.current))) {\n      EDITOR_TO_WINDOW.set(editor, window)\n      EDITOR_TO_ELEMENT.set(editor, ref.current)\n      NODE_TO_ELEMENT.set(editor, ref.current)\n      ELEMENT_TO_NODE.set(ref.current, editor)\n    } else {\n      NODE_TO_ELEMENT.delete(editor)\n    }\n\n    try {\n      // Make sure the DOM selection state is in sync.\n      const { selection } = editor\n      const root = ReactEditor.findDocumentOrShadowRoot(editor)\n      const domSelection = root.getSelection()\n\n      if (\n        state.isComposing ||\n        !domSelection ||\n        !ReactEditor.isFocused(editor)\n      ) {\n        return\n      }\n\n      const hasDomSelection = domSelection.type !== 'None'\n\n      // If the DOM selection is properly unset, we're done.\n      if (!selection && !hasDomSelection) {\n        return\n      }\n\n      // verify that the dom selection is in the editor\n      const editorElement = EDITOR_TO_ELEMENT.get(editor)!\n      let hasDomSelectionInEditor = false\n      if (\n        editorElement.contains(domSelection.anchorNode) &&\n        editorElement.contains(domSelection.focusNode)\n      ) {\n        hasDomSelectionInEditor = true\n      }\n\n      // If the DOM selection is in the editor and the editor selection is already correct, we're done.\n      if (hasDomSelection && hasDomSelectionInEditor && selection) {\n        const slateRange = ReactEditor.toSlateRange(editor, domSelection, {\n          exactMatch: true,\n          suppressThrow: true,\n        })\n        if (slateRange && Range.equals(slateRange, selection)) {\n          return\n        }\n      }\n\n      // when <Editable/> is being controlled through external value\n      // then its children might just change - DOM responds to it on its own\n      // but Slate's value is not being updated through any operation\n      // and thus it doesn't transform selection on its own\n      if (selection && !ReactEditor.hasRange(editor, selection)) {\n        editor.selection = ReactEditor.toSlateRange(editor, domSelection, {\n          exactMatch: false,\n          suppressThrow: false,\n        })\n        return\n      }\n\n      // Otherwise the DOM selection is out of sync, so update it.\n      const el = ReactEditor.toDOMNode(editor, editor)\n      state.isUpdatingSelection = true\n\n      const newDomRange = selection && ReactEditor.toDOMRange(editor, selection)\n\n      if (newDomRange) {\n        if (Range.isBackward(selection!)) {\n          domSelection.setBaseAndExtent(\n            newDomRange.endContainer,\n            newDomRange.endOffset,\n            newDomRange.startContainer,\n            newDomRange.startOffset\n          )\n        } else {\n          domSelection.setBaseAndExtent(\n            newDomRange.startContainer,\n            newDomRange.startOffset,\n            newDomRange.endContainer,\n            newDomRange.endOffset\n          )\n        }\n        const leafEl = newDomRange.startContainer.parentElement!\n        leafEl.getBoundingClientRect = newDomRange.getBoundingClientRect.bind(\n          newDomRange\n        )\n        scrollIntoView(leafEl, {\n          scrollMode: 'if-needed',\n          boundary: el,\n        })\n        // @ts-ignore\n        delete leafEl.getBoundingClientRect\n      } else {\n        domSelection.removeAllRanges()\n      }\n\n      setTimeout(() => {\n        state.isUpdatingSelection = false\n      })\n    } catch {\n      // Failed to update selection, likely due to reconciliation error\n      state.isUpdatingSelection = false\n    }\n  })\n\n  // The autoFocus TextareaHTMLAttribute doesn't do anything on a div, so it\n  // needs to be manually focused.\n  useEffect(() => {\n    if (ref.current && autoFocus) {\n      ref.current.focus()\n    }\n  }, [autoFocus])\n\n  // Listen on the native `selectionchange` event to be able to update any time\n  // the selection changes. This is required because React's `onSelect` is leaky\n  // and non-standard so it doesn't fire until after a selection has been\n  // released. This causes issues in situations where another change happens\n  // while a selection is being dragged.\n  const onDOMSelectionChange = useCallback(\n    throttle(() => {\n      try {\n        if (\n          !state.isComposing &&\n          !state.isUpdatingSelection &&\n          !inputManager.isReconciling.current\n        ) {\n          const root = ReactEditor.findDocumentOrShadowRoot(editor)\n          const { activeElement } = root\n          const el = ReactEditor.toDOMNode(editor, editor)\n          const domSelection = root.getSelection()\n\n          if (activeElement === el) {\n            state.latestElement = activeElement\n            IS_FOCUSED.set(editor, true)\n          } else {\n            IS_FOCUSED.delete(editor)\n          }\n\n          if (!domSelection) {\n            return Transforms.deselect(editor)\n          }\n\n          const { anchorNode, focusNode } = domSelection\n\n          const anchorNodeSelectable =\n            hasEditableTarget(editor, anchorNode) ||\n            isTargetInsideNonReadonlyVoid(editor, anchorNode)\n\n          const focusNodeSelectable =\n            hasEditableTarget(editor, focusNode) ||\n            isTargetInsideNonReadonlyVoid(editor, focusNode)\n\n          if (anchorNodeSelectable && focusNodeSelectable) {\n            const range = ReactEditor.toSlateRange(editor, domSelection, {\n              exactMatch: false,\n              suppressThrow: false,\n            })\n            Transforms.select(editor, range)\n          } else {\n            Transforms.deselect(editor)\n          }\n        }\n      } catch {\n        // Failed to update selection, likely due to reconciliation error\n      }\n    }, 100),\n    [readOnly]\n  )\n\n  const scheduleOnDOMSelectionChange = useMemo(\n    () => debounce(onDOMSelectionChange, 0),\n    [onDOMSelectionChange]\n  )\n\n  // Listen on the native `beforeinput` event to get real \"Level 2\" events. This\n  // is required because React's `beforeinput` is fake and never really attaches\n  // to the real event sadly. (2019/11/01)\n  // https://github.com/facebook/react/issues/11211\n  const onDOMBeforeInput = useCallback(\n    (event: InputEvent) => {\n      if (\n        !readOnly &&\n        hasEditableTarget(editor, event.target) &&\n        !isDOMEventHandled(event, propsOnDOMBeforeInput)\n      ) {\n        // Some IMEs/Chrome extensions like e.g. Grammarly set the selection immediately before\n        // triggering a `beforeinput` expecting the change to be applied to the immediately before\n        // set selection.\n        scheduleOnDOMSelectionChange.flush()\n\n        inputManager.onUserInput()\n      }\n    },\n    [readOnly, propsOnDOMBeforeInput]\n  )\n\n  // Attach a native DOM event handler for `beforeinput` events, because React's\n  // built-in `onBeforeInput` is actually a leaky polyfill that doesn't expose\n  // real `beforeinput` events sadly... (2019/11/04)\n  useIsomorphicLayoutEffect(() => {\n    const node = ref.current\n\n    // @ts-ignore The `beforeinput` event isn't recognized.\n    node?.addEventListener('beforeinput', onDOMBeforeInput)\n\n    // @ts-ignore The `beforeinput` event isn't recognized.\n    return () => node?.removeEventListener('beforeinput', onDOMBeforeInput)\n  }, [contentKey, propsOnDOMBeforeInput])\n\n  // Attach a native DOM event handler for `selectionchange`, because React's\n  // built-in `onSelect` handler doesn't fire for all selection changes. It's a\n  // leaky polyfill that only fires on keypresses or clicks. Instead, we want to\n  // fire for any change to the selection inside the editor. (2019/11/04)\n  // https://github.com/facebook/react/issues/5785\n  useIsomorphicLayoutEffect(() => {\n    const window = ReactEditor.getWindow(editor)\n    window.document.addEventListener(\n      'selectionchange',\n      scheduleOnDOMSelectionChange\n    )\n\n    return () => {\n      window.document.removeEventListener(\n        'selectionchange',\n        scheduleOnDOMSelectionChange\n      )\n    }\n  }, [scheduleOnDOMSelectionChange])\n\n  const decorations = decorate([editor, []])\n\n  if (\n    placeholder &&\n    editor.children.length === 1 &&\n    Array.from(Node.texts(editor)).length === 1 &&\n    Node.string(editor) === '' &&\n    !isComposing\n  ) {\n    const start = Editor.start(editor, [])\n    decorations.push({\n      [PLACEHOLDER_SYMBOL]: true,\n      placeholder,\n      anchor: start,\n      focus: start,\n    })\n  }\n\n  return (\n    <ReadOnlyContext.Provider value={readOnly}>\n      <DecorateContext.Provider value={decorate}>\n        <Component\n          key={contentKey}\n          role={readOnly ? undefined : 'textbox'}\n          {...attributes}\n          spellCheck={attributes.spellCheck}\n          autoCorrect={attributes.autoCorrect}\n          autoCapitalize={attributes.autoCapitalize}\n          data-slate-editor\n          data-slate-node=\"value\"\n          contentEditable={readOnly ? undefined : true}\n          suppressContentEditableWarning\n          ref={ref}\n          style={{\n            // Allow positioning relative to the editable element.\n            position: 'relative',\n            // Prevent the default outline styles.\n            outline: 'none',\n            // Preserve adjacent whitespace and new lines.\n            whiteSpace: 'pre-wrap',\n            // Allow words to break if they are too long.\n            wordWrap: 'break-word',\n            // Allow for passed-in styles to override anything.\n            ...style,\n          }}\n          onCopy={useCallback(\n            (event: React.ClipboardEvent<HTMLDivElement>) => {\n              if (\n                hasEditableTarget(editor, event.target) &&\n                !isEventHandled(event, attributes.onCopy)\n              ) {\n                event.preventDefault()\n                ReactEditor.setFragmentData(editor, event.clipboardData, 'copy')\n              }\n            },\n            [attributes.onCopy]\n          )}\n          onCut={useCallback(\n            (event: React.ClipboardEvent<HTMLDivElement>) => {\n              if (\n                !readOnly &&\n                hasEditableTarget(editor, event.target) &&\n                !isEventHandled(event, attributes.onCut)\n              ) {\n                event.preventDefault()\n                ReactEditor.setFragmentData(editor, event.clipboardData, 'cut')\n                const { selection } = editor\n\n                if (selection) {\n                  if (Range.isExpanded(selection)) {\n                    Editor.deleteFragment(editor)\n                  } else {\n                    const node = Node.parent(editor, selection.anchor.path)\n                    if (Editor.isVoid(editor, node)) {\n                      Transforms.delete(editor)\n                    }\n                  }\n                }\n              }\n            },\n            [readOnly, attributes.onCut]\n          )}\n          onFocus={useCallback(\n            (event: React.FocusEvent<HTMLDivElement>) => {\n              if (\n                !readOnly &&\n                !state.isUpdatingSelection &&\n                hasEditableTarget(editor, event.target) &&\n                !isEventHandled(event, attributes.onFocus)\n              ) {\n                const root = ReactEditor.findDocumentOrShadowRoot(editor)\n                state.latestElement = root.activeElement\n\n                IS_FOCUSED.set(editor, true)\n              }\n            },\n            [readOnly, attributes.onFocus]\n          )}\n          onBlur={useCallback(\n            (event: React.FocusEvent<HTMLDivElement>) => {\n              if (\n                readOnly ||\n                state.isUpdatingSelection ||\n                !hasEditableTarget(editor, event.target) ||\n                isEventHandled(event, attributes.onBlur)\n              ) {\n                return\n              }\n\n              // COMPAT: If the current `activeElement` is still the previous\n              // one, this is due to the window being blurred when the tab\n              // itself becomes unfocused, so we want to abort early to allow to\n              // editor to stay focused when the tab becomes focused again.\n              const root = ReactEditor.findDocumentOrShadowRoot(editor)\n              if (state.latestElement === root.activeElement) {\n                return\n              }\n\n              const { relatedTarget } = event\n              const el = ReactEditor.toDOMNode(editor, editor)\n\n              // COMPAT: The event should be ignored if the focus is returning\n              // to the editor from an embedded editable element (eg. an <input>\n              // element inside a void node).\n              if (relatedTarget === el) {\n                return\n              }\n\n              // COMPAT: The event should be ignored if the focus is moving from\n              // the editor to inside a void node's spacer element.\n              if (\n                isDOMElement(relatedTarget) &&\n                relatedTarget.hasAttribute('data-slate-spacer')\n              ) {\n                return\n              }\n\n              // COMPAT: The event should be ignored if the focus is moving to a\n              // non- editable section of an element that isn't a void node (eg.\n              // a list item of the check list example).\n              if (\n                relatedTarget != null &&\n                isDOMNode(relatedTarget) &&\n                ReactEditor.hasDOMNode(editor, relatedTarget)\n              ) {\n                const node = ReactEditor.toSlateNode(editor, relatedTarget)\n\n                if (Element.isElement(node) && !editor.isVoid(node)) {\n                  return\n                }\n              }\n\n              IS_FOCUSED.delete(editor)\n            },\n            [readOnly, attributes.onBlur]\n          )}\n          onClick={useCallback(\n            (event: React.MouseEvent<HTMLDivElement>) => {\n              if (\n                !readOnly &&\n                hasTarget(editor, event.target) &&\n                !isEventHandled(event, attributes.onClick) &&\n                isDOMNode(event.target)\n              ) {\n                const node = ReactEditor.toSlateNode(editor, event.target)\n                const path = ReactEditor.findPath(editor, node)\n\n                // At this time, the Slate document may be arbitrarily different,\n                // because onClick handlers can change the document before we get here.\n                // Therefore we must check that this path actually exists,\n                // and that it still refers to the same node.\n                if (Editor.hasPath(editor, path)) {\n                  const lookupNode = Node.get(editor, path)\n                  if (lookupNode === node) {\n                    const start = Editor.start(editor, path)\n                    const end = Editor.end(editor, path)\n\n                    const startVoid = Editor.void(editor, { at: start })\n                    const endVoid = Editor.void(editor, { at: end })\n\n                    if (\n                      startVoid &&\n                      endVoid &&\n                      Path.equals(startVoid[1], endVoid[1])\n                    ) {\n                      const range = Editor.range(editor, start)\n                      Transforms.select(editor, range)\n                    }\n                  }\n                }\n              }\n            },\n            [readOnly, attributes.onClick]\n          )}\n          onCompositionEnd={useCallback(\n            (event: React.CompositionEvent<HTMLDivElement>) => {\n              if (\n                hasEditableTarget(editor, event.target) &&\n                !isEventHandled(event, attributes.onCompositionEnd)\n              ) {\n                scheduleOnDOMSelectionChange.flush()\n                setTimeout(() => {\n                  state.isComposing && setIsComposing(false)\n                  state.isComposing = false\n\n                  IS_COMPOSING.set(editor, false)\n                  IS_ON_COMPOSITION_END.set(editor, true)\n\n                  const insertedText =\n                    EDITOR_ON_COMPOSITION_TEXT.get(editor) || []\n\n                  // `insertedText` is set in `MutationObserver` constructor.\n                  // If open phone keyboard association function, `CompositionEvent` will be triggered.\n                  if (!insertedText.length) {\n                    return\n                  }\n\n                  EDITOR_ON_COMPOSITION_TEXT.set(editor, [])\n\n                  const { selection } = editor\n\n                  insertedText.forEach(insertion => {\n                    const text = insertion.text.insertText\n                    const at = normalizeTextInsertionRange(\n                      editor,\n                      selection,\n                      insertion\n                    )\n                    Transforms.setSelection(editor, at)\n                    Editor.insertText(editor, text)\n                  })\n                }, RESOLVE_DELAY)\n              }\n            },\n            [attributes.onCompositionEnd]\n          )}\n          onCompositionUpdate={useCallback(\n            (event: React.CompositionEvent<HTMLDivElement>) => {\n              if (\n                hasEditableTarget(editor, event.target) &&\n                !isEventHandled(event, attributes.onCompositionUpdate)\n              ) {\n                !state.isComposing && setIsComposing(true)\n                state.isComposing = true\n                IS_COMPOSING.set(editor, true)\n              }\n            },\n            [attributes.onCompositionUpdate]\n          )}\n          onCompositionStart={useCallback(\n            (event: React.CompositionEvent<HTMLDivElement>) => {\n              if (\n                hasEditableTarget(editor, event.target) &&\n                !isEventHandled(event, attributes.onCompositionStart)\n              ) {\n                !state.isComposing && setIsComposing(true)\n                state.isComposing = true\n                IS_COMPOSING.set(editor, true)\n              }\n            },\n            [attributes.onCompositionStart]\n          )}\n          onPaste={useCallback(\n            (event: React.ClipboardEvent<HTMLDivElement>) => {\n              // this will make application/x-slate-fragment exist when onPaste attributes is passed\n              event.clipboardData = getClipboardData(event.clipboardData)\n              // This unfortunately needs to be handled with paste events instead.\n              if (\n                hasEditableTarget(editor, event.target) &&\n                !isEventHandled(event, attributes.onPaste) &&\n                !readOnly\n              ) {\n                event.preventDefault()\n                ReactEditor.insertData(editor, event.clipboardData)\n              }\n            },\n            [readOnly, attributes.onPaste]\n          )}\n        >\n          {useChildren({\n            decorations,\n            node: editor,\n            renderElement,\n            renderPlaceholder,\n            renderLeaf,\n            selection: editor.selection,\n          })}\n        </Component>\n      </DecorateContext.Provider>\n    </ReadOnlyContext.Provider>\n  )\n}\n","import { createContext, useContext } from 'react'\n\n/**\n * A React context for sharing the `focused` state of the editor.\n */\n\nexport const FocusedContext = createContext(false)\n\n/**\n * Get the current `focused` state of the editor.\n */\n\nexport const useFocused = (): boolean => {\n  return useContext(FocusedContext)\n}\n","import {\n  createContext,\n  useCallback,\n  useContext,\n  useMemo,\n  useReducer,\n  useRef,\n} from 'react'\nimport { Editor } from 'slate'\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-layout-effect'\n\nfunction isError(error: any): error is Error {\n  return error instanceof Error\n}\n\ntype EditorChangeHandler = (editor: Editor) => void\n/**\n * A React context for sharing the editor selector context in a way to control rerenders\n */\n\nexport const SlateSelectorContext = createContext<{\n  getSlate: () => Editor\n  addEventListener: (callback: EditorChangeHandler) => () => void\n}>({} as any)\n\nconst refEquality = (a: any, b: any) => a === b\n\n/**\n * use redux style selectors to prevent rerendering on every keystroke.\n * Bear in mind rerendering can only prevented if the returned value is a value type or for reference types (e.g. objects and arrays) add a custom equality function.\n *\n * Example:\n * ```\n *  const isSelectionActive = useSlateSelector(editor => Boolean(editor.selection));\n * ```\n */\nexport function useSlateSelector<T>(\n  selector: (editor: Editor) => T,\n  equalityFn: (a: T, b: T) => boolean = refEquality\n) {\n  const [, forceRender] = useReducer(s => s + 1, 0)\n  const context = useContext(SlateSelectorContext)\n  if (!context) {\n    throw new Error(\n      `The \\`useSlateSelector\\` hook must be used inside the <Slate> component's context.`\n    )\n  }\n  const { getSlate, addEventListener } = context\n\n  const latestSubscriptionCallbackError = useRef<Error | undefined>()\n  const latestSelector = useRef<(editor: Editor) => T>(() => null as any)\n  const latestSelectedState = useRef<T>((null as any) as T)\n  let selectedState: T\n\n  try {\n    if (\n      selector !== latestSelector.current ||\n      latestSubscriptionCallbackError.current\n    ) {\n      selectedState = selector(getSlate())\n    } else {\n      selectedState = latestSelectedState.current\n    }\n  } catch (err) {\n    if (latestSubscriptionCallbackError.current && isError(err)) {\n      err.message += `\\nThe error may be correlated with this previous error:\\n${latestSubscriptionCallbackError.current.stack}\\n\\n`\n    }\n\n    throw err\n  }\n  useIsomorphicLayoutEffect(() => {\n    latestSelector.current = selector\n    latestSelectedState.current = selectedState\n    latestSubscriptionCallbackError.current = undefined\n  })\n\n  useIsomorphicLayoutEffect(\n    () => {\n      function checkForUpdates() {\n        try {\n          const newSelectedState = latestSelector.current(getSlate())\n\n          if (equalityFn(newSelectedState, latestSelectedState.current)) {\n            return\n          }\n\n          latestSelectedState.current = newSelectedState\n        } catch (err) {\n          // we ignore all errors here, since when the component\n          // is re-rendered, the selectors are called again, and\n          // will throw again, if neither props nor store state\n          // changed\n          latestSubscriptionCallbackError.current = err\n        }\n\n        forceRender()\n      }\n\n      const unsubscribe = addEventListener(checkForUpdates)\n\n      checkForUpdates()\n\n      return () => unsubscribe()\n    },\n    // don't rerender on equalityFn change since we want to be able to define it inline\n    [addEventListener, getSlate]\n  )\n\n  return selectedState\n}\n\n/**\n * Create selector context with editor updating on every editor change\n */\nexport function getSelectorContext(editor: Editor) {\n  const eventListeners = useRef<EditorChangeHandler[]>([]).current\n  const slateRef = useRef<{\n    editor: Editor\n  }>({\n    editor,\n  }).current\n  const onChange = useCallback((editor: Editor) => {\n    slateRef.editor = editor\n    eventListeners.forEach((listener: EditorChangeHandler) => listener(editor))\n  }, [])\n\n  const selectorContext = useMemo(() => {\n    return {\n      getSlate: () => slateRef.editor,\n      addEventListener: (callback: EditorChangeHandler) => {\n        eventListeners.push(callback)\n        return () => {\n          eventListeners.splice(eventListeners.indexOf(callback), 1)\n        }\n      },\n    }\n  }, [eventListeners, slateRef])\n  return { selectorContext, onChange }\n}\n","import React, { useMemo, useState, useCallback, useEffect, useRef } from 'react'\nimport { Editor, Node, Element, Descendant } from 'slate'\nimport { ReactEditor } from '../plugin/react-editor'\nimport { FocusedContext } from '../hooks/use-focused'\nimport { EditorContext } from '../hooks/use-slate-static'\nimport { SlateContext } from '../hooks/use-slate'\nimport {\n  getSelectorContext,\n  SlateSelectorContext,\n} from '../hooks/use-slate-selector'\nimport { EDITOR_TO_ON_CHANGE } from '../utils/weak-maps'\nimport { IS_REACT_VERSION_17_OR_ABOVE } from '../utils/environment'\nimport { useIsomorphicLayoutEffect } from '../hooks/use-isomorphic-layout-effect'\n\n/**\n * A wrapper around the provider to handle `onChange` events, because the editor\n * is a mutable singleton so it won't ever register as \"changed\" otherwise.\n */\n\nexport const Slate = (props: {\n  editor: ReactEditor\n  value: Descendant[]\n  children: React.ReactNode\n  onChange?: (value: Descendant[]) => void\n}) => {\n  const { editor, children, onChange, value, ...rest } = props\n  const unmountRef = useRef(false)\n\n  const [context, setContext] = React.useState<[ReactEditor]>(() => {\n    if (!Node.isNodeList(value)) {\n      throw new Error(\n        `[Slate] value is invalid! Expected a list of elements` +\n          `but got: ${JSON.stringify(value)}`\n      )\n    }\n    if (!Editor.isEditor(editor)) {\n      throw new Error(\n        `[Slate] editor is invalid! you passed:` + `${JSON.stringify(editor)}`\n      )\n    }\n    editor.children = value\n    Object.assign(editor, rest)\n    return [editor]\n  })\n\n  const {\n    selectorContext,\n    onChange: handleSelectorChange,\n  } = getSelectorContext(editor)\n\n  const onContextChange = useCallback(() => {\n    if (onChange) {\n      onChange(editor.children)\n    }\n\n    setContext([editor])\n    handleSelectorChange(editor)\n  }, [onChange])\n\n  EDITOR_TO_ON_CHANGE.set(editor, onContextChange)\n\n  useEffect(() => {\n    return () => {\n      EDITOR_TO_ON_CHANGE.set(editor, () => {})\n      unmountRef.current = true\n    }\n  }, [])\n\n  const [isFocused, setIsFocused] = useState(ReactEditor.isFocused(editor))\n\n  useEffect(() => {\n    setIsFocused(ReactEditor.isFocused(editor))\n  })\n\n  useIsomorphicLayoutEffect(() => {\n    const fn = () => setIsFocused(ReactEditor.isFocused(editor))\n    if (IS_REACT_VERSION_17_OR_ABOVE) {\n      // In React >= 17 onFocus and onBlur listen to the focusin and focusout events during the bubbling phase.\n      // Therefore in order for <Editable />'s handlers to run first, which is necessary for ReactEditor.isFocused(editor)\n      // to return the correct value, we have to listen to the focusin and focusout events without useCapture here.\n      document.addEventListener('focusin', fn)\n      document.addEventListener('focusout', fn)\n      return () => {\n        document.removeEventListener('focusin', fn)\n        document.removeEventListener('focusout', fn)\n      }\n    } else {\n      document.addEventListener('focus', fn, true)\n      document.addEventListener('blur', fn, true)\n      return () => {\n        document.removeEventListener('focus', fn, true)\n        document.removeEventListener('blur', fn, true)\n      }\n    }\n  }, [])\n\n  return (\n    <SlateSelectorContext.Provider value={selectorContext}>\n      <SlateContext.Provider value={context}>\n        <EditorContext.Provider value={editor}>\n          <FocusedContext.Provider value={isFocused}>\n            {children}\n          </FocusedContext.Provider>\n        </EditorContext.Provider>\n      </SlateContext.Provider>\n    </SlateSelectorContext.Provider>\n  )\n}\n","import { useContext } from 'react'\n\nimport { EditorContext } from './use-slate-static'\n\n/**\n * Get the current editor object from the React context.\n * @deprecated Use useSlateStatic instead.\n */\n\nexport const useEditor = () => {\n  const editor = useContext(EditorContext)\n\n  if (!editor) {\n    throw new Error(\n      `The \\`useEditor\\` hook must be used inside the <Slate> component's context.`\n    )\n  }\n\n  return editor\n}\n","/**\n * Utilities for single-line deletion\n */\n\nimport { Range, Editor } from 'slate'\nimport { ReactEditor } from '..'\n\nconst doRectsIntersect = (rect: DOMRect, compareRect: DOMRect) => {\n  const middle = (compareRect.top + compareRect.bottom) / 2\n\n  return rect.top <= middle && rect.bottom >= middle\n}\n\nconst areRangesSameLine = (\n  editor: ReactEditor,\n  range1: Range,\n  range2: Range\n) => {\n  const rect1 = ReactEditor.toDOMRange(editor, range1).getBoundingClientRect()\n  const rect2 = ReactEditor.toDOMRange(editor, range2).getBoundingClientRect()\n\n  return doRectsIntersect(rect1, rect2) && doRectsIntersect(rect2, rect1)\n}\n\n/**\n * A helper utility that returns the end portion of a `Range`\n * which is located on a single line.\n *\n * @param {Editor} editor The editor object to compare against\n * @param {Range} parentRange The parent range to compare against\n * @returns {Range} A valid portion of the parentRange which is one a single line\n */\nexport const findCurrentLineRange = (\n  editor: ReactEditor,\n  parentRange: Range\n): Range => {\n  const parentRangeBoundary = Editor.range(editor, Range.end(parentRange))\n  const positions = Array.from(Editor.positions(editor, { at: parentRange }))\n\n  let left = 0\n  let right = positions.length\n  let middle = Math.floor(right / 2)\n\n  if (\n    areRangesSameLine(\n      editor,\n      Editor.range(editor, positions[left]),\n      parentRangeBoundary\n    )\n  ) {\n    return Editor.range(editor, positions[left], parentRangeBoundary)\n  }\n\n  if (positions.length < 2) {\n    return Editor.range(\n      editor,\n      positions[positions.length - 1],\n      parentRangeBoundary\n    )\n  }\n\n  while (middle !== positions.length && middle !== left) {\n    if (\n      areRangesSameLine(\n        editor,\n        Editor.range(editor, positions[middle]),\n        parentRangeBoundary\n      )\n    ) {\n      right = middle\n    } else {\n      left = middle\n    }\n\n    middle = Math.floor((left + right) / 2)\n  }\n\n  return Editor.range(editor, positions[right], parentRangeBoundary)\n}\n","import ReactDOM from 'react-dom'\nimport { Editor, Node, Path, Operation, Transforms, Range } from 'slate'\n\nimport { ReactEditor } from './react-editor'\nimport { Key } from '../utils/key'\nimport {\n  EDITOR_TO_KEY_TO_ELEMENT,\n  EDITOR_TO_ON_CHANGE,\n  NODE_TO_KEY,\n  EDITOR_TO_USER_SELECTION,\n} from '../utils/weak-maps'\nimport {\n  isDOMText,\n  getPlainText,\n  getSlateFragmentAttribute,\n} from '../utils/dom'\nimport { findCurrentLineRange } from '../utils/lines'\n\n/**\n * `withReact` adds React and DOM specific behaviors to the editor.\n *\n * If you are using TypeScript, you must extend Slate's CustomTypes to use\n * this plugin.\n *\n * See https://docs.slatejs.org/concepts/11-typescript to learn how.\n */\n\nexport const withReact = <T extends Editor>(editor: T) => {\n  const e = editor as T & ReactEditor\n  const { apply, onChange, deleteBackward } = e\n\n  // The WeakMap which maps a key to a specific HTMLElement must be scoped to the editor instance to\n  // avoid collisions between editors in the DOM that share the same value.\n  EDITOR_TO_KEY_TO_ELEMENT.set(e, new WeakMap())\n\n  e.deleteBackward = unit => {\n    if (unit !== 'line') {\n      return deleteBackward(unit)\n    }\n\n    if (editor.selection && Range.isCollapsed(editor.selection)) {\n      const parentBlockEntry = Editor.above(editor, {\n        match: n => Editor.isBlock(editor, n),\n        at: editor.selection,\n      })\n\n      if (parentBlockEntry) {\n        const [, parentBlockPath] = parentBlockEntry\n        const parentElementRange = Editor.range(\n          editor,\n          parentBlockPath,\n          editor.selection.anchor\n        )\n\n        const currentLineRange = findCurrentLineRange(e, parentElementRange)\n\n        if (!Range.isCollapsed(currentLineRange)) {\n          Transforms.delete(editor, { at: currentLineRange })\n        }\n      }\n    }\n  }\n\n  // This attempts to reset the NODE_TO_KEY entry to the correct value\n  // as apply() changes the object reference and hence invalidates the NODE_TO_KEY entry\n  e.apply = (op: Operation) => {\n    const matches: [Path, Key][] = []\n\n    switch (op.type) {\n      case 'insert_text':\n      case 'remove_text':\n      case 'set_node':\n      case 'split_node': {\n        matches.push(...getMatches(e, op.path))\n        break\n      }\n\n      case 'set_selection': {\n        // Selection was manually set, don't restore the user selection after the change.\n        EDITOR_TO_USER_SELECTION.get(editor)?.unref()\n        EDITOR_TO_USER_SELECTION.delete(editor)\n        break\n      }\n\n      case 'insert_node':\n      case 'remove_node': {\n        matches.push(...getMatches(e, Path.parent(op.path)))\n        break\n      }\n\n      case 'merge_node': {\n        const prevPath = Path.previous(op.path)\n        matches.push(...getMatches(e, prevPath))\n        break\n      }\n\n      case 'move_node': {\n        const commonPath = Path.common(\n          Path.parent(op.path),\n          Path.parent(op.newPath)\n        )\n        matches.push(...getMatches(e, commonPath))\n        break\n      }\n    }\n\n    apply(op)\n\n    for (const [path, key] of matches) {\n      const [node] = Editor.node(e, path)\n      NODE_TO_KEY.set(node, key)\n    }\n  }\n\n  e.setFragmentData = (data: Pick<DataTransfer, 'getData' | 'setData'>) => {\n    const { selection } = e\n\n    if (!selection) {\n      return\n    }\n\n    const [start, end] = Range.edges(selection)\n    const startVoid = Editor.void(e, { at: start.path })\n    const endVoid = Editor.void(e, { at: end.path })\n\n    if (Range.isCollapsed(selection) && !startVoid) {\n      return\n    }\n\n    // Create a fake selection so that we can add a Base64-encoded copy of the\n    // fragment to the HTML, to decode on future pastes.\n    const domRange = ReactEditor.toDOMRange(e, selection)\n    let contents = domRange.cloneContents()\n    let attach = contents.childNodes[0] as HTMLElement\n\n    // Make sure attach is non-empty, since empty nodes will not get copied.\n    contents.childNodes.forEach(node => {\n      if (node.textContent && node.textContent.trim() !== '') {\n        attach = node as HTMLElement\n      }\n    })\n\n    // COMPAT: If the end node is a void node, we need to move the end of the\n    // range from the void node's spacer span, to the end of the void node's\n    // content, since the spacer is before void's content in the DOM.\n    if (endVoid) {\n      const [voidNode] = endVoid\n      const r = domRange.cloneRange()\n      const domNode = ReactEditor.toDOMNode(e, voidNode)\n      r.setEndAfter(domNode)\n      contents = r.cloneContents()\n    }\n\n    // COMPAT: If the start node is a void node, we need to attach the encoded\n    // fragment to the void node's content node instead of the spacer, because\n    // attaching it to empty `<div>/<span>` nodes will end up having it erased by\n    // most browsers. (2018/04/27)\n    if (startVoid) {\n      attach = contents.querySelector('[data-slate-spacer]')! as HTMLElement\n    }\n\n    // Remove any zero-width space spans from the cloned DOM so that they don't\n    // show up elsewhere when pasted.\n    Array.from(contents.querySelectorAll('[data-slate-zero-width]')).forEach(\n      zw => {\n        const isNewline = zw.getAttribute('data-slate-zero-width') === 'n'\n        zw.textContent = isNewline ? '\\n' : ''\n      }\n    )\n\n    // Set a `data-slate-fragment` attribute on a non-empty node, so it shows up\n    // in the HTML, and can be used for intra-Slate pasting. If it's a text\n    // node, wrap it in a `<span>` so we have something to set an attribute on.\n    if (isDOMText(attach)) {\n      const span = attach.ownerDocument.createElement('span')\n      // COMPAT: In Chrome and Safari, if we don't add the `white-space` style\n      // then leading and trailing spaces will be ignored. (2017/09/21)\n      span.style.whiteSpace = 'pre'\n      span.appendChild(attach)\n      contents.appendChild(span)\n      attach = span\n    }\n\n    const fragment = e.getFragment()\n    const string = JSON.stringify(fragment)\n    const encoded = window.btoa(encodeURIComponent(string))\n    attach.setAttribute('data-slate-fragment', encoded)\n    data.setData('application/x-slate-fragment', encoded)\n\n    // Add the content to a <div> so that we can get its inner HTML.\n    const div = contents.ownerDocument.createElement('div')\n    div.appendChild(contents)\n    div.setAttribute('hidden', 'true')\n    contents.ownerDocument.body.appendChild(div)\n    data.setData('text/html', div.innerHTML)\n    data.setData('text/plain', getPlainText(div))\n    contents.ownerDocument.body.removeChild(div)\n    return data\n  }\n\n  e.insertData = (data: DataTransfer) => {\n    if (!e.insertFragmentData(data)) {\n      e.insertTextData(data)\n    }\n  }\n\n  e.insertFragmentData = (data: DataTransfer): boolean => {\n    /**\n     * Checking copied fragment from application/x-slate-fragment or data-slate-fragment\n     */\n    const fragment =\n      data.getData('application/x-slate-fragment') ||\n      getSlateFragmentAttribute(data)\n\n    if (fragment) {\n      const decoded = decodeURIComponent(window.atob(fragment))\n      const parsed = JSON.parse(decoded) as Node[]\n      e.insertFragment(parsed)\n      return true\n    }\n    return false\n  }\n\n  e.insertTextData = (data: DataTransfer): boolean => {\n    const text = data.getData('text/plain')\n\n    if (text) {\n      const lines = text.split(/\\r\\n|\\r|\\n/)\n      let split = false\n\n      for (const line of lines) {\n        if (split) {\n          Transforms.splitNodes(e, { always: true })\n        }\n\n        e.insertText(line)\n        split = true\n      }\n      return true\n    }\n    return false\n  }\n\n  e.onChange = () => {\n    // COMPAT: React doesn't batch `setState` hook calls, which means that the\n    // children and selection can get out of sync for one render pass. So we\n    // have to use this unstable API to ensure it batches them. (2019/12/03)\n    // https://github.com/facebook/react/issues/14259#issuecomment-439702367\n    ReactDOM.unstable_batchedUpdates(() => {\n      const onContextChange = EDITOR_TO_ON_CHANGE.get(e)\n\n      if (onContextChange) {\n        onContextChange()\n      }\n\n      onChange()\n    })\n  }\n\n  return e\n}\n\nconst getMatches = (e: Editor, path: Path) => {\n  const matches: [Path, Key][] = []\n  for (const [n, p] of Editor.levels(e, { at: path })) {\n    const key = ReactEditor.findKey(e, n)\n    matches.push([p, key])\n  }\n  return matches\n}\n","// Components\n// Environment-dependent Editable\nimport { Editable as DefaultEditable } from './components/editable'\nimport { AndroidEditable } from './components/android/android-editable'\nimport { IS_ANDROID } from './utils/environment'\n\nexport const Editable = IS_ANDROID ? AndroidEditable : DefaultEditable\nexport {\n  Editable as DefaultEditable,\n  RenderElementProps,\n  RenderLeafProps,\n  RenderPlaceholderProps,\n  DefaultPlaceholder,\n} from './components/editable'\nexport { AndroidEditable } from './components/android/android-editable'\nexport { DefaultElement } from './components/element'\nexport { DefaultLeaf } from './components/leaf'\nexport { Slate } from './components/slate'\n\n// Hooks\nexport { useEditor } from './hooks/use-editor'\nexport { useSlateStatic } from './hooks/use-slate-static'\nexport { useFocused } from './hooks/use-focused'\nexport { useReadOnly } from './hooks/use-read-only'\nexport { useSelected } from './hooks/use-selected'\nexport { useSlate } from './hooks/use-slate'\nexport { useSlateSelector } from './hooks/use-slate-selector'\n\n// Plugin\nexport { ReactEditor } from './plugin/react-editor'\nexport { withReact } from './plugin/with-react'\n"],"names":["objectWithoutPropertiesLoose","IS_REACT_VERSION_17_OR_ABOVE","parseInt","React","version","split","IS_IOS","navigator","window","test","userAgent","MSStream","IS_APPLE","IS_ANDROID","IS_FIREFOX","IS_SAFARI","IS_EDGE_LEGACY","IS_CHROME","IS_CHROME_LEGACY","IS_FIREFOX_LEGACY","IS_QQBROWSER","IS_UC_MOBILE","IS_WECHATBROWSER","CAN_USE_DOM","document","createElement","HAS_BEFORE_INPUT_SUPPORT","globalThis","InputEvent","prototype","getTargetRanges","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","String","props","isLast","leaf","parent","text","editor","useSlateStatic","path","ReactEditor","findPath","parentPath","Path","isVoid","ZeroWidthString","length","Node","string","value","children","isInline","Editor","isLineBreak","slice","TextString","isTrailing","ref","useRef","getTextContent","textWithTrailing","current","textContent","NODE_TO_INDEX","WeakMap","NODE_TO_PARENT","EDITOR_TO_WINDOW","EDITOR_TO_ELEMENT","ELEMENT_TO_NODE","NODE_TO_ELEMENT","NODE_TO_KEY","EDITOR_TO_KEY_TO_ELEMENT","IS_READ_ONLY","IS_FOCUSED","IS_COMPOSING","IS_ON_COMPOSITION_END","EDITOR_TO_USER_SELECTION","EDITOR_ON_COMPOSITION_TEXT","EDITOR_TO_ON_CHANGE","NODE_TO_RESTORE_DOM","PLACEHOLDER_SYMBOL","Symbol","Leaf","renderPlaceholder","renderLeaf","DefaultLeaf","placeholderRef","placeholderEl","editorEl","querySelector","style","minHeight","clientHeight","placeholderProps","placeholder","attributes","position","pointerEvents","width","maxWidth","display","opacity","userSelect","textDecoration","contentEditable","Fragment","MemoizedLeaf","memo","prev","next","Text","equals","shallowCompare","obj1","obj2","Object","keys","every","key","hasOwnProperty","isDecoratorRangeListEqual","list","another","i","range","other","rangeOwnProps","otherOwnProps","Range","useContentKey","node","contentKeyRef","updateAnimationFrameRef","setForceRerenderCounter","useState","set","requestAnimationFrame","state","delete","cancelAnimationFrame","decorations","leaves","SlateText","findKey","push","id","KEY_TO_ELEMENT","get","contentKey","undefined","MemoizedText","Element","element","renderElement","p","DefaultElement","selection","readOnly","useReadOnly","useChildren","hasInlines","dir","getDirection","Tag","texts","height","color","outline","content","MemoizedElement","EditorContext","createContext","useContext","Error","DecorateContext","useDecorate","SelectedContext","useSelected","decorate","isLeafBlock","isElement","concat","n","sel","intersection","ds","dec","d","Provider","ElementComponent","TextComponent","HOTKEYS","bold","compose","moveBackward","moveForward","moveWordBackward","moveWordForward","deleteBackward","deleteForward","extendBackward","extendForward","italic","insertSoftBreak","splitBlock","undo","APPLE_HOTKEYS","moveLineBackward","moveLineForward","deleteLineBackward","deleteLineForward","deleteWordBackward","deleteWordForward","extendLineBackward","extendLineForward","redo","transposeCharacter","WINDOWS_HOTKEYS","create","generic","apple","windows","isGeneric","isKeyHotkey","isApple","isWindows","event","isBold","isCompose","isMoveBackward","isMoveForward","isDeleteBackward","isDeleteForward","isDeleteLineBackward","isDeleteLineForward","isDeleteWordBackward","isDeleteWordForward","isExtendBackward","isExtendForward","isExtendLineBackward","isExtendLineForward","isItalic","isMoveLineBackward","isMoveLineForward","isMoveWordBackward","isMoveWordForward","isRedo","isSoftBreak","isSplitBlock","isTransposeCharacter","isUndo","ReadOnlyContext","SlateContext","useSlate","context","getDefaultView","ownerDocument","defaultView","isDOMComment","isDOMNode","nodeType","isDOMElement","isDOMSelection","anchorNode","Selection","isDOMText","isPlainTextOnlyPaste","clipboardData","getData","types","normalizeDOMPoint","domPoint","offset","childNodes","index","getEditableChildAndIndex","getEditableChild","hasShadowRoot","activeElement","shadowRoot","direction","child","triedForward","triedBackward","getAttribute","getPlainText","domNode","nodeValue","childNode","Array","from","getComputedStyle","getPropertyValue","tagName","catchSlateFragment","getSlateFragmentAttribute","dataTransfer","htmlData","fragment","match","getClipboardData","DataTransfer","forEach","type","setData","TRIPLE_CLICK","Children","Editable","autoFocus","defaultDecorate","onDOMBeforeInput","propsOnDOMBeforeInput","DefaultPlaceholder","scrollSelectionIntoView","defaultScrollSelectionIntoView","as","Component","isComposing","setIsComposing","deferredOperations","useMemo","hasInsertPrefixInCompositon","isDraggingInternally","isUpdatingSelection","latestElement","root","findDocumentOrShadowRoot","domSelection","getSelection","isFocused","hasDomSelection","editorElement","hasDomSelectionInEditor","contains","focusNode","slateRange","toSlateRange","exactMatch","suppressThrow","hasRange","newDomRange","toDOMRange","isBackward","setBaseAndExtent","endContainer","endOffset","startContainer","startOffset","removeAllRanges","setTimeout","el","toDOMNode","focus","onDOMSelectionChange","useCallback","throttle","Transforms","deselect","anchorNodeSelectable","hasEditableTarget","isTargetInsideNonReadonlyVoid","focusNodeSelectable","select","scheduleOnDOMSelectionChange","debounce","target","isDOMEventHandled","flush","inputType","data","native","isCollapsed","anchor","marks","toDOMPoint","parentElement","closest","hasDOMNode","getWindow","lastText","createTreeWalker","NodeFilter","SHOW_TEXT","lastChild","startsWith","targetRange","selectionRef","rangeRef","preventDefault","isExpanded","endsWith","deleteFragment","unit","insertBreak","constructor","name","insertData","insertText","toRestore","unref","addEventListener","removeEventListener","start","role","spellCheck","autoCorrect","autoCapitalize","zindex","suppressContentEditableWarning","whiteSpace","wordWrap","onBeforeInput","isEventHandled","onInput","op","onBlur","relatedTarget","hasAttribute","toSlateNode","onClick","hasTarget","hasPath","detail","blockPath","isBlock","block","above","at","end","startVoid","void","endVoid","onCompositionEnd","leafPath","currentTextNode","withoutNormalizing","replace","distance","reverse","onCompositionUpdate","onCompositionStart","inline","mode","inlinePath","isEnd","point","after","setSelection","insertNodes","onCopy","setFragmentData","onCut","onDragOver","onDragStart","voidMatch","voids","onDrop","draggedRange","findEventRange","onDragEnd","onFocus","onKeyDown","nativeEvent","isRTL","Hotkeys","maybeHistoryEditor","move","edge","collapse","currentNode","onPaste","domRange","leafEl","getBoundingClientRect","bind","scrollIntoView","scrollMode","editable","slateNode","handler","shouldTreatEventAsHandled","isDefaultPrevented","isPropagationStopped","defaultPrevented","getDiffStart","Math","min","charAt","getDiffEnd","max","prevLength","nextLength","prevChar","nextChar","getDiffOffsets","maxEnd","sliceText","offsets","diffText","removeText","combineInsertedText","insertedText","reduce","acc","getTextInsertion","isText","prevText","nextText","textDiff","textPath","normalizeTextInsertionRange","insertionRange","isSingleCharacterInsertion","nodes","characterBeforeAnchor","characterAfterAnchor","Key","isEditor","unshift","JSON","stringify","getRootNode","Document","ShadowRoot","isReadOnly","blur","preventScroll","rangeCount","options","targetEl","err","message","includes","isContentEditable","insertFragmentData","insertTextData","originEvent","selector","querySelectorAll","attr","trueLength","domAnchor","domFocus","createRange","startNode","endNode","startEl","isStartAtZeroWidth","endEl","isEndAtZeroWidth","setStart","setEnd","domEl","clientX","x","clientY","y","rect","isPrev","left","top","before","caretRangeFromPoint","caretPositionFromPoint","offsetNode","toSlatePoint","nearestNode","nearestOffset","parentNode","textNode","potentialVoidNode","voidNode","leafNode","contents","cloneContents","removals","call","removeChild","anchorOffset","focusOffset","collapsed","isForward","unhangRange","gatherMutationData","mutations","addedNodes","removedNodes","characterDataMutations","mutation","addedNode","removedNode","textInsertion","some","parentDOMNode","HTMLElement","isDeletion","_","isReplaceExpandedSelection","isTextInsertion","isRemoveLeafNodes","AndroidInputManager","restoreDOM","reconcileMutations","console","error","mutationData","replaceExpandedSelection","removeLeafNodes","insertion","useMutationObserver","callback","mutationObserver","MutationObserver","disconnect","observe","MUTATION_OBSERVER_CONFIG","childList","characterData","subtree","findClosestKnowSlateNode","useRestoreDom","receivedUserInput","mutatedNodes","Set","handleDOMMutation","add","clear","restore","mutated","values","nodesToRestore","filter","m","isParent","useTrackUserInput","animationFrameRef","onUserInput","characterDataOldValue","useAndroidInputManager","restoreDom","inputManager","timeoutId","isReconciling","clearTimeout","RESOLVE_DELAY","AndroidEditable","boundary","lookupNode","FocusedContext","useFocused","isError","SlateSelectorContext","refEquality","a","b","useSlateSelector","equalityFn","forceRender","useReducer","s","getSlate","latestSubscriptionCallbackError","latestSelector","latestSelectedState","selectedState","stack","checkForUpdates","newSelectedState","unsubscribe","getSelectorContext","eventListeners","slateRef","onChange","listener","selectorContext","splice","indexOf","Slate","rest","unmountRef","setContext","isNodeList","assign","handleSelectorChange","onContextChange","setIsFocused","fn","useEditor","doRectsIntersect","compareRect","middle","bottom","areRangesSameLine","range1","range2","rect1","rect2","findCurrentLineRange","parentRange","parentRangeBoundary","positions","right","floor","withReact","e","apply","parentBlockEntry","parentBlockPath","parentElementRange","currentLineRange","matches","getMatches","prevPath","previous","commonPath","common","newPath","edges","attach","trim","r","cloneRange","setEndAfter","zw","isNewline","span","appendChild","getFragment","encoded","btoa","encodeURIComponent","setAttribute","div","body","innerHTML","decoded","decodeURIComponent","atob","parsed","parse","insertFragment","lines","line","splitNodes","always","ReactDOM","unstable_batchedUpdates","levels","DefaultEditable"],"mappings":";;;;;;;;;AAAe,SAAS,eAAe,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE;AACzD,EAAE,IAAI,GAAG,IAAI,GAAG,EAAE;AAClB,IAAI,MAAM,CAAC,cAAc,CAAC,GAAG,EAAE,GAAG,EAAE;AACpC,MAAM,KAAK,EAAE,KAAK;AAClB,MAAM,UAAU,EAAE,IAAI;AACtB,MAAM,YAAY,EAAE,IAAI;AACxB,MAAM,QAAQ,EAAE,IAAI;AACpB,KAAK,CAAC,CAAC;AACP,GAAG,MAAM;AACT,IAAI,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AACrB,GAAG;AACH;AACA,EAAE,OAAO,GAAG,CAAC;AACb;;ACbe,SAAS,6BAA6B,CAAC,MAAM,EAAE,QAAQ,EAAE;AACxE,EAAE,IAAI,MAAM,IAAI,IAAI,EAAE,OAAO,EAAE,CAAC;AAChC,EAAE,IAAI,MAAM,GAAG,EAAE,CAAC;AAClB,EAAE,IAAI,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACvC,EAAE,IAAI,GAAG,EAAE,CAAC,CAAC;AACb;AACA,EAAE,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC1C,IAAI,GAAG,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;AACxB,IAAI,IAAI,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,SAAS;AAC7C,IAAI,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;AAC9B,GAAG;AACH;AACA,EAAE,OAAO,MAAM,CAAC;AAChB;;ACZe,SAAS,wBAAwB,CAAC,MAAM,EAAE,QAAQ,EAAE;AACnE,EAAE,IAAI,MAAM,IAAI,IAAI,EAAE,OAAO,EAAE,CAAC;AAChC,EAAE,IAAI,MAAM,GAAGA,6BAA4B,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;AAC9D,EAAE,IAAI,GAAG,EAAE,CAAC,CAAC;AACb;AACA,EAAE,IAAI,MAAM,CAAC,qBAAqB,EAAE;AACpC,IAAI,IAAI,gBAAgB,GAAG,MAAM,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC;AAChE;AACA,IAAI,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,gBAAgB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAClD,MAAM,GAAG,GAAG,gBAAgB,CAAC,CAAC,CAAC,CAAC;AAChC,MAAM,IAAI,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,SAAS;AAC/C,MAAM,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,oBAAoB,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,EAAE,SAAS;AAC7E,MAAM,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;AAChC,KAAK;AACL,GAAG;AACH;AACA,EAAE,OAAO,MAAM,CAAC;AAChB;;AChBO,IAAMC,4BAA4B,GACvCC,QAAQ,CAACC,KAAK,CAACC,OAAN,CAAcC,KAAd,CAAoB,GAApB,EAAyB,CAAzB,CAAD,EAA8B,EAA9B,CAAR,IAA6C,EADxC;AAGA,IAAMC,MAAM,GACjB,OAAOC,SAAP,KAAqB,WAArB,IACA,OAAOC,MAAP,KAAkB,WADlB,IAEA,mBAAmBC,IAAnB,CAAwBF,SAAS,CAACG,SAAlC,CAFA,IAGA,CAACF,MAAM,CAACG,QAJH;AAMA,IAAMC,QAAQ,GACnB,OAAOL,SAAP,KAAqB,WAArB,IAAoC,WAAWE,IAAX,CAAgBF,SAAS,CAACG,SAA1B,CAD/B;AAGA,IAAMG,UAAU,GACrB,OAAON,SAAP,KAAqB,WAArB,IAAoC,UAAUE,IAAV,CAAeF,SAAS,CAACG,SAAzB,CAD/B;AAGA,IAAMI,UAAU,GACrB,OAAOP,SAAP,KAAqB,WAArB,IACA,mCAAmCE,IAAnC,CAAwCF,SAAS,CAACG,SAAlD,CAFK;AAIA,IAAMK,SAAS,GACpB,OAAOR,SAAP,KAAqB,WAArB,IACA,2BAA2BE,IAA3B,CAAgCF,SAAS,CAACG,SAA1C,CAFK;;AAKA,IAAMM,cAAc,GACzB,OAAOT,SAAP,KAAqB,WAArB,IACA,0CAA0CE,IAA1C,CAA+CF,SAAS,CAACG,SAAzD,CAFK;AAIA,IAAMO,SAAS,GACpB,OAAOV,SAAP,KAAqB,WAArB,IAAoC,UAAUE,IAAV,CAAeF,SAAS,CAACG,SAAzB,CAD/B;AAIP;;AACO,IAAMQ,gBAAgB,GAC3B,OAAOX,SAAP,KAAqB,WAArB,IACA,4CAA4CE,IAA5C,CAAiDF,SAAS,CAACG,SAA3D,CAFK;;AAKA,IAAMS,iBAAiB,GAC5B,OAAOZ,SAAP,KAAqB,WAArB,IACA,oEAAoEE,IAApE,CACEF,SAAS,CAACG,SADZ,CAFK;;AAOA,IAAMU,YAAY,GACvB,OAAOb,SAAP,KAAqB,WAArB,IAAoC,cAAcE,IAAd,CAAmBF,SAAS,CAACG,SAA7B,CAD/B;;AAIA,IAAMW,YAAY,GACvB,OAAOd,SAAP,KAAqB,WAArB,IAAoC,cAAcE,IAAd,CAAmBF,SAAS,CAACG,SAA7B,CAD/B;;AAIA,IAAMY,gBAAgB,GAC3B,OAAOf,SAAP,KAAqB,WAArB,IAAoC,WAAWE,IAAX,CAAgBF,SAAS,CAACG,SAA1B,CAD/B;AAIP;;AACO,IAAMa,WAAW,GAAG,CAAC,EAC1B,OAAOf,MAAP,KAAkB,WAAlB,IACA,OAAOA,MAAM,CAACgB,QAAd,KAA2B,WAD3B,IAEA,OAAOhB,MAAM,CAACgB,QAAP,CAAgBC,aAAvB,KAAyC,WAHf,CAArB;AAOP;;AACO,IAAMC,wBAAwB,GACnC,CAACR,gBAAD,IACA,CAACF,cADD;AAGA,OAAOW,UAAP,KAAsB,WAHtB,IAIAA,UAAU,CAACC,UAJX;AAMA,OAAOD,UAAU,CAACC,UAAX,CAAsBC,SAAtB,CAAgCC,eAAvC,KAA2D,UAPtD;;ACjEP;;;;AAIO,IAAMC,yBAAyB,GAAGR,WAAW,GAChDS,eADgD,GAEhDC,SAFG;;ACDP;;;;AAIA,IAAMC,MAAM,GAAIC,KAAD;AAMb,MAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,IAAV;AAAgBC,IAAAA,MAAhB;AAAwBC,IAAAA;AAAxB,MAAiCJ,KAAvC;AACA,MAAMK,MAAM,GAAGC,cAAc,EAA7B;AACA,MAAMC,IAAI,GAAGC,WAAW,CAACC,QAAZ,CAAqBJ,MAArB,EAA6BD,IAA7B,CAAb;AACA,MAAMM,UAAU,GAAGC,IAAI,CAACR,MAAL,CAAYI,IAAZ,CAAnB;AAGA;;AACA,MAAIF,MAAM,CAACO,MAAP,CAAcT,MAAd,CAAJ,EAA2B;AACzB,wBAAOnC,mBAAA,CAAC6C,eAAD;AAAiBC,MAAAA,MAAM,EAAEC,IAAI,CAACC,MAAL,CAAYb,MAAZ,EAAoBW;KAA7C,CAAP;AACD;AAGD;AACA;;;AACA,MACEZ,IAAI,CAACe,KAAL,KAAe,EAAf,IACAd,MAAM,CAACe,QAAP,CAAgBf,MAAM,CAACe,QAAP,CAAgBJ,MAAhB,GAAyB,CAAzC,MAAgDV,IADhD,IAEA,CAACC,MAAM,CAACc,QAAP,CAAgBhB,MAAhB,CAFD,IAGAiB,MAAM,CAACJ,MAAP,CAAcX,MAAd,EAAsBK,UAAtB,MAAsC,EAJxC,EAKE;AACA,wBAAO1C,mBAAA,CAAC6C,eAAD;AAAiBQ,MAAAA,WAAW;KAA5B,CAAP;AACD;AAGD;AACA;;;AACA,MAAInB,IAAI,CAACe,KAAL,KAAe,EAAnB,EAAuB;AACrB,wBAAOjD,mBAAA,CAAC6C,eAAD,MAAA,CAAP;AACD;AAGD;;;AACA,MAAIZ,MAAM,IAAIC,IAAI,CAACe,KAAL,CAAWK,KAAX,CAAiB,CAAC,CAAlB,MAAyB,IAAvC,EAA6C;AAC3C,wBAAOtD,mBAAA,CAACuD,UAAD;AAAYC,MAAAA,UAAU;AAACpB,MAAAA,IAAI,EAAEF,IAAI,CAACe;KAAlC,CAAP;AACD;;AAED,sBAAOjD,mBAAA,CAACuD,UAAD;AAAYnB,IAAAA,IAAI,EAAEF,IAAI,CAACe;GAAvB,CAAP;AACD,CA3CD;AA6CA;;;;;AAGA,IAAMM,UAAU,GAAIvB,KAAD;AACjB,MAAM;AAAEI,IAAAA,IAAF;AAAQoB,IAAAA,UAAU,GAAG;AAArB,MAA+BxB,KAArC;AAEA,MAAMyB,GAAG,GAAGC,MAAM,CAAkB,IAAlB,CAAlB;;AAEA,MAAMC,cAAc,GAAG;AACrB,qBAAUvB,IAAV,aAAUA,IAAV,cAAUA,IAAV,GAAkB,EAAlB,SAAuBoB,UAAU,GAAG,IAAH,GAAU,EAA3C;AACD,GAFD;AAKA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AACA5B,EAAAA,yBAAyB,CAAC;AACxB;AACA,QAAMgC,gBAAgB,GAAGD,cAAc,EAAvC;;AAEA,QAAIF,GAAG,CAACI,OAAJ,IAAeJ,GAAG,CAACI,OAAJ,CAAYC,WAAZ,KAA4BF,gBAA/C,EAAiE;AAC/DH,MAAAA,GAAG,CAACI,OAAJ,CAAYC,WAAZ,GAA0BF,gBAA1B;AACD;AAGD;;AACD,GAVwB,CAAzB;AAaA;;AACA,MAAI,CAACH,GAAG,CAACI,OAAT,EAAkB;AAChB,wBACE7D,mBAAA,OAAA;;AAAwByD,MAAAA,GAAG,EAAEA;KAA7B,EACGE,cAAc,EADjB,CADF;AAKD;;;AAGD,sBAAO3D,mBAAA,OAAA;;AAAwByD,IAAAA,GAAG,EAAEA;GAA7B,CAAP;AACD,CA1CD;AA4CA;;;;;AAIA,IAAMZ,eAAe,GAAIb,KAAD;AACtB,MAAM;AAAEc,IAAAA,MAAM,GAAG,CAAX;AAAcO,IAAAA,WAAW,GAAG;AAA5B,MAAsCrB,KAA5C;AACA,sBACEhC,mBAAA,OAAA;6BACyBqD,WAAW,GAAG,GAAH,GAAS;yBACxBP;GAFrB,EAIG,QAJH,EAKGO,WAAW,gBAAGrD,mBAAA,KAAA,MAAA,CAAH,GAAY,IAL1B,CADF;AASD,CAXD;;ACtGA;;;;AAKO,IAAM+D,aAAa,GAA0B,IAAIC,OAAJ,EAA7C;AACA,IAAMC,cAAc,GAA4B,IAAID,OAAJ,EAAhD;AAEP;;;;;AAIO,IAAME,gBAAgB,GAA4B,IAAIF,OAAJ,EAAlD;AACA,IAAMG,iBAAiB,GAAiC,IAAIH,OAAJ,EAAxD;AAEA,IAAMI,eAAe,GAA+B,IAAIJ,OAAJ,EAApD;AACA,IAAMK,eAAe,GAA+B,IAAIL,OAAJ,EAApD;AACA,IAAMM,WAAW,GAAuB,IAAIN,OAAJ,EAAxC;AACA,IAAMO,wBAAwB,GAGjC,IAAIP,OAAJ,EAHG;AAKP;;;;AAIO,IAAMQ,YAAY,GAA6B,IAAIR,OAAJ,EAA/C;AACA,IAAMS,UAAU,GAA6B,IAAIT,OAAJ,EAA7C;AAGA,IAAMU,YAAY,GAA6B,IAAIV,OAAJ,EAA/C;AACA,IAAMW,qBAAqB,GAA6B,IAAIX,OAAJ,EAAxD;AAEA,IAAMY,wBAAwB,GAA8B,IAAIZ,OAAJ,EAA5D;AAEP;;;;AAIO,IAAMa,0BAA0B,GAGnC,IAAIb,OAAJ,EAHG;AAKP;;;;AAIO,IAAMc,mBAAmB,GAAG,IAAId,OAAJ,EAA5B;AAEA,IAAMe,mBAAmB,GAAG,IAAIf,OAAJ,EAA5B;AAEP;;;;AAIO,IAAMgB,kBAAkB,GAAIC,MAAM,CAAC,aAAD,CAAlC;;ACvDP;;;;AAIA,IAAMC,IAAI,GAAIlD,KAAD;AAQX,MAAM;AACJE,IAAAA,IADI;AAEJD,IAAAA,MAFI;AAGJG,IAAAA,IAHI;AAIJD,IAAAA,MAJI;AAKJgD,IAAAA,iBALI;AAMJC,IAAAA,UAAU,GAAIpD,KAAD,iBAA4BhC,mBAAA,CAACqF,WAAD,oBAAiBrD,MAAjB;AANrC,MAOFA,KAPJ;AASA,MAAMsD,cAAc,GAAG5B,MAAM,CAAyB,IAAzB,CAA7B;AAEA5B,EAAAA,SAAS,CAAC;AACR,QAAMyD,aAAa,GAAGD,cAAH,aAAGA,cAAH,uBAAGA,cAAc,CAAEzB,OAAtC;AACA,QAAM2B,QAAQ,GAAGnE,QAAQ,CAACoE,aAAT,CACf,4BADe,CAAjB;;AAIA,QAAI,CAACF,aAAD,IAAkB,CAACC,QAAvB,EAAiC;AAC/B;AACD;;AAEDA,IAAAA,QAAQ,CAACE,KAAT,CAAeC,SAAf,aAA8BJ,aAAa,CAACK,YAA5C;AAEA,WAAO;AACLJ,MAAAA,QAAQ,CAACE,KAAT,CAAeC,SAAf,GAA2B,MAA3B;AACD,KAFD;AAGD,GAfQ,EAeN,CAACL,cAAD,EAAiBpD,IAAjB,CAfM,CAAT;AAiBA,MAAIgB,QAAQ,gBACVlD,mBAAA,CAAC+B,MAAD;AAAQE,IAAAA,MAAM,EAAEA;AAAQC,IAAAA,IAAI,EAAEA;AAAMC,IAAAA,MAAM,EAAEA;AAAQC,IAAAA,IAAI,EAAEA;GAA1D,CADF;;AAIA,MAAIF,IAAI,CAAC8C,kBAAD,CAAR,EAA8B;AAC5B,QAAMa,gBAAgB,GAA2B;AAC/C3C,MAAAA,QAAQ,EAAEhB,IAAI,CAAC4D,WADgC;AAE/CC,MAAAA,UAAU,EAAE;AACV,kCAA0B,IADhB;AAEVL,QAAAA,KAAK,EAAE;AACLM,UAAAA,QAAQ,EAAE,UADL;AAELC,UAAAA,aAAa,EAAE,MAFV;AAGLC,UAAAA,KAAK,EAAE,MAHF;AAILC,UAAAA,QAAQ,EAAE,MAJL;AAKLC,UAAAA,OAAO,EAAE,OALJ;AAMLC,UAAAA,OAAO,EAAE,OANJ;AAOLC,UAAAA,UAAU,EAAE,MAPP;AAQLC,UAAAA,cAAc,EAAE;AARX,SAFG;AAYVC,QAAAA,eAAe,EAAE,KAZP;AAaV/C,QAAAA,GAAG,EAAE6B;AAbK;AAFmC,KAAjD;AAmBApC,IAAAA,QAAQ,gBACNlD,mBAAA,CAACA,KAAK,CAACyG,QAAP,MAAA,EACGtB,iBAAiB,CAACU,gBAAD,CADpB,EAEG3C,QAFH,CADF;AAMD;AAGD;AACA;;;AACA,MAAM6C,UAAU,GAEZ;AACF,uBAAmB;AADjB,GAFJ;AAMA,SAAOX,UAAU,CAAC;AAAEW,IAAAA,UAAF;AAAc7C,IAAAA,QAAd;AAAwBhB,IAAAA,IAAxB;AAA8BE,IAAAA;AAA9B,GAAD,CAAjB;AACD,CA9ED;;AAgFA,IAAMsE,YAAY,gBAAG1G,KAAK,CAAC2G,IAAN,CAAWzB,IAAX,EAAiB,CAAC0B,IAAD,EAAOC,IAAP;AACpC,SACEA,IAAI,CAAC1E,MAAL,KAAgByE,IAAI,CAACzE,MAArB,IACA0E,IAAI,CAAC5E,MAAL,KAAgB2E,IAAI,CAAC3E,MADrB,IAEA4E,IAAI,CAACzB,UAAL,KAAoBwB,IAAI,CAACxB,UAFzB,IAGAyB,IAAI,CAAC1B,iBAAL,KAA2ByB,IAAI,CAACzB,iBAHhC,IAIA0B,IAAI,CAACzE,IAAL,KAAcwE,IAAI,CAACxE,IAJnB,IAKA0E,MAAI,CAACC,MAAL,CAAYF,IAAI,CAAC3E,IAAjB,EAAuB0E,IAAI,CAAC1E,IAA5B,CALA,IAMA2E,IAAI,CAAC3E,IAAL,CAAU8C,kBAAV,MAAkC4B,IAAI,CAAC1E,IAAL,CAAU8C,kBAAV,CAPpC;AASD,CAVoB,CAArB;IAYaK,WAAW,GAAIrD,KAAD;AACzB,MAAM;AAAE+D,IAAAA,UAAF;AAAc7C,IAAAA;AAAd,MAA2BlB,KAAjC;AACA,sBAAOhC,mBAAA,OAAA,oBAAU+F,WAAV,EAAuB7C,QAAvB,CAAP;AACD;;;;ACtGM,IAAM8D,cAAc,GAAG,CAACC,IAAD,EAAWC,IAAX,KAC5BC,MAAM,CAACC,IAAP,CAAYH,IAAZ,EAAkBnE,MAAlB,KAA6BqE,MAAM,CAACC,IAAP,CAAYF,IAAZ,EAAkBpE,MAA/C,IACAqE,MAAM,CAACC,IAAP,CAAYH,IAAZ,EAAkBI,KAAlB,CACEC,GAAG,IAAIJ,IAAI,CAACK,cAAL,CAAoBD,GAApB,KAA4BL,IAAI,CAACK,GAAD,CAAJ,KAAcJ,IAAI,CAACI,GAAD,CADvD,CAFK;AAMP;;;;;;;;AAQO,IAAME,yBAAyB,GAAG,CACvCC,IADuC,EAEvCC,OAFuC;AAIvC,MAAID,IAAI,CAAC3E,MAAL,KAAgB4E,OAAO,CAAC5E,MAA5B,EAAoC;AAClC,WAAO,KAAP;AACD;;AAED,OAAK,IAAI6E,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,IAAI,CAAC3E,MAAzB,EAAiC6E,CAAC,EAAlC,EAAsC;AACpC,QAAMC,KAAK,GAAGH,IAAI,CAACE,CAAD,CAAlB;AACA,QAAME,KAAK,GAAGH,OAAO,CAACC,CAAD,CAArB;;AAEA,QAAmDG,aAAnD,4BAAqEF,KAArE;;AACA,QAAmDG,aAAnD,4BAAqEF,KAArE;;AAEA,QACE,CAACG,KAAK,CAACjB,MAAN,CAAaa,KAAb,EAAoBC,KAApB,CAAD,IACAD,KAAK,CAAC5C,kBAAD,CAAL,KAA8B6C,KAAK,CAAC7C,kBAAD,CADnC,IAEA,CAACgC,cAAc,CAACc,aAAD,EAAgBC,aAAhB,CAHjB,EAIE;AACA,aAAO,KAAP;AACD;AACF;;AAED,SAAO,IAAP;AACD,CAzBM;;SCbSE,cAAcC;AAC5B,MAAMC,aAAa,GAAGzE,MAAM,CAAS,CAAT,CAA5B;AACA,MAAM0E,uBAAuB,GAAG1E,MAAM,CAAgB,IAAhB,CAAtC;AAEA,MAAM,GAAG2E,uBAAH,IAA8BC,QAAQ,CAAC,CAAD,CAA5C;AAEAxG,EAAAA,SAAS,CAAC;AACRiD,IAAAA,mBAAmB,CAACwD,GAApB,CAAwBL,IAAxB,EAA8B;AAC5B;AACA,UAAIE,uBAAuB,CAACvE,OAA5B,EAAqC;AACnC;AACD;;AAEDuE,MAAAA,uBAAuB,CAACvE,OAAxB,GAAkC2E,qBAAqB,CAAC;AACtDH,QAAAA,uBAAuB,CAACI,KAAK,IAAIA,KAAK,GAAG,CAAlB,CAAvB;AACAL,QAAAA,uBAAuB,CAACvE,OAAxB,GAAkC,IAAlC;AACD,OAHsD,CAAvD;AAKAsE,MAAAA,aAAa,CAACtE,OAAd;AACD,KAZD;AAcA,WAAO;AACLkB,MAAAA,mBAAmB,CAAC2D,MAApB,CAA2BR,IAA3B;AACD,KAFD;AAGD,GAlBQ,EAkBN,CAACA,IAAD,CAlBM,CAAT;;AAqBA,MAAIE,uBAAuB,CAACvE,OAA5B,EAAqC;AACnC8E,IAAAA,oBAAoB,CAACP,uBAAuB,CAACvE,OAAzB,CAApB;AACAuE,IAAAA,uBAAuB,CAACvE,OAAxB,GAAkC,IAAlC;AACD;;AAED,SAAOsE,aAAa,CAACtE,OAArB;AACD;;ACrBD;;;;AAIA,IAAMiD,IAAI,GAAI9E,KAAD;AAQX,MAAM;AACJ4G,IAAAA,WADI;AAEJ3G,IAAAA,MAFI;AAGJE,IAAAA,MAHI;AAIJgD,IAAAA,iBAJI;AAKJC,IAAAA,UALI;AAMJhD,IAAAA;AANI,MAOFJ,KAPJ;AAQA,MAAMK,MAAM,GAAGC,cAAc,EAA7B;AACA,MAAMmB,GAAG,GAAGC,MAAM,CAAkB,IAAlB,CAAlB;AACA,MAAMmF,MAAM,GAAGC,MAAS,CAACF,WAAV,CAAsBxG,IAAtB,EAA4BwG,WAA5B,CAAf;AACA,MAAMtB,GAAG,GAAG9E,WAAW,CAACuG,OAAZ,CAAoB1G,MAApB,EAA4BD,IAA5B,CAAZ;AACA,MAAMc,QAAQ,GAAG,EAAjB;;AAEA,OAAK,IAAIyE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGkB,MAAM,CAAC/F,MAA3B,EAAmC6E,CAAC,EAApC,EAAwC;AACtC,QAAMzF,IAAI,GAAG2G,MAAM,CAAClB,CAAD,CAAnB;AAEAzE,IAAAA,QAAQ,CAAC8F,IAAT,eACEhJ,mBAAA,CAACkF,YAAD;AACEjD,MAAAA,MAAM,EAAEA,MAAM,IAAI0F,CAAC,KAAKkB,MAAM,CAAC/F,MAAP,GAAgB;AACxCwE,MAAAA,GAAG,YAAKA,GAAG,CAAC2B,EAAT,cAAetB,CAAf;AACHxC,MAAAA,iBAAiB,EAAEA;AACnBjD,MAAAA,IAAI,EAAEA;AACNE,MAAAA,IAAI,EAAEA;AACND,MAAAA,MAAM,EAAEA;AACRiD,MAAAA,UAAU,EAAEA;KAPd,CADF;AAWD;;;AAGDxD,EAAAA,yBAAyB,CAAC;AACxB,QAAMsH,cAAc,GAAG3E,wBAAwB,CAAC4E,GAAzB,CAA6B9G,MAA7B,CAAvB;;AACA,QAAIoB,GAAG,CAACI,OAAR,EAAiB;AACfqF,MAAAA,cAAc,SAAd,IAAAA,cAAc,WAAd,YAAAA,cAAc,CAAEX,GAAhB,CAAoBjB,GAApB,EAAyB7D,GAAG,CAACI,OAA7B;AACAQ,MAAAA,eAAe,CAACkE,GAAhB,CAAoBnG,IAApB,EAA0BqB,GAAG,CAACI,OAA9B;AACAO,MAAAA,eAAe,CAACmE,GAAhB,CAAoB9E,GAAG,CAACI,OAAxB,EAAiCzB,IAAjC;AACD,KAJD,MAIO;AACL8G,MAAAA,cAAc,SAAd,IAAAA,cAAc,WAAd,YAAAA,cAAc,CAAER,MAAhB,CAAuBpB,GAAvB;AACAjD,MAAAA,eAAe,CAACqE,MAAhB,CAAuBtG,IAAvB;AACD;AACF,GAVwB,CAAzB;AAYA,MAAMgH,UAAU,GAAG1I,UAAU,GAAGuH,aAAa,CAAC7F,IAAD,CAAhB,GAAyBiH,SAAtD;AAEA,sBACErJ,mBAAA,OAAA;uBAAsB;AAAOyD,IAAAA,GAAG,EAAEA;AAAK6D,IAAAA,GAAG,EAAE8B;GAA5C,EACGlG,QADH,CADF;AAKD,CA1DD;;AA4DA,IAAMoG,YAAY,gBAAGtJ,KAAK,CAAC2G,IAAN,CAAWG,IAAX,EAAiB,CAACF,IAAD,EAAOC,IAAP;AACpC,SACEA,IAAI,CAAC1E,MAAL,KAAgByE,IAAI,CAACzE,MAArB,IACA0E,IAAI,CAAC5E,MAAL,KAAgB2E,IAAI,CAAC3E,MADrB,IAEA4E,IAAI,CAACzB,UAAL,KAAoBwB,IAAI,CAACxB,UAFzB,IAGAyB,IAAI,CAACzE,IAAL,KAAcwE,IAAI,CAACxE,IAHnB,IAIAoF,yBAAyB,CAACX,IAAI,CAAC+B,WAAN,EAAmBhC,IAAI,CAACgC,WAAxB,CAL3B;AAOD,CARoB,CAArB;;ACxDA;;;;AAIA,IAAMW,OAAO,GAAIvH,KAAD;AAQd,MAAM;AACJ4G,IAAAA,WADI;AAEJY,IAAAA,OAFI;AAGJC,IAAAA,aAAa,GAAIC,CAAD,iBAA2B1J,mBAAA,CAAC2J,cAAD,oBAAoBD,EAApB,CAHvC;AAIJvE,IAAAA,iBAJI;AAKJC,IAAAA,UALI;AAMJwE,IAAAA;AANI,MAOF5H,KAPJ;AAQA,MAAMyB,GAAG,GAAGC,MAAM,CAAc,IAAd,CAAlB;AACA,MAAMrB,MAAM,GAAGC,cAAc,EAA7B;AACA,MAAMuH,QAAQ,GAAGC,WAAW,EAA5B;AACA,MAAM3G,QAAQ,GAAGd,MAAM,CAACc,QAAP,CAAgBqG,OAAhB,CAAjB;AACA,MAAMlC,GAAG,GAAG9E,WAAW,CAACuG,OAAZ,CAAoB1G,MAApB,EAA4BmH,OAA5B,CAAZ;AACA,MAAItG,QAAQ,GAAoB6G,WAAW,CAAC;AAC1CnB,IAAAA,WAD0C;AAE1CV,IAAAA,IAAI,EAAEsB,OAFoC;AAG1CC,IAAAA,aAH0C;AAI1CtE,IAAAA,iBAJ0C;AAK1CC,IAAAA,UAL0C;AAM1CwE,IAAAA;AAN0C,GAAD,CAA3C;AAUA;;AACA,MAAM7D,UAAU,GAOZ;AACF,uBAAmB,SADjB;AAEFtC,IAAAA;AAFE,GAPJ;;AAYA,MAAIN,QAAJ,EAAc;AACZ4C,IAAAA,UAAU,CAAC,mBAAD,CAAV,GAAkC,IAAlC;AACD;AAGD;;;AACA,MAAI,CAAC5C,QAAD,IAAaC,MAAM,CAAC4G,UAAP,CAAkB3H,MAAlB,EAA0BmH,OAA1B,CAAjB,EAAqD;AACnD,QAAMpH,IAAI,GAAGW,IAAI,CAACC,MAAL,CAAYwG,OAAZ,CAAb;AACA,QAAMS,GAAG,GAAGC,YAAY,CAAC9H,IAAD,CAAxB;;AAEA,QAAI6H,GAAG,KAAK,KAAZ,EAAmB;AACjBlE,MAAAA,UAAU,CAACkE,GAAX,GAAiBA,GAAjB;AACD;AACF;;;AAGD,MAAI7G,MAAM,CAACR,MAAP,CAAcP,MAAd,EAAsBmH,OAAtB,CAAJ,EAAoC;AAClCzD,IAAAA,UAAU,CAAC,iBAAD,CAAV,GAAgC,IAAhC;;AAEA,QAAI,CAAC8D,QAAD,IAAa1G,QAAjB,EAA2B;AACzB4C,MAAAA,UAAU,CAACS,eAAX,GAA6B,KAA7B;AACD;;AAED,QAAM2D,GAAG,GAAGhH,QAAQ,GAAG,MAAH,GAAY,KAAhC;AACA,QAAM,CAAC,CAACf,KAAD,CAAD,IAAWW,IAAI,CAACqH,KAAL,CAAWZ,OAAX,CAAjB;AAEAtG,IAAAA,QAAQ,gBACNlD,mBAAA,CAACmK,GAAD;;AAEEzE,MAAAA,KAAK,EAAE;AACL2E,QAAAA,MAAM,EAAE,GADH;AAELC,QAAAA,KAAK,EAAE,aAFF;AAGLC,QAAAA,OAAO,EAAE,MAHJ;AAILvE,QAAAA,QAAQ,EAAE;AAJL;KAFT,eASEhG,mBAAA,CAAC8G,YAAD;AACE3B,MAAAA,iBAAiB,EAAEA;AACnByD,MAAAA,WAAW,EAAE;AACb3G,MAAAA,MAAM,EAAE;AACRE,MAAAA,MAAM,EAAEqH;AACRpH,MAAAA,IAAI,EAAEA;KALR,CATF,CADF;AAoBA2B,IAAAA,aAAa,CAACwE,GAAd,CAAkBnG,KAAlB,EAAwB,CAAxB;AACA6B,IAAAA,cAAc,CAACsE,GAAf,CAAmBnG,KAAnB,EAAyBoH,OAAzB;AACD;;;AAGD5H,EAAAA,yBAAyB,CAAC;AACxB,QAAMsH,cAAc,GAAG3E,wBAAwB,CAAC4E,GAAzB,CAA6B9G,MAA7B,CAAvB;;AACA,QAAIoB,GAAG,CAACI,OAAR,EAAiB;AACfqF,MAAAA,cAAc,SAAd,IAAAA,cAAc,WAAd,YAAAA,cAAc,CAAEX,GAAhB,CAAoBjB,GAApB,EAAyB7D,GAAG,CAACI,OAA7B;AACAQ,MAAAA,eAAe,CAACkE,GAAhB,CAAoBiB,OAApB,EAA6B/F,GAAG,CAACI,OAAjC;AACAO,MAAAA,eAAe,CAACmE,GAAhB,CAAoB9E,GAAG,CAACI,OAAxB,EAAiC2F,OAAjC;AACD,KAJD,MAIO;AACLN,MAAAA,cAAc,SAAd,IAAAA,cAAc,WAAd,YAAAA,cAAc,CAAER,MAAhB,CAAuBpB,GAAvB;AACAjD,MAAAA,eAAe,CAACqE,MAAhB,CAAuBc,OAAvB;AACD;AACF,GAVwB,CAAzB;AAYA,MAAMgB,OAAO,GAAGf,aAAa,CAAC;AAAE1D,IAAAA,UAAF;AAAc7C,IAAAA,QAAd;AAAwBsG,IAAAA;AAAxB,GAAD,CAA7B;;AAEA,MAAI9I,UAAJ,EAAgB;AACd,QAAM0I,UAAU,GAAGnB,aAAa,CAACuB,OAAD,CAAhC;AACA,wBAAOxJ,mBAAA,CAACyG,QAAD;AAAUa,MAAAA,GAAG,EAAE8B;KAAf,EAA4BoB,OAA5B,CAAP;AACD;;AAED,SAAOA,OAAP;AACD,CAnHD;;AAqHA,IAAMC,eAAe,gBAAGzK,KAAK,CAAC2G,IAAN,CAAW4C,OAAX,EAAoB,CAAC3C,IAAD,EAAOC,IAAP;AAC1C,SACED,IAAI,CAAC4C,OAAL,KAAiB3C,IAAI,CAAC2C,OAAtB,IACA5C,IAAI,CAAC6C,aAAL,KAAuB5C,IAAI,CAAC4C,aAD5B,IAEA7C,IAAI,CAACxB,UAAL,KAAoByB,IAAI,CAACzB,UAFzB,IAGAoC,yBAAyB,CAACZ,IAAI,CAACgC,WAAN,EAAmB/B,IAAI,CAAC+B,WAAxB,CAHzB,KAIChC,IAAI,CAACgD,SAAL,KAAmB/C,IAAI,CAAC+C,SAAxB,IACE,CAAC,CAAChD,IAAI,CAACgD,SAAP,IACC,CAAC,CAAC/C,IAAI,CAAC+C,SADR,IAEC5B,KAAK,CAACjB,MAAN,CAAaH,IAAI,CAACgD,SAAlB,EAA6B/C,IAAI,CAAC+C,SAAlC,CAPJ,CADF;AAUD,CAXuB,CAAxB;AAaA;;;;IAIaD,cAAc,GAAI3H,KAAD;AAC5B,MAAM;AAAE+D,IAAAA,UAAF;AAAc7C,IAAAA,QAAd;AAAwBsG,IAAAA;AAAxB,MAAoCxH,KAA1C;AACA,MAAMK,MAAM,GAAGC,cAAc,EAA7B;AACA,MAAM6H,GAAG,GAAG9H,MAAM,CAACc,QAAP,CAAgBqG,OAAhB,IAA2B,MAA3B,GAAoC,KAAhD;AACA,sBACExJ,mBAAA,CAACmK,GAAD,oBAASpE;AAAYL,IAAAA,KAAK,EAAE;AAAEM,MAAAA,QAAQ,EAAE;AAAZ;IAA5B,EACG9C,QADH,CADF;AAKD;;ACvKD;;;;AAIO,IAAMwH,aAAa,gBAAGC,aAAa,CAAqB,IAArB,CAAnC;AAEP;;;;IAIarI,cAAc,GAAG;AAC5B,MAAMD,MAAM,GAAGuI,UAAU,CAACF,aAAD,CAAzB;;AAEA,MAAI,CAACrI,MAAL,EAAa;AACX,UAAM,IAAIwI,KAAJ,kFAAN;AAGD;;AAED,SAAOxI,MAAP;AACD;;ACrBD;;;;AAIO,IAAMyI,eAAe,gBAAGH,aAAa,CAC1C,MAAM,EADoC,CAArC;AAIP;;;;AAIO,IAAMI,WAAW,GAAG;AACzB,SAAOH,UAAU,CAACE,eAAD,CAAjB;AACD,CAFM;;ACbP;;;;AAIO,IAAME,eAAe,gBAAGL,aAAa,CAAC,KAAD,CAArC;AAEP;;;;IAIaM,WAAW,GAAG;AACzB,SAAOL,UAAU,CAACI,eAAD,CAAjB;AACD;;ACED;;;;AAIA,IAAMjB,WAAW,GAAI/H,KAAD;AAQlB,MAAM;AACJ4G,IAAAA,WADI;AAEJV,IAAAA,IAFI;AAGJuB,IAAAA,aAHI;AAIJtE,IAAAA,iBAJI;AAKJC,IAAAA,UALI;AAMJwE,IAAAA;AANI,MAOF5H,KAPJ;AAQA,MAAMkJ,QAAQ,GAAGH,WAAW,EAA5B;AACA,MAAM1I,MAAM,GAAGC,cAAc,EAA7B;AACA,MAAMC,IAAI,GAAGC,WAAW,CAACC,QAAZ,CAAqBJ,MAArB,EAA6B6F,IAA7B,CAAb;AACA,MAAMhF,QAAQ,GAAG,EAAjB;AACA,MAAMiI,WAAW,GACf5B,SAAO,CAAC6B,SAAR,CAAkBlD,IAAlB,KACA,CAAC7F,MAAM,CAACc,QAAP,CAAgB+E,IAAhB,CADD,IAEA9E,MAAM,CAAC4G,UAAP,CAAkB3H,MAAlB,EAA0B6F,IAA1B,CAHF;;AAKA,OAAK,IAAIP,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGO,IAAI,CAAChF,QAAL,CAAcJ,MAAlC,EAA0C6E,CAAC,EAA3C,EAA+C;AAC7C,QAAM+B,CAAC,GAAGnH,IAAI,CAAC8I,MAAL,CAAY1D,CAAZ,CAAV;AACA,QAAM2D,CAAC,GAAGpD,IAAI,CAAChF,QAAL,CAAcyE,CAAd,CAAV;AACA,QAAML,GAAG,GAAG9E,WAAW,CAACuG,OAAZ,CAAoB1G,MAApB,EAA4BiJ,CAA5B,CAAZ;AACA,QAAM1D,KAAK,GAAGxE,MAAM,CAACwE,KAAP,CAAavF,MAAb,EAAqBqH,CAArB,CAAd;AACA,QAAM6B,GAAG,GAAG3B,SAAS,IAAI5B,KAAK,CAACwD,YAAN,CAAmB5D,KAAnB,EAA0BgC,SAA1B,CAAzB;AACA,QAAM6B,EAAE,GAAGP,QAAQ,CAAC,CAACI,CAAD,EAAI5B,CAAJ,CAAD,CAAnB;;AAEA,SAAK,IAAMgC,GAAX,IAAkB9C,WAAlB,EAA+B;AAC7B,UAAM+C,CAAC,GAAG3D,KAAK,CAACwD,YAAN,CAAmBE,GAAnB,EAAwB9D,KAAxB,CAAV;;AAEA,UAAI+D,CAAJ,EAAO;AACLF,QAAAA,EAAE,CAACzC,IAAH,CAAQ2C,CAAR;AACD;AACF;;AAED,QAAIpC,SAAO,CAAC6B,SAAR,CAAkBE,CAAlB,CAAJ,EAA0B;AACxBpI,MAAAA,QAAQ,CAAC8F,IAAT,eACEhJ,mBAAA,CAACgL,eAAe,CAACY,QAAjB;AAA0BtE,QAAAA,GAAG,qBAAcA,GAAG,CAAC2B,EAAlB;AAAwBhG,QAAAA,KAAK,EAAE,CAAC,CAACsI;OAA9D,eACEvL,mBAAA,CAAC6L,eAAD;AACEjD,QAAAA,WAAW,EAAE6C;AACbjC,QAAAA,OAAO,EAAE8B;AACThE,QAAAA,GAAG,EAAEA,GAAG,CAAC2B;AACTQ,QAAAA,aAAa,EAAEA;AACftE,QAAAA,iBAAiB,EAAEA;AACnBC,QAAAA,UAAU,EAAEA;AACZwE,QAAAA,SAAS,EAAE2B;OAPb,CADF,CADF;AAaD,KAdD,MAcO;AACLrI,MAAAA,QAAQ,CAAC8F,IAAT,eACEhJ,mBAAA,CAAC8L,YAAD;AACElD,QAAAA,WAAW,EAAE6C;AACbnE,QAAAA,GAAG,EAAEA,GAAG,CAAC2B;AACThH,QAAAA,MAAM,EAAEkJ,WAAW,IAAIxD,CAAC,KAAKO,IAAI,CAAChF,QAAL,CAAcJ,MAAd,GAAuB;AACpDX,QAAAA,MAAM,EAAE+F;AACR/C,QAAAA,iBAAiB,EAAEA;AACnBC,QAAAA,UAAU,EAAEA;AACZhD,QAAAA,IAAI,EAAEkJ;OAPR,CADF;AAWD;;AAEDvH,IAAAA,aAAa,CAACwE,GAAd,CAAkB+C,CAAlB,EAAqB3D,CAArB;AACA1D,IAAAA,cAAc,CAACsE,GAAf,CAAmB+C,CAAnB,EAAsBpD,IAAtB;AACD;;AAED,SAAOhF,QAAP;AACD,CA1ED;;ACjBA;;;;AAIA,IAAM6I,OAAO,GAAG;AACdC,EAAAA,IAAI,EAAE,OADQ;AAEdC,EAAAA,OAAO,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,OAAjB,EAA0B,IAA1B,EAAgC,WAAhC,EAA6C,OAA7C,CAFK;AAGdC,EAAAA,YAAY,EAAE,MAHA;AAIdC,EAAAA,WAAW,EAAE,OAJC;AAKdC,EAAAA,gBAAgB,EAAE,WALJ;AAMdC,EAAAA,eAAe,EAAE,YANH;AAOdC,EAAAA,cAAc,EAAE,kBAPF;AAQdC,EAAAA,aAAa,EAAE,eARD;AASdC,EAAAA,cAAc,EAAE,YATF;AAUdC,EAAAA,aAAa,EAAE,aAVD;AAWdC,EAAAA,MAAM,EAAE,OAXM;AAYdC,EAAAA,eAAe,EAAE,aAZH;AAadC,EAAAA,UAAU,EAAE,OAbE;AAcdC,EAAAA,IAAI,EAAE;AAdQ,CAAhB;AAiBA,IAAMC,aAAa,GAAG;AACpBC,EAAAA,gBAAgB,EAAE,QADE;AAEpBC,EAAAA,eAAe,EAAE,UAFG;AAGpBZ,EAAAA,gBAAgB,EAAE,UAHE;AAIpBC,EAAAA,eAAe,EAAE,WAJG;AAKpBC,EAAAA,cAAc,EAAE,CAAC,gBAAD,EAAmB,QAAnB,CALI;AAMpBC,EAAAA,aAAa,EAAE,CAAC,aAAD,EAAgB,QAAhB,CANK;AAOpBU,EAAAA,kBAAkB,EAAE,sBAPA;AAQpBC,EAAAA,iBAAiB,EAAE,CAAC,mBAAD,EAAsB,QAAtB,CARC;AASpBC,EAAAA,kBAAkB,EAAE,sBATA;AAUpBC,EAAAA,iBAAiB,EAAE,mBAVC;AAWpBC,EAAAA,kBAAkB,EAAE,cAXA;AAYpBC,EAAAA,iBAAiB,EAAE,gBAZC;AAapBC,EAAAA,IAAI,EAAE,aAbc;AAcpBC,EAAAA,kBAAkB,EAAE;AAdA,CAAtB;AAiBA,IAAMC,eAAe,GAAG;AACtBN,EAAAA,kBAAkB,EAAE,uBADE;AAEtBC,EAAAA,iBAAiB,EAAE,oBAFG;AAGtBG,EAAAA,IAAI,EAAE,CAAC,QAAD,EAAW,cAAX;AAHgB,CAAxB;AAMA;;;;AAIA,IAAMG,MAAM,GAAIpG,GAAD;AACb,MAAMqG,OAAO,GAAG5B,OAAO,CAACzE,GAAD,CAAvB;AACA,MAAMsG,KAAK,GAAGd,aAAa,CAACxF,GAAD,CAA3B;AACA,MAAMuG,OAAO,GAAGJ,eAAe,CAACnG,GAAD,CAA/B;AACA,MAAMwG,SAAS,GAAGH,OAAO,IAAII,WAAW,CAACJ,OAAD,CAAxC;AACA,MAAMK,OAAO,GAAGJ,KAAK,IAAIG,WAAW,CAACH,KAAD,CAApC;AACA,MAAMK,SAAS,GAAGJ,OAAO,IAAIE,WAAW,CAACF,OAAD,CAAxC;AAEA,SAAQK,KAAD;AACL,QAAIJ,SAAS,IAAIA,SAAS,CAACI,KAAD,CAA1B,EAAmC,OAAO,IAAP;AACnC,QAAIzN,QAAQ,IAAIuN,OAAZ,IAAuBA,OAAO,CAACE,KAAD,CAAlC,EAA2C,OAAO,IAAP;AAC3C,QAAI,CAACzN,QAAD,IAAawN,SAAb,IAA0BA,SAAS,CAACC,KAAD,CAAvC,EAAgD,OAAO,IAAP;AAChD,WAAO,KAAP;AACD,GALD;AAMD,CAdD;AAgBA;;;;;AAIA,cAAe;AACbC,EAAAA,MAAM,EAAET,MAAM,CAAC,MAAD,CADD;AAEbU,EAAAA,SAAS,EAAEV,MAAM,CAAC,SAAD,CAFJ;AAGbW,EAAAA,cAAc,EAAEX,MAAM,CAAC,cAAD,CAHT;AAIbY,EAAAA,aAAa,EAAEZ,MAAM,CAAC,aAAD,CAJR;AAKba,EAAAA,gBAAgB,EAAEb,MAAM,CAAC,gBAAD,CALX;AAMbc,EAAAA,eAAe,EAAEd,MAAM,CAAC,eAAD,CANV;AAObe,EAAAA,oBAAoB,EAAEf,MAAM,CAAC,oBAAD,CAPf;AAQbgB,EAAAA,mBAAmB,EAAEhB,MAAM,CAAC,mBAAD,CARd;AASbiB,EAAAA,oBAAoB,EAAEjB,MAAM,CAAC,oBAAD,CATf;AAUbkB,EAAAA,mBAAmB,EAAElB,MAAM,CAAC,mBAAD,CAVd;AAWbmB,EAAAA,gBAAgB,EAAEnB,MAAM,CAAC,gBAAD,CAXX;AAYboB,EAAAA,eAAe,EAAEpB,MAAM,CAAC,eAAD,CAZV;AAabqB,EAAAA,oBAAoB,EAAErB,MAAM,CAAC,oBAAD,CAbf;AAcbsB,EAAAA,mBAAmB,EAAEtB,MAAM,CAAC,mBAAD,CAdd;AAebuB,EAAAA,QAAQ,EAAEvB,MAAM,CAAC,QAAD,CAfH;AAgBbwB,EAAAA,kBAAkB,EAAExB,MAAM,CAAC,kBAAD,CAhBb;AAiBbyB,EAAAA,iBAAiB,EAAEzB,MAAM,CAAC,iBAAD,CAjBZ;AAkBb0B,EAAAA,kBAAkB,EAAE1B,MAAM,CAAC,kBAAD,CAlBb;AAmBb2B,EAAAA,iBAAiB,EAAE3B,MAAM,CAAC,iBAAD,CAnBZ;AAoBb4B,EAAAA,MAAM,EAAE5B,MAAM,CAAC,MAAD,CApBD;AAqBb6B,EAAAA,WAAW,EAAE7B,MAAM,CAAC,iBAAD,CArBN;AAsBb8B,EAAAA,YAAY,EAAE9B,MAAM,CAAC,YAAD,CAtBP;AAuBb+B,EAAAA,oBAAoB,EAAE/B,MAAM,CAAC,oBAAD,CAvBf;AAwBbgC,EAAAA,MAAM,EAAEhC,MAAM,CAAC,MAAD;AAxBD,CAAf;;ACrEA;;;;AAIO,IAAMiC,eAAe,gBAAGhF,aAAa,CAAC,KAAD,CAArC;AAEP;;;;IAIab,WAAW,GAAG;AACzB,SAAOc,UAAU,CAAC+E,eAAD,CAAjB;AACD;;ACVD;;;;;AAKO,IAAMC,YAAY,gBAAGjF,aAAa,CAAuB,IAAvB,CAAlC;AAEP;;;;IAIakF,QAAQ,GAAG;AACtB,MAAMC,OAAO,GAAGlF,UAAU,CAACgF,YAAD,CAA1B;;AAEA,MAAI,CAACE,OAAL,EAAc;AACZ,UAAM,IAAIjF,KAAJ,4EAAN;AAGD;;AAED,MAAM,CAACxI,MAAD,IAAWyN,OAAjB;AACA,SAAOzN,MAAP;AACD;;AC1BD;;;AAmCA;;;;AAIO,IAAM0N,cAAc,GAAI9M,KAAD;AAC5B,SACGA,KAAK,IAAIA,KAAK,CAAC+M,aAAf,IAAgC/M,KAAK,CAAC+M,aAAN,CAAoBC,WAArD,IAAqE,IADvE;AAGD,CAJM;AAMP;;;;AAIO,IAAMC,YAAY,GAAIjN,KAAD;AAC1B,SAAOkN,SAAS,CAAClN,KAAD,CAAT,IAAoBA,KAAK,CAACmN,QAAN,KAAmB,CAA9C;AACD,CAFM;AAIP;;;;AAIO,IAAMC,YAAY,GAAIpN,KAAD;AAC1B,SAAOkN,SAAS,CAAClN,KAAD,CAAT,IAAoBA,KAAK,CAACmN,QAAN,KAAmB,CAA9C;AACD,CAFM;AAIP;;;;AAIO,IAAMD,SAAS,GAAIlN,KAAD;AACvB,MAAM5C,MAAM,GAAG0P,cAAc,CAAC9M,KAAD,CAA7B;AACA,SAAO,CAAC,CAAC5C,MAAF,IAAY4C,KAAK,YAAY5C,MAAM,CAAC0C,IAA3C;AACD,CAHM;AAKP;;;;AAIO,IAAMuN,cAAc,GAAIrN,KAAD;AAC5B,MAAM5C,MAAM,GAAG4C,KAAK,IAAIA,KAAK,CAACsN,UAAf,IAA6BR,cAAc,CAAC9M,KAAK,CAACsN,UAAP,CAA1D;AACA,SAAO,CAAC,CAAClQ,MAAF,IAAY4C,KAAK,YAAY5C,MAAM,CAACmQ,SAA3C;AACD,CAHM;AAKP;;;;AAIO,IAAMC,SAAS,GAAIxN,KAAD;AACvB,SAAOkN,SAAS,CAAClN,KAAD,CAAT,IAAoBA,KAAK,CAACmN,QAAN,KAAmB,CAA9C;AACD,CAFM;AAIP;;;;AAIO,IAAMM,oBAAoB,GAAIxC,KAAD;AAClC,SACEA,KAAK,CAACyC,aAAN,IACAzC,KAAK,CAACyC,aAAN,CAAoBC,OAApB,CAA4B,YAA5B,MAA8C,EAD9C,IAEA1C,KAAK,CAACyC,aAAN,CAAoBE,KAApB,CAA0B/N,MAA1B,KAAqC,CAHvC;AAKD,CANM;AAQP;;;;AAIO,IAAMgO,iBAAiB,GAAIC,QAAD;AAC/B,MAAI,CAAC7I,IAAD,EAAO8I,MAAP,IAAiBD,QAArB;AAGA;;AACA,MAAIV,YAAY,CAACnI,IAAD,CAAZ,IAAsBA,IAAI,CAAC+I,UAAL,CAAgBnO,MAA1C,EAAkD;AAChD,QAAIb,MAAM,GAAG+O,MAAM,KAAK9I,IAAI,CAAC+I,UAAL,CAAgBnO,MAAxC;AACA,QAAIoO,KAAK,GAAGjP,MAAM,GAAG+O,MAAM,GAAG,CAAZ,GAAgBA,MAAlC;AACC,KAAC9I,IAAD,EAAOgJ,KAAP,IAAgBC,wBAAwB,CACvCjJ,IADuC,EAEvCgJ,KAFuC,EAGvCjP,MAAM,GAAG,UAAH,GAAgB,SAHiB,CAAxC,CAH+C;;AAShDA,IAAAA,MAAM,GAAGiP,KAAK,GAAGF,MAAjB,CATgD;AAYhD;;AACA,WAAOX,YAAY,CAACnI,IAAD,CAAZ,IAAsBA,IAAI,CAAC+I,UAAL,CAAgBnO,MAA7C,EAAqD;AACnD,UAAM6E,CAAC,GAAG1F,MAAM,GAAGiG,IAAI,CAAC+I,UAAL,CAAgBnO,MAAhB,GAAyB,CAA5B,GAAgC,CAAhD;AACAoF,MAAAA,IAAI,GAAGkJ,gBAAgB,CAAClJ,IAAD,EAAOP,CAAP,EAAU1F,MAAM,GAAG,UAAH,GAAgB,SAAhC,CAAvB;AACD,KAhB+C;;;AAmBhD+O,IAAAA,MAAM,GAAG/O,MAAM,IAAIiG,IAAI,CAACpE,WAAL,IAAoB,IAA9B,GAAqCoE,IAAI,CAACpE,WAAL,CAAiBhB,MAAtD,GAA+D,CAAxE;AACD;;;AAGD,SAAO,CAACoF,IAAD,EAAO8I,MAAP,CAAP;AACD,CA7BM;AA+BP;;;;AAIO,IAAMK,aAAa,GAAG;AAC3B,SAAO,CAAC,EACNhR,MAAM,CAACgB,QAAP,CAAgBiQ,aAAhB,IAAiCjR,MAAM,CAACgB,QAAP,CAAgBiQ,aAAhB,CAA8BC,UADzD,CAAR;AAGD,CAJM;AAMP;;;;;AAKO,IAAMJ,wBAAwB,GAAG,CACtChP,MADsC,EAEtC+O,KAFsC,EAGtCM,SAHsC;AAKtC,MAAM;AAAEP,IAAAA;AAAF,MAAiB9O,MAAvB;AACA,MAAIsP,KAAK,GAAGR,UAAU,CAACC,KAAD,CAAtB;AACA,MAAIvJ,CAAC,GAAGuJ,KAAR;AACA,MAAIQ,YAAY,GAAG,KAAnB;AACA,MAAIC,aAAa,GAAG,KAApB;AAGA;;AACA,SACEzB,YAAY,CAACuB,KAAD,CAAZ,IACCpB,YAAY,CAACoB,KAAD,CAAZ,IAAuBA,KAAK,CAACR,UAAN,CAAiBnO,MAAjB,KAA4B,CADpD,IAECuN,YAAY,CAACoB,KAAD,CAAZ,IAAuBA,KAAK,CAACG,YAAN,CAAmB,iBAAnB,MAA0C,OAHpE,EAIE;AACA,QAAIF,YAAY,IAAIC,aAApB,EAAmC;AACjC;AACD;;AAED,QAAIhK,CAAC,IAAIsJ,UAAU,CAACnO,MAApB,EAA4B;AAC1B4O,MAAAA,YAAY,GAAG,IAAf;AACA/J,MAAAA,CAAC,GAAGuJ,KAAK,GAAG,CAAZ;AACAM,MAAAA,SAAS,GAAG,UAAZ;AACA;AACD;;AAED,QAAI7J,CAAC,GAAG,CAAR,EAAW;AACTgK,MAAAA,aAAa,GAAG,IAAhB;AACAhK,MAAAA,CAAC,GAAGuJ,KAAK,GAAG,CAAZ;AACAM,MAAAA,SAAS,GAAG,SAAZ;AACA;AACD;;AAEDC,IAAAA,KAAK,GAAGR,UAAU,CAACtJ,CAAD,CAAlB;AACAuJ,IAAAA,KAAK,GAAGvJ,CAAR;AACAA,IAAAA,CAAC,IAAI6J,SAAS,KAAK,SAAd,GAA0B,CAA1B,GAA8B,CAAC,CAApC;AACD;;AAED,SAAO,CAACC,KAAD,EAAQP,KAAR,CAAP;AACD,CA1CM;AA4CP;;;;;AAKO,IAAME,gBAAgB,GAAG,CAC9BjP,MAD8B,EAE9B+O,KAF8B,EAG9BM,SAH8B;AAK9B,MAAM,CAACC,KAAD,IAAUN,wBAAwB,CAAChP,MAAD,EAAS+O,KAAT,EAAgBM,SAAhB,CAAxC;AACA,SAAOC,KAAP;AACD,CAPM;AASP;;;;;;;AAOO,IAAMI,YAAY,GAAIC,OAAD;AAC1B,MAAI1P,IAAI,GAAG,EAAX;;AAEA,MAAIqO,SAAS,CAACqB,OAAD,CAAT,IAAsBA,OAAO,CAACC,SAAlC,EAA6C;AAC3C,WAAOD,OAAO,CAACC,SAAf;AACD;;AAED,MAAI1B,YAAY,CAACyB,OAAD,CAAhB,EAA2B;AACzB,SAAK,IAAME,SAAX,IAAwBC,KAAK,CAACC,IAAN,CAAWJ,OAAO,CAACb,UAAnB,CAAxB,EAAwD;AACtD7O,MAAAA,IAAI,IAAIyP,YAAY,CAACG,SAAD,CAApB;AACD;;AAED,QAAM5L,OAAO,GAAG+L,gBAAgB,CAACL,OAAD,CAAhB,CAA0BM,gBAA1B,CAA2C,SAA3C,CAAhB;;AAEA,QAAIhM,OAAO,KAAK,OAAZ,IAAuBA,OAAO,KAAK,MAAnC,IAA6C0L,OAAO,CAACO,OAAR,KAAoB,IAArE,EAA2E;AACzEjQ,MAAAA,IAAI,IAAI,IAAR;AACD;AACF;;AAED,SAAOA,IAAP;AACD,CApBM;AAsBP;;;;AAGA,IAAMkQ,kBAAkB,GAAG,8BAA3B;AACO,IAAMC,yBAAyB,GACpCC,YADuC;AAGvC,MAAMC,QAAQ,GAAGD,YAAY,CAAC5B,OAAb,CAAqB,WAArB,CAAjB;AACA,MAAM,GAAG8B,QAAH,IAAeD,QAAQ,CAACE,KAAT,CAAeL,kBAAf,KAAsC,EAA3D;AACA,SAAOI,QAAP;AACD,CANM;AAQP;;;;;AAIO,IAAME,gBAAgB,GAAIJ,YAAD;AAC9B,MAAI,CAACA,YAAY,CAAC5B,OAAb,CAAqB,8BAArB,CAAL,EAA2D;AACzD,QAAM8B,QAAQ,GAAGH,yBAAyB,CAACC,YAAD,CAA1C;;AACA,QAAIE,QAAJ,EAAc;AACZ,UAAM/B,aAAa,GAAG,IAAIkC,YAAJ,EAAtB;AACAL,MAAAA,YAAY,CAAC3B,KAAb,CAAmBiC,OAAnB,CAA2BC,IAAI;AAC7BpC,QAAAA,aAAa,CAACqC,OAAd,CAAsBD,IAAtB,EAA4BP,YAAY,CAAC5B,OAAb,CAAqBmC,IAArB,CAA5B;AACD,OAFD;AAGApC,MAAAA,aAAa,CAACqC,OAAd,CAAsB,8BAAtB,EAAsDN,QAAtD;AACA,aAAO/B,aAAP;AACD;AACF;;AACD,SAAO6B,YAAP;AACD,CAbM;;AC5PA,IAAMS,YAAY,GAAG,CAArB;;;;;;;;AC8DP,IAAMC,QAAQ,GAAIlR,KAAD,iBACfhC,mBAAA,CAACA,KAAK,CAACyG,QAAP,MAAA,EAAiBsD,WAAW,CAAC/H,KAAD,CAA5B,CADF;AAmDA;;;;;IAIamR,UAAQ,GAAInR,KAAD;AACtB,MAAM;AACJoR,IAAAA,SADI;AAEJlI,IAAAA,QAAQ,GAAGmI,eAFP;AAGJC,IAAAA,gBAAgB,EAAEC,qBAHd;AAIJzN,IAAAA,WAJI;AAKJ+D,IAAAA,QAAQ,GAAG,KALP;AAMJJ,IAAAA,aANI;AAOJrE,IAAAA,UAPI;AAQJD,IAAAA,iBAAiB,GAAGnD,KAAK,iBAAIhC,mBAAA,CAACwT,kBAAD,oBAAwBxR,MAAxB,CARzB;AASJyR,IAAAA,uBAAuB,GAAGC,8BATtB;AAUJhO,IAAAA,KAAK,GAAG,EAVJ;AAWJiO,IAAAA,EAAE,EAAEC,SAAS,GAAG;AAXZ,MAaF5R,KAbJ;AAAA,MAYK+D,UAZL,4BAaI/D,KAbJ;;AAcA,MAAMK,MAAM,GAAGwN,QAAQ,EAAvB;;AAEA,MAAM,CAACgE,WAAD,EAAcC,cAAd,IAAgCxL,QAAQ,CAAC,KAAD,CAA9C;AACA,MAAM7E,GAAG,GAAGC,MAAM,CAAiB,IAAjB,CAAlB;AACA,MAAMqQ,kBAAkB,GAAGrQ,MAAM,CAAsB,EAAtB,CAAjC;;AAGAc,EAAAA,YAAY,CAAC+D,GAAb,CAAiBlG,MAAjB,EAAyBwH,QAAzB;;AAGA,MAAMpB,KAAK,GAAGuL,OAAO,CACnB,OAAO;AACLC,IAAAA,2BAA2B,EAAE,KADxB;AAELC,IAAAA,oBAAoB,EAAE,KAFjB;AAGLC,IAAAA,mBAAmB,EAAE,KAHhB;AAILC,IAAAA,aAAa,EAAE;AAJV,GAAP,CADmB,EAOnB,EAPmB,CAArB;;AAWAxS,EAAAA,yBAAyB,CAAC;AACxB;AACA,QAAIvB,MAAJ;;AACA,QAAIoD,GAAG,CAACI,OAAJ,KAAgBxD,MAAM,GAAG0P,cAAc,CAACtM,GAAG,CAACI,OAAL,CAAvC,CAAJ,EAA2D;AACzDK,MAAAA,gBAAgB,CAACqE,GAAjB,CAAqBlG,MAArB,EAA6BhC,MAA7B;AACA8D,MAAAA,iBAAiB,CAACoE,GAAlB,CAAsBlG,MAAtB,EAA8BoB,GAAG,CAACI,OAAlC;AACAQ,MAAAA,eAAe,CAACkE,GAAhB,CAAoBlG,MAApB,EAA4BoB,GAAG,CAACI,OAAhC;AACAO,MAAAA,eAAe,CAACmE,GAAhB,CAAoB9E,GAAG,CAACI,OAAxB,EAAiCxB,MAAjC;AACD,KALD,MAKO;AACLgC,MAAAA,eAAe,CAACqE,MAAhB,CAAuBrG,MAAvB;AACD;;;AAGD,QAAM;AAAEuH,MAAAA;AAAF,QAAgBvH,MAAtB;AACA,QAAMgS,IAAI,GAAG7R,WAAW,CAAC8R,wBAAZ,CAAqCjS,MAArC,CAAb;AACA,QAAMkS,YAAY,GAAGF,IAAI,CAACG,YAAL,EAArB;;AAEA,QACEhS,WAAW,CAACqR,WAAZ,CAAwBxR,MAAxB,KACA,CAACkS,YADD,IAEA,CAAC/R,WAAW,CAACiS,SAAZ,CAAsBpS,MAAtB,CAHH,EAIE;AACA;AACD;;AAED,QAAMqS,eAAe,GAAGH,YAAY,CAACxB,IAAb,KAAsB,MAA9C;;AAGA,QAAI,CAACnJ,SAAD,IAAc,CAAC8K,eAAnB,EAAoC;AAClC;AACD;;;AAGD,QAAMC,aAAa,GAAGxQ,iBAAiB,CAACgF,GAAlB,CAAsB9G,MAAtB,CAAtB;AACA,QAAIuS,uBAAuB,GAAG,KAA9B;;AACA,QACED,aAAa,CAACE,QAAd,CAAuBN,YAAY,CAAChE,UAApC,KACAoE,aAAa,CAACE,QAAd,CAAuBN,YAAY,CAACO,SAApC,CAFF,EAGE;AACAF,MAAAA,uBAAuB,GAAG,IAA1B;AACD;;;AAGD,QAAIF,eAAe,IAAIE,uBAAnB,IAA8ChL,SAAlD,EAA6D;AAC3D,UAAMmL,UAAU,GAAGvS,WAAW,CAACwS,YAAZ,CAAyB3S,MAAzB,EAAiCkS,YAAjC,EAA+C;AAChEU,QAAAA,UAAU,EAAE,IADoD;AAGhE;AACA;AACAC,QAAAA,aAAa,EAAE;AALiD,OAA/C,CAAnB;;AAOA,UAAIH,UAAU,IAAI/M,KAAK,CAACjB,MAAN,CAAagO,UAAb,EAAyBnL,SAAzB,CAAlB,EAAuD;AACrD;AACD;AACF;AAGD;AACA;AACA;;;AACA,QAAIA,SAAS,IAAI,CAACpH,WAAW,CAAC2S,QAAZ,CAAqB9S,MAArB,EAA6BuH,SAA7B,CAAlB,EAA2D;AACzDvH,MAAAA,MAAM,CAACuH,SAAP,GAAmBpH,WAAW,CAACwS,YAAZ,CAAyB3S,MAAzB,EAAiCkS,YAAjC,EAA+C;AAChEU,QAAAA,UAAU,EAAE,KADoD;AAEhEC,QAAAA,aAAa,EAAE;AAFiD,OAA/C,CAAnB;AAIA;AACD;;;AAGDzM,IAAAA,KAAK,CAAC0L,mBAAN,GAA4B,IAA5B;AAEA,QAAMiB,WAAW,GAAGxL,SAAS,IAAIpH,WAAW,CAAC6S,UAAZ,CAAuBhT,MAAvB,EAA+BuH,SAA/B,CAAjC;;AACA,QAAIwL,WAAJ,EAAiB;AACf,UAAIpN,KAAK,CAACsN,UAAN,CAAiB1L,SAAjB,CAAJ,EAAkC;AAChC2K,QAAAA,YAAY,CAACgB,gBAAb,CACEH,WAAW,CAACI,YADd,EAEEJ,WAAW,CAACK,SAFd,EAGEL,WAAW,CAACM,cAHd,EAIEN,WAAW,CAACO,WAJd;AAMD,OAPD,MAOO;AACLpB,QAAAA,YAAY,CAACgB,gBAAb,CACEH,WAAW,CAACM,cADd,EAEEN,WAAW,CAACO,WAFd,EAGEP,WAAW,CAACI,YAHd,EAIEJ,WAAW,CAACK,SAJd;AAMD;;AACDhC,MAAAA,uBAAuB,CAACpR,MAAD,EAAS+S,WAAT,CAAvB;AACD,KAjBD,MAiBO;AACLb,MAAAA,YAAY,CAACqB,eAAb;AACD;;AAEDC,IAAAA,UAAU,CAAC;AACT;AACA;AACA,UAAIT,WAAW,IAAIzU,UAAnB,EAA+B;AAC7B,YAAMmV,EAAE,GAAGtT,WAAW,CAACuT,SAAZ,CAAsB1T,MAAtB,EAA8BA,MAA9B,CAAX;AACAyT,QAAAA,EAAE,CAACE,KAAH;AACD;;AAEDvN,MAAAA,KAAK,CAAC0L,mBAAN,GAA4B,KAA5B;AACD,KATS,CAAV;AAUD,GAvGwB,CAAzB;AA0GA;;AACArS,EAAAA,SAAS,CAAC;AACR,QAAI2B,GAAG,CAACI,OAAJ,IAAeuP,SAAnB,EAA8B;AAC5B3P,MAAAA,GAAG,CAACI,OAAJ,CAAYmS,KAAZ;AACD;AACF,GAJQ,EAIN,CAAC5C,SAAD,CAJM,CAAT;AAOA;AACA;AACA;AACA;;AACA,MAAM6C,oBAAoB,GAAGC,WAAW,CACtCC,QAAQ,CAAC;AACP,QACE,CAAC3T,WAAW,CAACqR,WAAZ,CAAwBxR,MAAxB,CAAD,IACA,CAACoG,KAAK,CAAC0L,mBADP,IAEA,CAAC1L,KAAK,CAACyL,oBAHT,EAIE;AACA,UAAMG,IAAI,GAAG7R,WAAW,CAAC8R,wBAAZ,CAAqCjS,MAArC,CAAb;AACA,UAAM;AAAEiP,QAAAA;AAAF,UAAoB+C,IAA1B;AACA,UAAMyB,EAAE,GAAGtT,WAAW,CAACuT,SAAZ,CAAsB1T,MAAtB,EAA8BA,MAA9B,CAAX;AACA,UAAMkS,YAAY,GAAGF,IAAI,CAACG,YAAL,EAArB;;AAEA,UAAIlD,aAAa,KAAKwE,EAAtB,EAA0B;AACxBrN,QAAAA,KAAK,CAAC2L,aAAN,GAAsB9C,aAAtB;AACA7M,QAAAA,UAAU,CAAC8D,GAAX,CAAelG,MAAf,EAAuB,IAAvB;AACD,OAHD,MAGO;AACLoC,QAAAA,UAAU,CAACiE,MAAX,CAAkBrG,MAAlB;AACD;;AAED,UAAI,CAACkS,YAAL,EAAmB;AACjB,eAAO6B,UAAU,CAACC,QAAX,CAAoBhU,MAApB,CAAP;AACD;;AAED,UAAM;AAAEkO,QAAAA,UAAF;AAAcuE,QAAAA;AAAd,UAA4BP,YAAlC;AAEA,UAAM+B,oBAAoB,GACxBC,iBAAiB,CAAClU,MAAD,EAASkO,UAAT,CAAjB,IACAiG,6BAA6B,CAACnU,MAAD,EAASkO,UAAT,CAF/B;AAIA,UAAMkG,mBAAmB,GACvBF,iBAAiB,CAAClU,MAAD,EAASyS,SAAT,CAAjB,IACA0B,6BAA6B,CAACnU,MAAD,EAASyS,SAAT,CAF/B;;AAIA,UAAIwB,oBAAoB,IAAIG,mBAA5B,EAAiD;AAC/C,YAAM7O,KAAK,GAAGpF,WAAW,CAACwS,YAAZ,CAAyB3S,MAAzB,EAAiCkS,YAAjC,EAA+C;AAC3DU,UAAAA,UAAU,EAAE,KAD+C;AAE3DC,UAAAA,aAAa,EAAE;AAF4C,SAA/C,CAAd;AAIAkB,QAAAA,UAAU,CAACM,MAAX,CAAkBrU,MAAlB,EAA0BuF,KAA1B;AACD;AACF;AACF,GAxCO,EAwCL,GAxCK,CAD8B,EA0CtC,CAACiC,QAAD,CA1CsC,CAAxC;AA6CA,MAAM8M,4BAA4B,GAAG3C,OAAO,CAC1C,MAAM4C,QAAQ,CAACX,oBAAD,EAAuB,CAAvB,CAD4B,EAE1C,CAACA,oBAAD,CAF0C,CAA5C;AAMA;AACA;AACA;;AACA,MAAM3C,gBAAgB,GAAG4C,WAAW,CACjChI,KAAD;AACE,QACE,CAACrE,QAAD,IACA0M,iBAAiB,CAAClU,MAAD,EAAS6L,KAAK,CAAC2I,MAAf,CADjB,IAEA,CAACC,iBAAiB,CAAC5I,KAAD,EAAQqF,qBAAR,CAHpB,EAIE;AAAA;;AACA;AACA;AACA;AACAoD,MAAAA,4BAA4B,CAACI,KAA7B;AACAd,MAAAA,oBAAoB,CAACc,KAArB;AAEA,UAAM;AAAEnN,QAAAA;AAAF,UAAgBvH,MAAtB;AACA,UAAM;AAAE2U,QAAAA,SAAS,EAAEjE;AAAb,UAAsB7E,KAA5B;AACA,UAAM+I,IAAI,GAAI/I,KAAa,CAACsE,YAAd,IAA8BtE,KAAK,CAAC+I,IAApC,IAA4C5N,SAA1D,CATA;AAYA;;AACA,UACE0J,IAAI,KAAK,uBAAT,IACAA,IAAI,KAAK,uBAFX,EAGE;AACA;AACD;;AAED,UAAImE,MAAM,GAAG,KAAb;;AACA,UACEnE,IAAI,KAAK,YAAT,IACAnJ,SADA,IAEA5B,KAAK,CAACmP,WAAN,CAAkBvN,SAAlB,CAFA;AAIA;AACA;AACAsE,MAAAA,KAAK,CAAC+I,IANN,IAOA/I,KAAK,CAAC+I,IAAN,CAAWnU,MAAX,KAAsB,CAPtB,IAQA,UAAUxC,IAAV,CAAe4N,KAAK,CAAC+I,IAArB,CARA;AAUA;AACA;AACArN,MAAAA,SAAS,CAACwN,MAAV,CAAiBpG,MAAjB,KAA4B,CAb9B,EAcE;AAAA;;AACAkG,QAAAA,MAAM,GAAG,IAAT,CADA;AAIA;;AACA,YAAI7U,MAAM,CAACgV,KAAX,EAAkB;AAChBH,UAAAA,MAAM,GAAG,KAAT;AACD,SAPD;AAUA;;;AACA,YAAM;AAAEE,UAAAA;AAAF,YAAaxN,SAAnB;AAEA,YAAM,CAAC1B,IAAD,EAAO8I,MAAP,IAAiBxO,WAAW,CAAC8U,UAAZ,CAAuBjV,MAAvB,EAA+B+U,MAA/B,CAAvB;AACA,YAAM7G,UAAU,0BAAGrI,IAAI,CAACqP,aAAR,wDAAG,oBAAoBC,OAApB,CAA4B,GAA5B,CAAnB;;AAEA,YAAIjH,UAAU,IAAI/N,WAAW,CAACiV,UAAZ,CAAuBpV,MAAvB,EAA+BkO,UAA/B,CAAlB,EAA8D;AAAA;;AAC5D,cAAM;AAAElP,YAAAA;AAAF,cAAemB,WAAW,CAACkV,SAAZ,CAAsBrV,MAAtB,CAArB,CAD4D;;AAI5D,cAAMsV,QAAQ,GAAGtW,QAAQ,CACtBuW,gBADc,CACGrH,UADH,EACesH,UAAU,CAACC,SAD1B,EAEdC,SAFc,EAAjB;;AAIA,cAAIJ,QAAQ,KAAKzP,IAAb,IAAqB,0BAAAyP,QAAQ,CAAC7T,WAAT,gFAAsBhB,MAAtB,MAAiCkO,MAA1D,EAAkE;AAChEkG,YAAAA,MAAM,GAAG,KAAT;AACD;AACF;AACF,OA/DD;AAkEA;AACA;;;AACA,UAAI,CAACnE,IAAI,CAACiF,UAAL,CAAgB,QAAhB,CAAD,IAA8BjF,IAAI,CAACiF,UAAL,CAAgB,UAAhB,CAAlC,EAA+D;AAC7D,YAAM,CAACC,WAAD,IAAiB/J,KAAa,CAACvM,eAAd,EAAvB;;AAEA,YAAIsW,WAAJ,EAAiB;AACf,cAAMrQ,KAAK,GAAGpF,WAAW,CAACwS,YAAZ,CAAyB3S,MAAzB,EAAiC4V,WAAjC,EAA8C;AAC1DhD,YAAAA,UAAU,EAAE,KAD8C;AAE1DC,YAAAA,aAAa,EAAE;AAF2C,WAA9C,CAAd;;AAKA,cAAI,CAACtL,SAAD,IAAc,CAAC5B,KAAK,CAACjB,MAAN,CAAa6C,SAAb,EAAwBhC,KAAxB,CAAnB,EAAmD;AACjDsP,YAAAA,MAAM,GAAG,KAAT;AAEA,gBAAMgB,YAAY,GAChB7V,MAAM,CAACuH,SAAP,IAAoBxG,MAAM,CAAC+U,QAAP,CAAgB9V,MAAhB,EAAwBA,MAAM,CAACuH,SAA/B,CADtB;AAGAwM,YAAAA,UAAU,CAACM,MAAX,CAAkBrU,MAAlB,EAA0BuF,KAA1B;;AAEA,gBAAIsQ,YAAJ,EAAkB;AAChBtT,cAAAA,wBAAwB,CAAC2D,GAAzB,CAA6BlG,MAA7B,EAAqC6V,YAArC;AACD;AACF;AACF;AACF;;AAED,UAAI,CAAChB,MAAL,EAAa;AACXhJ,QAAAA,KAAK,CAACkK,cAAN;AACD,OA9FD;AAiGA;;;AACA,UACExO,SAAS,IACT5B,KAAK,CAACqQ,UAAN,CAAiBzO,SAAjB,CADA,IAEAmJ,IAAI,CAACiF,UAAL,CAAgB,QAAhB,CAHF,EAIE;AACA,YAAMxG,SAAS,GAAGuB,IAAI,CAACuF,QAAL,CAAc,UAAd,IAA4B,UAA5B,GAAyC,SAA3D;AACAlV,QAAAA,MAAM,CAACmV,cAAP,CAAsBlW,MAAtB,EAA8B;AAAEmP,UAAAA;AAAF,SAA9B;AACA;AACD;;AAED,cAAQuB,IAAR;AACE,aAAK,qBAAL;AACA,aAAK,aAAL;AACA,aAAK,cAAL;AAAqB;AACnB3P,YAAAA,MAAM,CAACmV,cAAP,CAAsBlW,MAAtB;AACA;AACD;;AAED,aAAK,eAAL;AACA,aAAK,sBAAL;AAA6B;AAC3Be,YAAAA,MAAM,CAACmJ,aAAP,CAAqBlK,MAArB;AACA;AACD;;AAED,aAAK,uBAAL;AAA8B;AAC5Be,YAAAA,MAAM,CAACkJ,cAAP,CAAsBjK,MAAtB;AACA;AACD;;AAED,aAAK,sBAAL;AAA6B;AAC3Be,YAAAA,MAAM,CAACkJ,cAAP,CAAsBjK,MAAtB,EAA8B;AAAEmW,cAAAA,IAAI,EAAE;AAAR,aAA9B;AACApV,YAAAA,MAAM,CAACmJ,aAAP,CAAqBlK,MAArB,EAA6B;AAAEmW,cAAAA,IAAI,EAAE;AAAR,aAA7B;AACA;AACD;;AAED,aAAK,wBAAL;AAA+B;AAC7BpV,YAAAA,MAAM,CAACkJ,cAAP,CAAsBjK,MAAtB,EAA8B;AAAEmW,cAAAA,IAAI,EAAE;AAAR,aAA9B;AACA;AACD;;AAED,aAAK,wBAAL;AAA+B;AAC7BpV,YAAAA,MAAM,CAACkJ,cAAP,CAAsBjK,MAAtB,EAA8B;AAAEmW,cAAAA,IAAI,EAAE;AAAR,aAA9B;AACA;AACD;;AAED,aAAK,uBAAL;AAA8B;AAC5BpV,YAAAA,MAAM,CAACmJ,aAAP,CAAqBlK,MAArB,EAA6B;AAAEmW,cAAAA,IAAI,EAAE;AAAR,aAA7B;AACA;AACD;;AAED,aAAK,uBAAL;AAA8B;AAC5BpV,YAAAA,MAAM,CAACmJ,aAAP,CAAqBlK,MAArB,EAA6B;AAAEmW,cAAAA,IAAI,EAAE;AAAR,aAA7B;AACA;AACD;;AAED,aAAK,oBAAL;AAA2B;AACzBpV,YAAAA,MAAM,CAACkJ,cAAP,CAAsBjK,MAAtB,EAA8B;AAAEmW,cAAAA,IAAI,EAAE;AAAR,aAA9B;AACA;AACD;;AAED,aAAK,mBAAL;AAA0B;AACxBpV,YAAAA,MAAM,CAACmJ,aAAP,CAAqBlK,MAArB,EAA6B;AAAEmW,cAAAA,IAAI,EAAE;AAAR,aAA7B;AACA;AACD;;AAED,aAAK,iBAAL;AACEpV,UAAAA,MAAM,CAACuJ,eAAP,CAAuBtK,MAAvB;AACA;;AAEF,aAAK,iBAAL;AAAwB;AACtBe,YAAAA,MAAM,CAACqV,WAAP,CAAmBpW,MAAnB;AACA;AACD;;AAED,aAAK,uBAAL;AACA,aAAK,gBAAL;AACA,aAAK,iBAAL;AACA,aAAK,gBAAL;AACA,aAAK,uBAAL;AACA,aAAK,YAAL;AAAmB;AACjB,gBAAM;AAAEuH,cAAAA,SAAS,EAATA;AAAF,gBAAgBvH,MAAtB;;AACA,gBAAIuH,UAAJ,EAAe;AACb,kBAAI5B,KAAK,CAACqQ,UAAN,CAAiBzO,UAAjB,CAAJ,EAAiC;AAC/BxG,gBAAAA,MAAM,CAACmV,cAAP,CAAsBlW,MAAtB;AACD;AACF;;AAED,gBAAI0Q,IAAI,KAAK,uBAAb,EAAsC;AACpC;AACA;AACA;AACA;AACA;AACA,kBAAIvQ,WAAW,CAACqR,WAAZ,CAAwBxR,MAAxB,CAAJ,EAAqC;AACnCyR,gBAAAA,cAAc,CAAC,KAAD,CAAd;AACApP,gBAAAA,YAAY,CAAC6D,GAAb,CAAiBlG,MAAjB,EAAyB,KAAzB;AACD;AACF,aAlBgB;AAqBjB;AACA;;;AACA,gBAAI,CAAA4U,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEyB,WAAN,CAAkBC,IAAlB,MAA2B,cAA/B,EAA+C;AAC7CnW,cAAAA,WAAW,CAACoW,UAAZ,CAAuBvW,MAAvB,EAA+B4U,IAA/B;AACD,aAFD,MAEO,IAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AACnC;AACA;AACA,kBAAIC,MAAJ,EAAY;AACVnD,gBAAAA,kBAAkB,CAAClQ,OAAnB,CAA2BmF,IAA3B,CAAgC,MAC9B5F,MAAM,CAACyV,UAAP,CAAkBxW,MAAlB,EAA0B4U,IAA1B,CADF;AAGD,eAJD,MAIO;AACL7T,gBAAAA,MAAM,CAACyV,UAAP,CAAkBxW,MAAlB,EAA0B4U,IAA1B;AACD;AACF;;AAED;AACD;AA3GH,OA5GA;;;AA2NA,UAAM6B,SAAS,4BAAGlU,wBAAwB,CAACuE,GAAzB,CAA6B9G,MAA7B,CAAH,0DAAG,sBAAsC0W,KAAtC,EAAlB;AACAnU,MAAAA,wBAAwB,CAAC8D,MAAzB,CAAgCrG,MAAhC;;AAEA,UACEyW,SAAS,KACR,CAACzW,MAAM,CAACuH,SAAR,IAAqB,CAAC5B,KAAK,CAACjB,MAAN,CAAa1E,MAAM,CAACuH,SAApB,EAA+BkP,SAA/B,CADd,CADX,EAGE;AACA1C,QAAAA,UAAU,CAACM,MAAX,CAAkBrU,MAAlB,EAA0ByW,SAA1B;AACD;AACF;AACF,GA3OiC,EA4OlC,CAACjP,QAAD,EAAW0J,qBAAX,CA5OkC,CAApC;AAgPA;AACA;AACA;;AACA3R,EAAAA,yBAAyB,CAAC;AACxB,QAAI6B,GAAG,CAACI,OAAJ,IAAetC,wBAAnB,EAA6C;AAC3C;AACAkC,MAAAA,GAAG,CAACI,OAAJ,CAAYmV,gBAAZ,CAA6B,aAA7B,EAA4C1F,gBAA5C;AACD;;AAED,WAAO;AACL,UAAI7P,GAAG,CAACI,OAAJ,IAAetC,wBAAnB,EAA6C;AAC3C;AACAkC,QAAAA,GAAG,CAACI,OAAJ,CAAYoV,mBAAZ,CAAgC,aAAhC,EAA+C3F,gBAA/C;AACD;AACF,KALD;AAMD,GAZwB,EAYtB,CAACA,gBAAD,CAZsB,CAAzB;AAeA;AACA;AACA;AACA;;AACA1R,EAAAA,yBAAyB,CAAC;AACxB,QAAMvB,MAAM,GAAGmC,WAAW,CAACkV,SAAZ,CAAsBrV,MAAtB,CAAf;AACAhC,IAAAA,MAAM,CAACgB,QAAP,CAAgB2X,gBAAhB,CACE,iBADF,EAEErC,4BAFF;AAKA,WAAO;AACLtW,MAAAA,MAAM,CAACgB,QAAP,CAAgB4X,mBAAhB,CACE,iBADF,EAEEtC,4BAFF;AAID,KALD;AAMD,GAbwB,EAatB,CAACA,4BAAD,CAbsB,CAAzB;AAeA,MAAM/N,WAAW,GAAGsC,QAAQ,CAAC,CAAC7I,MAAD,EAAS,EAAT,CAAD,CAA5B;;AAEA,MACEyD,WAAW,IACXzD,MAAM,CAACa,QAAP,CAAgBJ,MAAhB,KAA2B,CAD3B,IAEAmP,KAAK,CAACC,IAAN,CAAWnP,IAAI,CAACqH,KAAL,CAAW/H,MAAX,CAAX,EAA+BS,MAA/B,KAA0C,CAF1C,IAGAC,IAAI,CAACC,MAAL,CAAYX,MAAZ,MAAwB,EAHxB,IAIA,CAACwR,WALH,EAME;AACA,QAAMqF,KAAK,GAAG9V,MAAM,CAAC8V,KAAP,CAAa7W,MAAb,EAAqB,EAArB,CAAd;AACAuG,IAAAA,WAAW,CAACI,IAAZ,CAAiB;AACf,OAAChE,kBAAD,GAAsB,IADP;AAEfc,MAAAA,WAFe;AAGfsR,MAAAA,MAAM,EAAE8B,KAHO;AAIflD,MAAAA,KAAK,EAAEkD;AAJQ,KAAjB;AAMD;;AAED,sBACElZ,mBAAA,CAAC2P,eAAe,CAAC/D,QAAjB;AAA0B3I,IAAAA,KAAK,EAAE4G;GAAjC,eACE7J,mBAAA,CAAC8K,eAAe,CAACc,QAAjB;AAA0B3I,IAAAA,KAAK,EAAEiI;GAAjC,eACElL,mBAAA,CAAC4T,SAAD;AACEuF,IAAAA,IAAI,EAAEtP,QAAQ,GAAGR,SAAH,GAAe;KACzBtD;AACJ;AACA;AACA;AACA;AACA;AACAqT,IAAAA,UAAU,EACR7X,wBAAwB,IAAI,CAACH,WAA7B,GACI2E,UAAU,CAACqT,UADf,GAEI;AAENC,IAAAA,WAAW,EACT9X,wBAAwB,IAAI,CAACH,WAA7B,GACI2E,UAAU,CAACsT,WADf,GAEI;AAENC,IAAAA,cAAc,EACZ/X,wBAAwB,IAAI,CAACH,WAA7B,GACI2E,UAAU,CAACuT,cADf,GAEI;;uBAGU;AAChB;AACA9S,IAAAA,eAAe,EAAE,CAACqD;AAClB;AACA;AACA;AACA0P,IAAAA,MAAM,EAAE,CAAC;AACTC,IAAAA,8BAA8B;AAC9B/V,IAAAA,GAAG,EAAEA;AACLiC,IAAAA,KAAK;AACH;AACAM,MAAAA,QAAQ,EAAE,UAFP;AAGH;AACAuE,MAAAA,OAAO,EAAE,MAJN;AAKH;AACAkP,MAAAA,UAAU,EAAE,UANT;AAOH;AACAC,MAAAA,QAAQ,EAAE;AARP,OAUAhU,KAVA;AAYLiU,IAAAA,aAAa,EAAEzD,WAAW,CACvBhI,KAAD;AACE;AACA;AACA;AACA,UACE,CAAC3M,wBAAD,IACA,CAACsI,QADD,IAEA,CAAC+P,cAAc,CAAC1L,KAAD,EAAQnI,UAAU,CAAC4T,aAAnB,CAFf,IAGApD,iBAAiB,CAAClU,MAAD,EAAS6L,KAAK,CAAC2I,MAAf,CAJnB,EAKE;AACA3I,QAAAA,KAAK,CAACkK,cAAN;;AACA,YAAI,CAAC5V,WAAW,CAACqR,WAAZ,CAAwBxR,MAAxB,CAAL,EAAsC;AACpC,cAAMD,IAAI,GAAI8L,KAAa,CAAC+I,IAA5B;AACA7T,UAAAA,MAAM,CAACyV,UAAP,CAAkBxW,MAAlB,EAA0BD,IAA1B;AACD;AACF;AACF,KAjBuB,EAkBxB,CAACyH,QAAD,CAlBwB;AAoB1BgQ,IAAAA,OAAO,EAAE3D,WAAW,CAAEhI,KAAD;AACnB;AACA;AACA;AACA;AACA,WAAK,IAAM4L,EAAX,IAAiB/F,kBAAkB,CAAClQ,OAApC,EAA6C;AAC3CiW,QAAAA,EAAE;AACH;;AACD/F,MAAAA,kBAAkB,CAAClQ,OAAnB,GAA6B,EAA7B;AACD,KATmB,EASjB,EATiB;AAUpBkW,IAAAA,MAAM,EAAE7D,WAAW,CAChBhI,KAAD;AACE,UACErE,QAAQ,IACRpB,KAAK,CAAC0L,mBADN,IAEA,CAACoC,iBAAiB,CAAClU,MAAD,EAAS6L,KAAK,CAAC2I,MAAf,CAFlB,IAGA+C,cAAc,CAAC1L,KAAD,EAAQnI,UAAU,CAACgU,MAAnB,CAJhB,EAKE;AACA;AACD;AAGD;AACA;AACA;;;AACA,UAAM1F,IAAI,GAAG7R,WAAW,CAAC8R,wBAAZ,CAAqCjS,MAArC,CAAb;;AACA,UAAIoG,KAAK,CAAC2L,aAAN,KAAwBC,IAAI,CAAC/C,aAAjC,EAAgD;AAC9C;AACD;;AAED,UAAM;AAAE0I,QAAAA;AAAF,UAAoB9L,KAA1B;AACA,UAAM4H,EAAE,GAAGtT,WAAW,CAACuT,SAAZ,CAAsB1T,MAAtB,EAA8BA,MAA9B,CAAX;AAGA;AACA;;AACA,UAAI2X,aAAa,KAAKlE,EAAtB,EAA0B;AACxB;AACD;AAGD;;;AACA,UACEzF,YAAY,CAAC2J,aAAD,CAAZ,IACAA,aAAa,CAACC,YAAd,CAA2B,mBAA3B,CAFF,EAGE;AACA;AACD;AAGD;AACA;;;AACA,UACED,aAAa,IAAI,IAAjB,IACA7J,SAAS,CAAC6J,aAAD,CADT,IAEAxX,WAAW,CAACiV,UAAZ,CAAuBpV,MAAvB,EAA+B2X,aAA/B,CAHF,EAIE;AACA,YAAM9R,IAAI,GAAG1F,WAAW,CAAC0X,WAAZ,CAAwB7X,MAAxB,EAAgC2X,aAAhC,CAAb;;AAEA,YAAIzQ,SAAO,CAAC6B,SAAR,CAAkBlD,IAAlB,KAA2B,CAAC7F,MAAM,CAACO,MAAP,CAAcsF,IAAd,CAAhC,EAAqD;AACnD;AACD;AACF;AAGD;AACA;;;AACA,UAAItH,SAAJ,EAAe;AACb,YAAM2T,YAAY,GAAGF,IAAI,CAACG,YAAL,EAArB;AACAD,QAAAA,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAEqB,eAAd;AACD;;AAEDnR,MAAAA,UAAU,CAACiE,MAAX,CAAkBrG,MAAlB;AACD,KA/DgB,EAgEjB,CAACwH,QAAD,EAAW9D,UAAU,CAACgU,MAAtB,CAhEiB;AAkEnBI,IAAAA,OAAO,EAAEjE,WAAW,CACjBhI,KAAD;AACE,UACEkM,SAAS,CAAC/X,MAAD,EAAS6L,KAAK,CAAC2I,MAAf,CAAT,IACA,CAAC+C,cAAc,CAAC1L,KAAD,EAAQnI,UAAU,CAACoU,OAAnB,CADf,IAEAhK,SAAS,CAACjC,KAAK,CAAC2I,MAAP,CAHX,EAIE;AACA,YAAM3O,IAAI,GAAG1F,WAAW,CAAC0X,WAAZ,CAAwB7X,MAAxB,EAAgC6L,KAAK,CAAC2I,MAAtC,CAAb;AACA,YAAMtU,IAAI,GAAGC,WAAW,CAACC,QAAZ,CAAqBJ,MAArB,EAA6B6F,IAA7B,CAAb,CAFA;AAKA;AACA;AACA;;AACA,YACE,CAAC9E,MAAM,CAACiX,OAAP,CAAehY,MAAf,EAAuBE,IAAvB,CAAD,IACAQ,IAAI,CAACoG,GAAL,CAAS9G,MAAT,EAAiBE,IAAjB,MAA2B2F,IAF7B,EAGE;AACA;AACD;;AAED,YAAIgG,KAAK,CAACoM,MAAN,KAAiBrH,YAAjB,IAAiC1Q,IAAI,CAACO,MAAL,IAAe,CAApD,EAAuD;AACrD,cAAIyX,SAAS,GAAGhY,IAAhB;;AACA,cAAI,CAACa,MAAM,CAACoX,OAAP,CAAenY,MAAf,EAAuB6F,IAAvB,CAAL,EAAmC;AAAA;;AACjC,gBAAMuS,KAAK,GAAGrX,MAAM,CAACsX,KAAP,CAAarY,MAAb,EAAqB;AACjCsQ,cAAAA,KAAK,EAAErH,CAAC,IAAIlI,MAAM,CAACoX,OAAP,CAAenY,MAAf,EAAuBiJ,CAAvB,CADqB;AAEjCqP,cAAAA,EAAE,EAAEpY;AAF6B,aAArB,CAAd;AAKAgY,YAAAA,SAAS,cAAGE,KAAH,aAAGA,KAAH,uBAAGA,KAAK,CAAG,CAAH,CAAR,6CAAiBlY,IAAI,CAACe,KAAL,CAAW,CAAX,EAAc,CAAd,CAA1B;AACD;;AAED,cAAMsE,KAAK,GAAGxE,MAAM,CAACwE,KAAP,CAAavF,MAAb,EAAqBkY,SAArB,CAAd;AACAnE,UAAAA,UAAU,CAACM,MAAX,CAAkBrU,MAAlB,EAA0BuF,KAA1B;AACA;AACD;;AAED,YAAIiC,QAAJ,EAAc;AACZ;AACD;;AAED,YAAMqP,MAAK,GAAG9V,MAAM,CAAC8V,KAAP,CAAa7W,MAAb,EAAqBE,IAArB,CAAd;;AACA,YAAMqY,GAAG,GAAGxX,MAAM,CAACwX,GAAP,CAAWvY,MAAX,EAAmBE,IAAnB,CAAZ;AACA,YAAMsY,SAAS,GAAGzX,MAAM,CAAC0X,IAAP,CAAYzY,MAAZ,EAAoB;AAAEsY,UAAAA,EAAE,EAAEzB;AAAN,SAApB,CAAlB;AACA,YAAM6B,OAAO,GAAG3X,MAAM,CAAC0X,IAAP,CAAYzY,MAAZ,EAAoB;AAAEsY,UAAAA,EAAE,EAAEC;AAAN,SAApB,CAAhB;;AAEA,YACEC,SAAS,IACTE,OADA,IAEApY,IAAI,CAACoE,MAAL,CAAY8T,SAAS,CAAC,CAAD,CAArB,EAA0BE,OAAO,CAAC,CAAD,CAAjC,CAHF,EAIE;AACA,cAAMnT,MAAK,GAAGxE,MAAM,CAACwE,KAAP,CAAavF,MAAb,EAAqB6W,MAArB,CAAd;;AACA9C,UAAAA,UAAU,CAACM,MAAX,CAAkBrU,MAAlB,EAA0BuF,MAA1B;AACD;AACF;AACF,KAvDiB,EAwDlB,CAACiC,QAAD,EAAW9D,UAAU,CAACoU,OAAtB,CAxDkB;AA0DpBa,IAAAA,gBAAgB,EAAE9E,WAAW,CAC1BhI,KAAD;AACE,UACEqI,iBAAiB,CAAClU,MAAD,EAAS6L,KAAK,CAAC2I,MAAf,CAAjB,IACA,CAAC+C,cAAc,CAAC1L,KAAD,EAAQnI,UAAU,CAACiV,gBAAnB,CAFjB,EAGE;AACA,YAAIxY,WAAW,CAACqR,WAAZ,CAAwBxR,MAAxB,CAAJ,EAAqC;AACnCyR,UAAAA,cAAc,CAAC,KAAD,CAAd;AACApP,UAAAA,YAAY,CAAC6D,GAAb,CAAiBlG,MAAjB,EAAyB,KAAzB;AACD,SAJD;AAOA;AACA;AACA;;;AACA,YACE,CAACzB,SAAD,IACA,CAACI,iBADD,IAEA,CAACb,MAFD,IAGA,CAACc,YAHD,IAIA,CAACE,gBAJD,IAKA,CAACD,YALD,IAMAgN,KAAK,CAAC+I,IAPR,EAQE;AACA7T,UAAAA,MAAM,CAACyV,UAAP,CAAkBxW,MAAlB,EAA0B6L,KAAK,CAAC+I,IAAhC;AACD;;AAED,YAAI5U,MAAM,CAACuH,SAAP,IAAoB5B,KAAK,CAACmP,WAAN,CAAkB9U,MAAM,CAACuH,SAAzB,CAAxB,EAA6D;AAC3D,cAAMqR,QAAQ,GAAG5Y,MAAM,CAACuH,SAAP,CAAiBwN,MAAjB,CAAwB7U,IAAzC;AACA,cAAM2Y,eAAe,GAAGnY,IAAI,CAACb,IAAL,CAAUG,MAAV,EAAkB4Y,QAAlB,CAAxB;;AACA,cAAIxS,KAAK,CAACwL,2BAAV,EAAuC;AACrCxL,YAAAA,KAAK,CAACwL,2BAAN,GAAoC,KAApC;AACA7Q,YAAAA,MAAM,CAAC+X,kBAAP,CAA0B9Y,MAA1B,EAAkC;AAChC;AACA,kBAAMD,IAAI,GAAG8Y,eAAe,CAACjY,KAAhB,CAAsBmY,OAAtB,CAA8B,SAA9B,EAAyC,EAAzC,CAAb;AACAhF,cAAAA,UAAU,CAAC1N,MAAX,CAAkBrG,MAAlB,EAA0B;AACxBgZ,gBAAAA,QAAQ,EAAEH,eAAe,CAACjY,KAAhB,CAAsBH,MADR;AAExBwY,gBAAAA,OAAO,EAAE;AAFe,eAA1B;AAIAlY,cAAAA,MAAM,CAACyV,UAAP,CAAkBxW,MAAlB,EAA0BD,IAA1B;AACD,aARD;AASD;AACF;AACF;AACF,KA5C0B,EA6C3B,CAAC2D,UAAU,CAACiV,gBAAZ,CA7C2B;AA+C7BO,IAAAA,mBAAmB,EAAErF,WAAW,CAC7BhI,KAAD;AACE,UACEqI,iBAAiB,CAAClU,MAAD,EAAS6L,KAAK,CAAC2I,MAAf,CAAjB,IACA,CAAC+C,cAAc,CAAC1L,KAAD,EAAQnI,UAAU,CAACwV,mBAAnB,CAFjB,EAGE;AACA,YAAI,CAAC/Y,WAAW,CAACqR,WAAZ,CAAwBxR,MAAxB,CAAL,EAAsC;AACpCyR,UAAAA,cAAc,CAAC,IAAD,CAAd;AACApP,UAAAA,YAAY,CAAC6D,GAAb,CAAiBlG,MAAjB,EAAyB,IAAzB;AACD;AACF;AACF,KAX6B,EAY9B,CAAC0D,UAAU,CAACwV,mBAAZ,CAZ8B;AAchCC,IAAAA,kBAAkB,EAAEtF,WAAW,CAC5BhI,KAAD;AACE,UACEqI,iBAAiB,CAAClU,MAAD,EAAS6L,KAAK,CAAC2I,MAAf,CAAjB,IACA,CAAC+C,cAAc,CAAC1L,KAAD,EAAQnI,UAAU,CAACyV,kBAAnB,CAFjB,EAGE;AACA,YAAM;AAAE5R,UAAAA,SAAF;AAAayN,UAAAA;AAAb,YAAuBhV,MAA7B;;AACA,YAAIuH,SAAJ,EAAe;AACb,cAAI5B,KAAK,CAACqQ,UAAN,CAAiBzO,SAAjB,CAAJ,EAAiC;AAC/BxG,YAAAA,MAAM,CAACmV,cAAP,CAAsBlW,MAAtB;AACA;AACD;;AACD,cAAMoZ,MAAM,GAAGrY,MAAM,CAACsX,KAAP,CAAarY,MAAb,EAAqB;AAClCsQ,YAAAA,KAAK,EAAErH,CAAC,IAAIlI,MAAM,CAACD,QAAP,CAAgBd,MAAhB,EAAwBiJ,CAAxB,CADsB;AAElCoQ,YAAAA,IAAI,EAAE;AAF4B,WAArB,CAAf;;AAIA,cAAID,MAAJ,EAAY;AACV,gBAAM,GAAGE,UAAH,IAAiBF,MAAvB;;AACA,gBAAIrY,MAAM,CAACwY,KAAP,CAAavZ,MAAb,EAAqBuH,SAAS,CAACwN,MAA/B,EAAuCuE,UAAvC,CAAJ,EAAwD;AACtD,kBAAME,KAAK,GAAGzY,MAAM,CAAC0Y,KAAP,CAAazZ,MAAb,EAAqBsZ,UAArB,CAAd;AACAvF,cAAAA,UAAU,CAAC2F,YAAX,CAAwB1Z,MAAxB,EAAgC;AAC9B+U,gBAAAA,MAAM,EAAEyE,KADsB;AAE9B7F,gBAAAA,KAAK,EAAE6F;AAFuB,eAAhC;AAID;AACF,WAlBY;AAoBb;AACA;;;AACA,cAAIxE,KAAJ,EAAW;AACT5O,YAAAA,KAAK,CAACwL,2BAAN,GAAoC,IAApC;AACAmC,YAAAA,UAAU,CAAC4F,WAAX,CACE3Z,MADF;AAGIY,cAAAA,KAAK,EAAE;AAHX,eAIOoU,KAJP,GAME;AACEX,cAAAA,MAAM,EAAE;AADV,aANF;AAUD;AACF;AACF;AACF,KA5C4B,EA6C7B,CAAC3Q,UAAU,CAACyV,kBAAZ,CA7C6B;AA+C/BS,IAAAA,MAAM,EAAE/F,WAAW,CAChBhI,KAAD;AACE,UACEqI,iBAAiB,CAAClU,MAAD,EAAS6L,KAAK,CAAC2I,MAAf,CAAjB,IACA,CAAC+C,cAAc,CAAC1L,KAAD,EAAQnI,UAAU,CAACkW,MAAnB,CAFjB,EAGE;AACA/N,QAAAA,KAAK,CAACkK,cAAN;AACA5V,QAAAA,WAAW,CAAC0Z,eAAZ,CAA4B7Z,MAA5B,EAAoC6L,KAAK,CAACyC,aAA1C,EAAyD,MAAzD;AACD;AACF,KATgB,EAUjB,CAAC5K,UAAU,CAACkW,MAAZ,CAViB;AAYnBE,IAAAA,KAAK,EAAEjG,WAAW,CACfhI,KAAD;AACE,UACE,CAACrE,QAAD,IACA0M,iBAAiB,CAAClU,MAAD,EAAS6L,KAAK,CAAC2I,MAAf,CADjB,IAEA,CAAC+C,cAAc,CAAC1L,KAAD,EAAQnI,UAAU,CAACoW,KAAnB,CAHjB,EAIE;AACAjO,QAAAA,KAAK,CAACkK,cAAN;AACA5V,QAAAA,WAAW,CAAC0Z,eAAZ,CAA4B7Z,MAA5B,EAAoC6L,KAAK,CAACyC,aAA1C,EAAyD,KAAzD;AACA,YAAM;AAAE/G,UAAAA;AAAF,YAAgBvH,MAAtB;;AAEA,YAAIuH,SAAJ,EAAe;AACb,cAAI5B,KAAK,CAACqQ,UAAN,CAAiBzO,SAAjB,CAAJ,EAAiC;AAC/BxG,YAAAA,MAAM,CAACmV,cAAP,CAAsBlW,MAAtB;AACD,WAFD,MAEO;AACL,gBAAM6F,IAAI,GAAGnF,IAAI,CAACZ,MAAL,CAAYE,MAAZ,EAAoBuH,SAAS,CAACwN,MAAV,CAAiB7U,IAArC,CAAb;;AACA,gBAAIa,MAAM,CAACR,MAAP,CAAcP,MAAd,EAAsB6F,IAAtB,CAAJ,EAAiC;AAC/BkO,cAAAA,UAAU,CAAC1N,MAAX,CAAkBrG,MAAlB;AACD;AACF;AACF;AACF;AACF,KAtBe,EAuBhB,CAACwH,QAAD,EAAW9D,UAAU,CAACoW,KAAtB,CAvBgB;AAyBlBC,IAAAA,UAAU,EAAElG,WAAW,CACpBhI,KAAD;AACE,UACEkM,SAAS,CAAC/X,MAAD,EAAS6L,KAAK,CAAC2I,MAAf,CAAT,IACA,CAAC+C,cAAc,CAAC1L,KAAD,EAAQnI,UAAU,CAACqW,UAAnB,CAFjB,EAGE;AACA;AACA;AACA;AACA,YAAMlU,IAAI,GAAG1F,WAAW,CAAC0X,WAAZ,CAAwB7X,MAAxB,EAAgC6L,KAAK,CAAC2I,MAAtC,CAAb;;AAEA,YAAIzT,MAAM,CAACR,MAAP,CAAcP,MAAd,EAAsB6F,IAAtB,CAAJ,EAAiC;AAC/BgG,UAAAA,KAAK,CAACkK,cAAN;AACD;AACF;AACF,KAfoB,EAgBrB,CAACrS,UAAU,CAACqW,UAAZ,CAhBqB;AAkBvBC,IAAAA,WAAW,EAAEnG,WAAW,CACrBhI,KAAD;AACE,UACE,CAACrE,QAAD,IACAuQ,SAAS,CAAC/X,MAAD,EAAS6L,KAAK,CAAC2I,MAAf,CADT,IAEA,CAAC+C,cAAc,CAAC1L,KAAD,EAAQnI,UAAU,CAACsW,WAAnB,CAHjB,EAIE;AACA,YAAMnU,IAAI,GAAG1F,WAAW,CAAC0X,WAAZ,CAAwB7X,MAAxB,EAAgC6L,KAAK,CAAC2I,MAAtC,CAAb;AACA,YAAMtU,IAAI,GAAGC,WAAW,CAACC,QAAZ,CAAqBJ,MAArB,EAA6B6F,IAA7B,CAAb;AACA,YAAMoU,SAAS,GACblZ,MAAM,CAACR,MAAP,CAAcP,MAAd,EAAsB6F,IAAtB,KACA9E,MAAM,CAAC0X,IAAP,CAAYzY,MAAZ,EAAoB;AAAEsY,UAAAA,EAAE,EAAEpY,IAAN;AAAYga,UAAAA,KAAK,EAAE;AAAnB,SAApB,CAFF,CAHA;AAQA;;AACA,YAAID,SAAJ,EAAe;AACb,cAAM1U,KAAK,GAAGxE,MAAM,CAACwE,KAAP,CAAavF,MAAb,EAAqBE,IAArB,CAAd;AACA6T,UAAAA,UAAU,CAACM,MAAX,CAAkBrU,MAAlB,EAA0BuF,KAA1B;AACD;;AAEDa,QAAAA,KAAK,CAACyL,oBAAN,GAA6B,IAA7B;AAEA1R,QAAAA,WAAW,CAAC0Z,eAAZ,CAA4B7Z,MAA5B,EAAoC6L,KAAK,CAACsE,YAA1C,EAAwD,MAAxD;AACD;AACF,KAxBqB,EAyBtB,CAAC3I,QAAD,EAAW9D,UAAU,CAACsW,WAAtB,CAzBsB;AA2BxBG,IAAAA,MAAM,EAAEtG,WAAW,CAChBhI,KAAD;AACE,UACE,CAACrE,QAAD,IACAuQ,SAAS,CAAC/X,MAAD,EAAS6L,KAAK,CAAC2I,MAAf,CADT,IAEA,CAAC+C,cAAc,CAAC1L,KAAD,EAAQnI,UAAU,CAACyW,MAAnB,CAHjB,EAIE;AACAtO,QAAAA,KAAK,CAACkK,cAAN,GADA;;AAIA,YAAMqE,YAAY,GAAGpa,MAAM,CAACuH,SAA5B,CAJA;;AAOA,YAAMhC,KAAK,GAAGpF,WAAW,CAACka,cAAZ,CAA2Bra,MAA3B,EAAmC6L,KAAnC,CAAd;AACA,YAAM+I,IAAI,GAAG/I,KAAK,CAACsE,YAAnB;AAEA4D,QAAAA,UAAU,CAACM,MAAX,CAAkBrU,MAAlB,EAA0BuF,KAA1B;;AAEA,YAAIa,KAAK,CAACyL,oBAAV,EAAgC;AAC9B,cACEuI,YAAY,IACZ,CAACzU,KAAK,CAACjB,MAAN,CAAa0V,YAAb,EAA2B7U,KAA3B,CADD,IAEA,CAACxE,MAAM,CAAC0X,IAAP,CAAYzY,MAAZ,EAAoB;AAAEsY,YAAAA,EAAE,EAAE/S,KAAN;AAAa2U,YAAAA,KAAK,EAAE;AAApB,WAApB,CAHH,EAIE;AACAnG,YAAAA,UAAU,CAAC1N,MAAX,CAAkBrG,MAAlB,EAA0B;AACxBsY,cAAAA,EAAE,EAAE8B;AADoB,aAA1B;AAGD;AACF;;AAEDja,QAAAA,WAAW,CAACoW,UAAZ,CAAuBvW,MAAvB,EAA+B4U,IAA/B,EAxBA;AA2BA;;AACA,YAAI,CAACzU,WAAW,CAACiS,SAAZ,CAAsBpS,MAAtB,CAAL,EAAoC;AAClCG,UAAAA,WAAW,CAACwT,KAAZ,CAAkB3T,MAAlB;AACD;AACF;;AAEDoG,MAAAA,KAAK,CAACyL,oBAAN,GAA6B,KAA7B;AACD,KAxCgB,EAyCjB,CAACrK,QAAD,EAAW9D,UAAU,CAACyW,MAAtB,CAzCiB;AA2CnBG,IAAAA,SAAS,EAAEzG,WAAW,CACnBhI,KAAD;AACE,UACE,CAACrE,QAAD,IACApB,KAAK,CAACyL,oBADN,IAEAnO,UAAU,CAAC4W,SAFX,IAGAvC,SAAS,CAAC/X,MAAD,EAAS6L,KAAK,CAAC2I,MAAf,CAJX,EAKE;AACA9Q,QAAAA,UAAU,CAAC4W,SAAX,CAAqBzO,KAArB;AACD;AAGD;AACA;;;AACAzF,MAAAA,KAAK,CAACyL,oBAAN,GAA6B,KAA7B;AACD,KAfmB,EAgBpB,CAACrK,QAAD,EAAW9D,UAAU,CAAC4W,SAAtB,CAhBoB;AAkBtBC,IAAAA,OAAO,EAAE1G,WAAW,CACjBhI,KAAD;AACE,UACE,CAACrE,QAAD,IACA,CAACpB,KAAK,CAAC0L,mBADP,IAEAoC,iBAAiB,CAAClU,MAAD,EAAS6L,KAAK,CAAC2I,MAAf,CAFjB,IAGA,CAAC+C,cAAc,CAAC1L,KAAD,EAAQnI,UAAU,CAAC6W,OAAnB,CAJjB,EAKE;AACA,YAAM9G,EAAE,GAAGtT,WAAW,CAACuT,SAAZ,CAAsB1T,MAAtB,EAA8BA,MAA9B,CAAX;AACA,YAAMgS,IAAI,GAAG7R,WAAW,CAAC8R,wBAAZ,CAAqCjS,MAArC,CAAb;AACAoG,QAAAA,KAAK,CAAC2L,aAAN,GAAsBC,IAAI,CAAC/C,aAA3B,CAHA;AAMA;AACA;;AACA,YAAI3Q,UAAU,IAAIuN,KAAK,CAAC2I,MAAN,KAAiBf,EAAnC,EAAuC;AACrCA,UAAAA,EAAE,CAACE,KAAH;AACA;AACD;;AAEDvR,QAAAA,UAAU,CAAC8D,GAAX,CAAelG,MAAf,EAAuB,IAAvB;AACD;AACF,KAtBiB,EAuBlB,CAACwH,QAAD,EAAW9D,UAAU,CAAC6W,OAAtB,CAvBkB;AAyBpBC,IAAAA,SAAS,EAAE3G,WAAW,CACnBhI,KAAD;AACE,UAAI,CAACrE,QAAD,IAAa0M,iBAAiB,CAAClU,MAAD,EAAS6L,KAAK,CAAC2I,MAAf,CAAlC,EAA0D;AACxD,YAAM;AAAEiG,UAAAA;AAAF,YAAkB5O,KAAxB,CADwD;AAIxD;AACA;;AACA,YACE1L,WAAW,CAACqR,WAAZ,CAAwBxR,MAAxB,KACAya,WAAW,CAACjJ,WAAZ,KAA4B,KAF9B,EAGE;AACAnP,UAAAA,YAAY,CAAC6D,GAAb,CAAiBlG,MAAjB,EAAyB,KAAzB;AACAyR,UAAAA,cAAc,CAAC,KAAD,CAAd;AACD;;AAED,YACE8F,cAAc,CAAC1L,KAAD,EAAQnI,UAAU,CAAC8W,SAAnB,CAAd,IACAra,WAAW,CAACqR,WAAZ,CAAwBxR,MAAxB,CAFF,EAGE;AACA;AACD;;AAED,YAAM;AAAEuH,UAAAA;AAAF,YAAgBvH,MAAtB;AACA,YAAMmH,OAAO,GACXnH,MAAM,CAACa,QAAP,CACE0G,SAAS,KAAK,IAAd,GAAqBA,SAAS,CAACoM,KAAV,CAAgBzT,IAAhB,CAAqB,CAArB,CAArB,GAA+C,CADjD,CADF;AAIA,YAAMwa,KAAK,GAAG7S,YAAY,CAACnH,IAAI,CAACC,MAAL,CAAYwG,OAAZ,CAAD,CAAZ,KAAuC,KAArD,CA1BwD;AA6BxD;AACA;AACA;;AACA,YAAIwT,OAAO,CAAC1N,MAAR,CAAewN,WAAf,CAAJ,EAAiC;AAC/B5O,UAAAA,KAAK,CAACkK,cAAN;AACA,cAAM6E,kBAAkB,GAAQ5a,MAAhC;;AAEA,cAAI,OAAO4a,kBAAkB,CAAC1P,IAA1B,KAAmC,UAAvC,EAAmD;AACjD0P,YAAAA,kBAAkB,CAAC1P,IAAnB;AACD;;AAED;AACD;;AAED,YAAIyP,OAAO,CAACtN,MAAR,CAAeoN,WAAf,CAAJ,EAAiC;AAC/B5O,UAAAA,KAAK,CAACkK,cAAN;AACA,cAAM6E,mBAAkB,GAAQ5a,MAAhC;;AAEA,cAAI,OAAO4a,mBAAkB,CAACpQ,IAA1B,KAAmC,UAAvC,EAAmD;AACjDoQ,YAAAA,mBAAkB,CAACpQ,IAAnB;AACD;;AAED;AACD,SApDuD;AAuDxD;AACA;AACA;;;AACA,YAAImQ,OAAO,CAAC9N,kBAAR,CAA2B4N,WAA3B,CAAJ,EAA6C;AAC3C5O,UAAAA,KAAK,CAACkK,cAAN;AACAhC,UAAAA,UAAU,CAAC8G,IAAX,CAAgB7a,MAAhB,EAAwB;AAAEmW,YAAAA,IAAI,EAAE,MAAR;AAAgB8C,YAAAA,OAAO,EAAE;AAAzB,WAAxB;AACA;AACD;;AAED,YAAI0B,OAAO,CAAC7N,iBAAR,CAA0B2N,WAA1B,CAAJ,EAA4C;AAC1C5O,UAAAA,KAAK,CAACkK,cAAN;AACAhC,UAAAA,UAAU,CAAC8G,IAAX,CAAgB7a,MAAhB,EAAwB;AAAEmW,YAAAA,IAAI,EAAE;AAAR,WAAxB;AACA;AACD;;AAED,YAAIwE,OAAO,CAACjO,oBAAR,CAA6B+N,WAA7B,CAAJ,EAA+C;AAC7C5O,UAAAA,KAAK,CAACkK,cAAN;AACAhC,UAAAA,UAAU,CAAC8G,IAAX,CAAgB7a,MAAhB,EAAwB;AACtBmW,YAAAA,IAAI,EAAE,MADgB;AAEtB2E,YAAAA,IAAI,EAAE,OAFgB;AAGtB7B,YAAAA,OAAO,EAAE;AAHa,WAAxB;AAKA;AACD;;AAED,YAAI0B,OAAO,CAAChO,mBAAR,CAA4B8N,WAA5B,CAAJ,EAA8C;AAC5C5O,UAAAA,KAAK,CAACkK,cAAN;AACAhC,UAAAA,UAAU,CAAC8G,IAAX,CAAgB7a,MAAhB,EAAwB;AAAEmW,YAAAA,IAAI,EAAE,MAAR;AAAgB2E,YAAAA,IAAI,EAAE;AAAtB,WAAxB;AACA;AACD,SApFuD;AAuFxD;AACA;AACA;AACA;;;AACA,YAAIH,OAAO,CAAC3O,cAAR,CAAuByO,WAAvB,CAAJ,EAAyC;AACvC5O,UAAAA,KAAK,CAACkK,cAAN;;AAEA,cAAIxO,SAAS,IAAI5B,KAAK,CAACmP,WAAN,CAAkBvN,SAAlB,CAAjB,EAA+C;AAC7CwM,YAAAA,UAAU,CAAC8G,IAAX,CAAgB7a,MAAhB,EAAwB;AAAEiZ,cAAAA,OAAO,EAAE,CAACyB;AAAZ,aAAxB;AACD,WAFD,MAEO;AACL3G,YAAAA,UAAU,CAACgH,QAAX,CAAoB/a,MAApB,EAA4B;AAAE8a,cAAAA,IAAI,EAAE;AAAR,aAA5B;AACD;;AAED;AACD;;AAED,YAAIH,OAAO,CAAC1O,aAAR,CAAsBwO,WAAtB,CAAJ,EAAwC;AACtC5O,UAAAA,KAAK,CAACkK,cAAN;;AAEA,cAAIxO,SAAS,IAAI5B,KAAK,CAACmP,WAAN,CAAkBvN,SAAlB,CAAjB,EAA+C;AAC7CwM,YAAAA,UAAU,CAAC8G,IAAX,CAAgB7a,MAAhB,EAAwB;AAAEiZ,cAAAA,OAAO,EAAEyB;AAAX,aAAxB;AACD,WAFD,MAEO;AACL3G,YAAAA,UAAU,CAACgH,QAAX,CAAoB/a,MAApB,EAA4B;AAAE8a,cAAAA,IAAI,EAAE;AAAR,aAA5B;AACD;;AAED;AACD;;AAED,YAAIH,OAAO,CAAC5N,kBAAR,CAA2B0N,WAA3B,CAAJ,EAA6C;AAC3C5O,UAAAA,KAAK,CAACkK,cAAN;;AAEA,cAAIxO,SAAS,IAAI5B,KAAK,CAACqQ,UAAN,CAAiBzO,SAAjB,CAAjB,EAA8C;AAC5CwM,YAAAA,UAAU,CAACgH,QAAX,CAAoB/a,MAApB,EAA4B;AAAE8a,cAAAA,IAAI,EAAE;AAAR,aAA5B;AACD;;AAED/G,UAAAA,UAAU,CAAC8G,IAAX,CAAgB7a,MAAhB,EAAwB;AAAEmW,YAAAA,IAAI,EAAE,MAAR;AAAgB8C,YAAAA,OAAO,EAAE,CAACyB;AAA1B,WAAxB;AACA;AACD;;AAED,YAAIC,OAAO,CAAC3N,iBAAR,CAA0ByN,WAA1B,CAAJ,EAA4C;AAC1C5O,UAAAA,KAAK,CAACkK,cAAN;;AAEA,cAAIxO,SAAS,IAAI5B,KAAK,CAACqQ,UAAN,CAAiBzO,SAAjB,CAAjB,EAA8C;AAC5CwM,YAAAA,UAAU,CAACgH,QAAX,CAAoB/a,MAApB,EAA4B;AAAE8a,cAAAA,IAAI,EAAE;AAAR,aAA5B;AACD;;AAED/G,UAAAA,UAAU,CAAC8G,IAAX,CAAgB7a,MAAhB,EAAwB;AAAEmW,YAAAA,IAAI,EAAE,MAAR;AAAgB8C,YAAAA,OAAO,EAAEyB;AAAzB,WAAxB;AACA;AACD,SAvIuD;AA0IxD;AACA;;;AACA,YAAI,CAACxb,wBAAL,EAA+B;AAC7B;AACA;AACA,cACEyb,OAAO,CAAC7O,MAAR,CAAe2O,WAAf,KACAE,OAAO,CAAC/N,QAAR,CAAiB6N,WAAjB,CADA,IAEAE,OAAO,CAACvN,oBAAR,CAA6BqN,WAA7B,CAHF,EAIE;AACA5O,YAAAA,KAAK,CAACkK,cAAN;AACA;AACD;;AAED,cAAI4E,OAAO,CAACzN,WAAR,CAAoBuN,WAApB,CAAJ,EAAsC;AACpC5O,YAAAA,KAAK,CAACkK,cAAN;AACAhV,YAAAA,MAAM,CAACuJ,eAAP,CAAuBtK,MAAvB;AACA;AACD;;AAED,cAAI2a,OAAO,CAACxN,YAAR,CAAqBsN,WAArB,CAAJ,EAAuC;AACrC5O,YAAAA,KAAK,CAACkK,cAAN;AACAhV,YAAAA,MAAM,CAACqV,WAAP,CAAmBpW,MAAnB;AACA;AACD;;AAED,cAAI2a,OAAO,CAACzO,gBAAR,CAAyBuO,WAAzB,CAAJ,EAA2C;AACzC5O,YAAAA,KAAK,CAACkK,cAAN;;AAEA,gBAAIxO,SAAS,IAAI5B,KAAK,CAACqQ,UAAN,CAAiBzO,SAAjB,CAAjB,EAA8C;AAC5CxG,cAAAA,MAAM,CAACmV,cAAP,CAAsBlW,MAAtB,EAA8B;AAAEmP,gBAAAA,SAAS,EAAE;AAAb,eAA9B;AACD,aAFD,MAEO;AACLpO,cAAAA,MAAM,CAACkJ,cAAP,CAAsBjK,MAAtB;AACD;;AAED;AACD;;AAED,cAAI2a,OAAO,CAACxO,eAAR,CAAwBsO,WAAxB,CAAJ,EAA0C;AACxC5O,YAAAA,KAAK,CAACkK,cAAN;;AAEA,gBAAIxO,SAAS,IAAI5B,KAAK,CAACqQ,UAAN,CAAiBzO,SAAjB,CAAjB,EAA8C;AAC5CxG,cAAAA,MAAM,CAACmV,cAAP,CAAsBlW,MAAtB,EAA8B;AAAEmP,gBAAAA,SAAS,EAAE;AAAb,eAA9B;AACD,aAFD,MAEO;AACLpO,cAAAA,MAAM,CAACmJ,aAAP,CAAqBlK,MAArB;AACD;;AAED;AACD;;AAED,cAAI2a,OAAO,CAACvO,oBAAR,CAA6BqO,WAA7B,CAAJ,EAA+C;AAC7C5O,YAAAA,KAAK,CAACkK,cAAN;;AAEA,gBAAIxO,SAAS,IAAI5B,KAAK,CAACqQ,UAAN,CAAiBzO,SAAjB,CAAjB,EAA8C;AAC5CxG,cAAAA,MAAM,CAACmV,cAAP,CAAsBlW,MAAtB,EAA8B;AAAEmP,gBAAAA,SAAS,EAAE;AAAb,eAA9B;AACD,aAFD,MAEO;AACLpO,cAAAA,MAAM,CAACkJ,cAAP,CAAsBjK,MAAtB,EAA8B;AAAEmW,gBAAAA,IAAI,EAAE;AAAR,eAA9B;AACD;;AAED;AACD;;AAED,cAAIwE,OAAO,CAACtO,mBAAR,CAA4BoO,WAA5B,CAAJ,EAA8C;AAC5C5O,YAAAA,KAAK,CAACkK,cAAN;;AAEA,gBAAIxO,SAAS,IAAI5B,KAAK,CAACqQ,UAAN,CAAiBzO,SAAjB,CAAjB,EAA8C;AAC5CxG,cAAAA,MAAM,CAACmV,cAAP,CAAsBlW,MAAtB,EAA8B;AAAEmP,gBAAAA,SAAS,EAAE;AAAb,eAA9B;AACD,aAFD,MAEO;AACLpO,cAAAA,MAAM,CAACmJ,aAAP,CAAqBlK,MAArB,EAA6B;AAAEmW,gBAAAA,IAAI,EAAE;AAAR,eAA7B;AACD;;AAED;AACD;;AAED,cAAIwE,OAAO,CAACrO,oBAAR,CAA6BmO,WAA7B,CAAJ,EAA+C;AAC7C5O,YAAAA,KAAK,CAACkK,cAAN;;AAEA,gBAAIxO,SAAS,IAAI5B,KAAK,CAACqQ,UAAN,CAAiBzO,SAAjB,CAAjB,EAA8C;AAC5CxG,cAAAA,MAAM,CAACmV,cAAP,CAAsBlW,MAAtB,EAA8B;AAAEmP,gBAAAA,SAAS,EAAE;AAAb,eAA9B;AACD,aAFD,MAEO;AACLpO,cAAAA,MAAM,CAACkJ,cAAP,CAAsBjK,MAAtB,EAA8B;AAAEmW,gBAAAA,IAAI,EAAE;AAAR,eAA9B;AACD;;AAED;AACD;;AAED,cAAIwE,OAAO,CAACpO,mBAAR,CAA4BkO,WAA5B,CAAJ,EAA8C;AAC5C5O,YAAAA,KAAK,CAACkK,cAAN;;AAEA,gBAAIxO,SAAS,IAAI5B,KAAK,CAACqQ,UAAN,CAAiBzO,SAAjB,CAAjB,EAA8C;AAC5CxG,cAAAA,MAAM,CAACmV,cAAP,CAAsBlW,MAAtB,EAA8B;AAAEmP,gBAAAA,SAAS,EAAE;AAAb,eAA9B;AACD,aAFD,MAEO;AACLpO,cAAAA,MAAM,CAACmJ,aAAP,CAAqBlK,MAArB,EAA6B;AAAEmW,gBAAAA,IAAI,EAAE;AAAR,eAA7B;AACD;;AAED;AACD;AACF,SA/FD,MA+FO;AACL,cAAI1X,SAAS,IAAIF,SAAjB,EAA4B;AAC1B;AACA;AACA,gBACEgJ,SAAS,KACRoT,OAAO,CAACzO,gBAAR,CAAyBuO,WAAzB,KACCE,OAAO,CAACxO,eAAR,CAAwBsO,WAAxB,CAFO,CAAT,IAGA9U,KAAK,CAACmP,WAAN,CAAkBvN,SAAlB,CAJF,EAKE;AACA,kBAAMyT,WAAW,GAAGta,IAAI,CAACZ,MAAL,CAClBE,MADkB,EAElBuH,SAAS,CAACwN,MAAV,CAAiB7U,IAFC,CAApB;;AAKA,kBACEgH,SAAO,CAAC6B,SAAR,CAAkBiS,WAAlB,KACAja,MAAM,CAACR,MAAP,CAAcP,MAAd,EAAsBgb,WAAtB,CADA,IAEAja,MAAM,CAACD,QAAP,CAAgBd,MAAhB,EAAwBgb,WAAxB,CAHF,EAIE;AACAnP,gBAAAA,KAAK,CAACkK,cAAN;AACAhV,gBAAAA,MAAM,CAACkJ,cAAP,CAAsBjK,MAAtB,EAA8B;AAAEmW,kBAAAA,IAAI,EAAE;AAAR,iBAA9B;AAEA;AACD;AACF;AACF;AACF;AACF;AACF,KA1QmB,EA2QpB,CAAC3O,QAAD,EAAW9D,UAAU,CAAC8W,SAAtB,CA3QoB;AA6QtBS,IAAAA,OAAO,EAAEpH,WAAW,CACjBhI,KAAD;AACE,UACE,CAACrE,QAAD,IACA0M,iBAAiB,CAAClU,MAAD,EAAS6L,KAAK,CAAC2I,MAAf,CADjB,IAEA,CAAC+C,cAAc,CAAC1L,KAAD,EAAQnI,UAAU,CAACuX,OAAnB,CAHjB,EAIE;AACA;AACA;AACA;AACA;AACA,YACE,CAAC/b,wBAAD,IACAmP,oBAAoB,CAACxC,KAAK,CAAC4O,WAAP,CAFtB,EAGE;AACA5O,UAAAA,KAAK,CAACkK,cAAN;AACA5V,UAAAA,WAAW,CAACoW,UAAZ,CAAuBvW,MAAvB,EAA+B6L,KAAK,CAACyC,aAArC;AACD;AACF;AACF,KAnBiB,EAoBlB,CAAC9G,QAAD,EAAW9D,UAAU,CAACuX,OAAtB,CApBkB;IAxuBtB,eA+vBEtd,mBAAA,CAACkT,QAAD;AACEtK,IAAAA,WAAW,EAAEA;AACbV,IAAAA,IAAI,EAAE7F;AACNoH,IAAAA,aAAa,EAAEA;AACftE,IAAAA,iBAAiB,EAAEA;AACnBC,IAAAA,UAAU,EAAEA;AACZwE,IAAAA,SAAS,EAAEvH,MAAM,CAACuH;GANpB,CA/vBF,CADF,CADF,CADF;AA8wBD;AAgBD;;;;IAIa4J,kBAAkB,GAAG;AAAA,MAAC;AACjCzN,IAAAA,UADiC;AAEjC7C,IAAAA;AAFiC,GAAD;AAAA,sBAGJlD,mBAAA,OAAA,oBAAU+F,WAAV,EAAuB7C,QAAvB,CAHI;AAAA;AAKlC;;;;AAIO,IAAMmQ,eAAe,GAAkC,MAAM,EAA7D;AAEP;;;;AAIA,IAAMK,8BAA8B,GAAG,CACrCrR,MADqC,EAErCkb,QAFqC;AAIrC;AACA;AACA,MACE,CAAClb,MAAM,CAACuH,SAAR,IACCvH,MAAM,CAACuH,SAAP,IAAoB5B,KAAK,CAACmP,WAAN,CAAkB9U,MAAM,CAACuH,SAAzB,CAFvB,EAGE;AACA,QAAM4T,MAAM,GAAGD,QAAQ,CAAC7H,cAAT,CAAwB6B,aAAvC;AACAiG,IAAAA,MAAM,CAACC,qBAAP,GAA+BF,QAAQ,CAACE,qBAAT,CAA+BC,IAA/B,CAAoCH,QAApC,CAA/B;AACAI,IAAAA,cAAc,CAACH,MAAD,EAAS;AACrBI,MAAAA,UAAU,EAAE;AADS,KAAT,CAAd;AAGA,WAAOJ,MAAM,CAACC,qBAAd;AACD;AACF,CAjBD;AAmBA;;;;;AAIO,IAAMrD,SAAS,GAAG,CACvB/X,MADuB,EAEvBwU,MAFuB;AAIvB,SAAO1G,SAAS,CAAC0G,MAAD,CAAT,IAAqBrU,WAAW,CAACiV,UAAZ,CAAuBpV,MAAvB,EAA+BwU,MAA/B,CAA5B;AACD,CALM;AAOP;;;;AAIO,IAAMN,iBAAiB,GAAG,CAC/BlU,MAD+B,EAE/BwU,MAF+B;AAI/B,SACE1G,SAAS,CAAC0G,MAAD,CAAT,IACArU,WAAW,CAACiV,UAAZ,CAAuBpV,MAAvB,EAA+BwU,MAA/B,EAAuC;AAAEgH,IAAAA,QAAQ,EAAE;AAAZ,GAAvC,CAFF;AAID,CARM;AAUP;;;;AAIO,IAAMrH,6BAA6B,GAAG,CAC3CnU,MAD2C,EAE3CwU,MAF2C;AAI3C,MAAIrS,YAAY,CAAC2E,GAAb,CAAiB9G,MAAjB,CAAJ,EAA8B,OAAO,KAAP;AAE9B,MAAMyb,SAAS,GACb1D,SAAS,CAAC/X,MAAD,EAASwU,MAAT,CAAT,IAA6BrU,WAAW,CAAC0X,WAAZ,CAAwB7X,MAAxB,EAAgCwU,MAAhC,CAD/B;AAEA,SAAOzT,MAAM,CAACR,MAAP,CAAcP,MAAd,EAAsByb,SAAtB,CAAP;AACD,CATM;AAWP;;;;AAIO,IAAMlE,cAAc,GAAG,CAG5B1L,KAH4B,EAI5B6P,OAJ4B;AAM5B,MAAI,CAACA,OAAL,EAAc;AACZ,WAAO,KAAP;AACD;AAED;;;AACA,MAAMC,yBAAyB,GAAGD,OAAO,CAAC7P,KAAD,CAAzC;;AAEA,MAAI8P,yBAAyB,IAAI,IAAjC,EAAuC;AACrC,WAAOA,yBAAP;AACD;;AAED,SAAO9P,KAAK,CAAC+P,kBAAN,MAA8B/P,KAAK,CAACgQ,oBAAN,EAArC;AACD,CAlBM;AAoBP;;;;AAIO,IAAMpH,iBAAiB,GAAG,CAC/B5I,KAD+B,EAE/B6P,OAF+B;AAI/B,MAAI,CAACA,OAAL,EAAc;AACZ,WAAO,KAAP;AACD;AAGD;;;AACA,MAAMC,yBAAyB,GAAGD,OAAO,CAAC7P,KAAD,CAAzC;;AAEA,MAAI8P,yBAAyB,IAAI,IAAjC,EAAuC;AACrC,WAAOA,yBAAP;AACD;;AAED,SAAO9P,KAAK,CAACiQ,gBAAb;AACD,CAjBM;;AC99CP;;;;;;;;;AAQA,SAASC,YAAT,CAAsBxX,IAAtB,EAAoCC,IAApC;AACE,MAAM/D,MAAM,GAAGub,IAAI,CAACC,GAAL,CAAS1X,IAAI,CAAC9D,MAAd,EAAsB+D,IAAI,CAAC/D,MAA3B,CAAf;;AAEA,OAAK,IAAI6E,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG7E,MAApB,EAA4B6E,CAAC,EAA7B,EAAiC;AAC/B,QAAIf,IAAI,CAAC2X,MAAL,CAAY5W,CAAZ,MAAmBd,IAAI,CAAC0X,MAAL,CAAY5W,CAAZ,CAAvB,EAAuC,OAAOA,CAAP;AACxC;;AAED,MAAIf,IAAI,CAAC9D,MAAL,KAAgB+D,IAAI,CAAC/D,MAAzB,EAAiC,OAAOA,MAAP;AACjC,SAAO,IAAP;AACD;AAED;;;;;;;;;;;;AAUA,SAAS0b,UAAT,CAAoB5X,IAApB,EAAkCC,IAAlC,EAAgD4X,GAAhD;AACE,MAAMC,UAAU,GAAG9X,IAAI,CAAC9D,MAAxB;AACA,MAAM6b,UAAU,GAAG9X,IAAI,CAAC/D,MAAxB;AACA,MAAMA,MAAM,GAAGub,IAAI,CAACC,GAAL,CAASI,UAAT,EAAqBC,UAArB,EAAiCF,GAAjC,CAAf;;AAEA,OAAK,IAAI9W,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG7E,MAApB,EAA4B6E,CAAC,EAA7B,EAAiC;AAC/B,QAAMiX,QAAQ,GAAGhY,IAAI,CAAC2X,MAAL,CAAYG,UAAU,GAAG/W,CAAb,GAAiB,CAA7B,CAAjB;AACA,QAAMkX,QAAQ,GAAGhY,IAAI,CAAC0X,MAAL,CAAYI,UAAU,GAAGhX,CAAb,GAAiB,CAA7B,CAAjB;AACA,QAAIiX,QAAQ,KAAKC,QAAjB,EAA2B,OAAOlX,CAAP;AAC5B;;AAED,MAAIf,IAAI,CAAC9D,MAAL,KAAgB+D,IAAI,CAAC/D,MAAzB,EAAiC,OAAOA,MAAP;AACjC,SAAO,IAAP;AACD;AAED;;;;;;;;;;;;;;AAYA,SAASgc,cAAT,CAAwBlY,IAAxB,EAAsCC,IAAtC;AACE,MAAID,IAAI,KAAKC,IAAb,EAAmB,OAAO,IAAP;AACnB,MAAMqS,KAAK,GAAGkF,YAAY,CAACxX,IAAD,EAAOC,IAAP,CAA1B;AACA,MAAIqS,KAAK,KAAK,IAAd,EAAoB,OAAO,IAAP;AACpB,MAAM6F,MAAM,GAAGV,IAAI,CAACC,GAAL,CAAS1X,IAAI,CAAC9D,MAAL,GAAcoW,KAAvB,EAA8BrS,IAAI,CAAC/D,MAAL,GAAcoW,KAA5C,CAAf;AACA,MAAM0B,GAAG,GAAG4D,UAAU,CAAC5X,IAAD,EAAOC,IAAP,EAAakY,MAAb,CAAtB;AACA,MAAInE,GAAG,KAAK,IAAZ,EAAkB,OAAO,IAAP;AAClB,SAAO;AAAE1B,IAAAA,KAAF;AAAS0B,IAAAA;AAAT,GAAP;AACD;AAED;;;;;;;;;AAOA,SAASoE,SAAT,CAAmB5c,IAAnB,EAAiC6c,OAAjC;AACE,SAAO7c,IAAI,CAACkB,KAAL,CAAW2b,OAAO,CAAC/F,KAAnB,EAA0B9W,IAAI,CAACU,MAAL,GAAcmc,OAAO,CAACrE,GAAhD,CAAP;AACD;AAED;;;;;;;;;;;SASgBsE,SAAStY,MAAeC;AACtC,MAAID,IAAI,KAAKyC,SAAT,IAAsBxC,IAAI,KAAKwC,SAAnC,EAA8C,OAAO,IAAP;AAC9C,MAAM4V,OAAO,GAAGH,cAAc,CAAClY,IAAD,EAAOC,IAAP,CAA9B;AACA,MAAIoY,OAAO,IAAI,IAAf,EAAqB,OAAO,IAAP;AACrB,MAAMpG,UAAU,GAAGmG,SAAS,CAACnY,IAAD,EAAOoY,OAAP,CAA5B;AACA,MAAME,UAAU,GAAGH,SAAS,CAACpY,IAAD,EAAOqY,OAAP,CAA5B;AACA,SAAO;AACL/F,IAAAA,KAAK,EAAE+F,OAAO,CAAC/F,KADV;AAEL0B,IAAAA,GAAG,EAAEhU,IAAI,CAAC9D,MAAL,GAAcmc,OAAO,CAACrE,GAFtB;AAGL/B,IAAAA,UAHK;AAILsG,IAAAA;AAJK,GAAP;AAMD;SAEeC,oBAAoBC;AAClC,SAAOA,YAAY,CAACC,MAAb,CAAoB,CAACC,GAAD;AAAA,QAAM;AAAEnd,MAAAA;AAAF,KAAN;AAAA,qBAAsBmd,GAAtB,SAA4Bnd,IAAI,CAACyW,UAAjC;AAAA,GAApB,EAAmE,EAAnE,CAAP;AACD;SAEe2G,iBACdnd,QACAyP;AAEA,MAAM5J,IAAI,GAAG1F,WAAW,CAAC0X,WAAZ,CAAwB7X,MAAxB,EAAgCyP,OAAhC,CAAb;;AAEA,MAAI,CAAChL,MAAI,CAAC2Y,MAAL,CAAYvX,IAAZ,CAAL,EAAwB;AACtB,WAAOmB,SAAP;AACD;;AAED,MAAMqW,QAAQ,GAAGxX,IAAI,CAACjF,KAAtB;AACA,MAAI0c,QAAQ,GAAG7N,OAAO,CAAChO,WAAvB;;AAGA,MAAI6b,QAAQ,CAACrH,QAAT,CAAkB,IAAlB,CAAJ,EAA6B;AAC3BqH,IAAAA,QAAQ,GAAGA,QAAQ,CAACrc,KAAT,CAAe,CAAf,EAAkBqc,QAAQ,CAAC7c,MAAT,GAAkB,CAApC,CAAX;AACD;;;AAGD,MAAI6c,QAAQ,KAAKD,QAAjB,EAA2B;AACzB,QAAME,QAAQ,GAAGV,QAAQ,CAACQ,QAAD,EAAWC,QAAX,CAAzB;;AACA,QAAIC,QAAQ,KAAK,IAAjB,EAAuB;AACrB,UAAMC,QAAQ,GAAGrd,WAAW,CAACC,QAAZ,CAAqBJ,MAArB,EAA6B6F,IAA7B,CAAjB;AAEA,aAAO;AACL9F,QAAAA,IAAI,EAAEwd,QADD;AAELrd,QAAAA,IAAI,EAAEsd;AAFD,OAAP;AAID;AACF;;AAED,SAAOxW,SAAP;AACD;SAEeyW,4BACdzd,QACAuF;MACA;AAAErF,IAAAA,IAAF;AAAQH,IAAAA;AAAR;AAEA,MAAM2d,cAAc,GAAG;AACrB3I,IAAAA,MAAM,EAAE;AAAE7U,MAAAA,IAAF;AAAQyO,MAAAA,MAAM,EAAE5O,IAAI,CAAC8W;AAArB,KADa;AAErBlD,IAAAA,KAAK,EAAE;AAAEzT,MAAAA,IAAF;AAAQyO,MAAAA,MAAM,EAAE5O,IAAI,CAACwY;AAArB;AAFc,GAAvB;;AAKA,MAAI,CAAChT,KAAD,IAAU,CAACI,KAAK,CAACmP,WAAN,CAAkBvP,KAAlB,CAAf,EAAyC;AACvC,WAAOmY,cAAP;AACD;;AAED,MAAM;AAAElH,IAAAA,UAAF;AAAcsG,IAAAA;AAAd,MAA6B/c,IAAnC;AACA,MAAM4d,0BAA0B,GAC9BnH,UAAU,CAAC/V,MAAX,KAAsB,CAAtB,IAA2Bqc,UAAU,CAACrc,MAAX,KAAsB,CADnD;AAGA;;;;;;;;;;;;;;;;;;;;AAmBA,MAAIkd,0BAA0B,IAAIrd,IAAI,CAACoE,MAAL,CAAYa,KAAK,CAACwP,MAAN,CAAa7U,IAAzB,EAA+BA,IAA/B,CAAlC,EAAwE;AACtE,QAAM,CAACH,KAAD,IAAS6P,KAAK,CAACC,IAAN,CACb9O,MAAM,CAAC6c,KAAP,CAAa5d,MAAb,EAAqB;AAAEsY,MAAAA,EAAE,EAAE/S,KAAN;AAAa+K,MAAAA,KAAK,EAAE7L,MAAI,CAAC2Y;AAAzB,KAArB,CADa,CAAf;;AAIA,QAAIrd,KAAJ,EAAU;AACR,UAAM,CAAC8F,IAAD,IAAS9F,KAAf;AACA,UAAM;AAAEgV,QAAAA;AAAF,UAAaxP,KAAnB;AACA,UAAMsY,qBAAqB,GAAGhY,IAAI,CAACjF,KAAL,CAAWmU,MAAM,CAACpG,MAAP,GAAgB,CAA3B,CAA9B;AACA,UAAMmP,oBAAoB,GAAGjY,IAAI,CAACjF,KAAL,CAAWmU,MAAM,CAACpG,MAAlB,CAA7B;;AAEA,UAAI6H,UAAU,CAAC/V,MAAX,KAAsB,CAAtB,IAA2B+V,UAAU,KAAKsH,oBAA9C,EAAoE;AAClE;AACA,eAAOvY,KAAP;AACD;;AAED,UAAIuX,UAAU,CAACrc,MAAX,KAAsB,CAAtB,IAA2Bqc,UAAU,KAAKe,qBAA9C,EAAqE;AACnE;AACA,eAAO;AACL9I,UAAAA,MAAM,EAAE;AAAE7U,YAAAA,IAAF;AAAQyO,YAAAA,MAAM,EAAEoG,MAAM,CAACpG,MAAP,GAAgB;AAAhC,WADH;AAELgF,UAAAA,KAAK,EAAE;AAAEzT,YAAAA,IAAF;AAAQyO,YAAAA,MAAM,EAAEoG,MAAM,CAACpG;AAAvB;AAFF,SAAP;AAID;AACF;AACF;;AAED,SAAO+O,cAAP;AACD;;AChOD;;;AAIA,IAAIzU,CAAC,GAAG,CAAR;AAEA;;;;;MAKa8U;AAGX1H,EAAAA;AACE,SAAKzP,EAAL,aAAaqC,CAAC,EAAd;AACD;;;;IC4BU9I,WAAW,GAAG;AACzB;;;AAIAqR,EAAAA,WAAW,CAACxR,MAAD;AACT,WAAO,CAAC,CAACqC,YAAY,CAACyE,GAAb,CAAiB9G,MAAjB,CAAT;AACD,GAPwB;;AASzB;;;AAIAqV,EAAAA,SAAS,CAACrV,MAAD;AACP,QAAMhC,MAAM,GAAG6D,gBAAgB,CAACiF,GAAjB,CAAqB9G,MAArB,CAAf;;AACA,QAAI,CAAChC,MAAL,EAAa;AACX,YAAM,IAAIwK,KAAJ,CAAU,sDAAV,CAAN;AACD;;AACD,WAAOxK,MAAP;AACD,GAnBwB;;AAqBzB;;;AAIA0I,EAAAA,OAAO,CAAC1G,MAAD,EAAsB6F,IAAtB;AACL,QAAIZ,GAAG,GAAGhD,WAAW,CAAC6E,GAAZ,CAAgBjB,IAAhB,CAAV;;AAEA,QAAI,CAACZ,GAAL,EAAU;AACRA,MAAAA,GAAG,GAAG,IAAI8Y,GAAJ,EAAN;AACA9b,MAAAA,WAAW,CAACiE,GAAZ,CAAgBL,IAAhB,EAAsBZ,GAAtB;AACD;;AAED,WAAOA,GAAP;AACD,GAlCwB;;AAoCzB;;;AAIA7E,EAAAA,QAAQ,CAACJ,MAAD,EAAsB6F,IAAtB;AACN,QAAM3F,IAAI,GAAS,EAAnB;AACA,QAAIkP,KAAK,GAAGvJ,IAAZ;;AAEA,WAAO,IAAP,EAAa;AACX,UAAM/F,MAAM,GAAG8B,cAAc,CAACkF,GAAf,CAAmBsI,KAAnB,CAAf;;AAEA,UAAItP,MAAM,IAAI,IAAd,EAAoB;AAClB,YAAIiB,MAAM,CAACid,QAAP,CAAgB5O,KAAhB,CAAJ,EAA4B;AAC1B,iBAAOlP,IAAP;AACD,SAFD,MAEO;AACL;AACD;AACF;;AAED,UAAMoF,CAAC,GAAG5D,aAAa,CAACoF,GAAd,CAAkBsI,KAAlB,CAAV;;AAEA,UAAI9J,CAAC,IAAI,IAAT,EAAe;AACb;AACD;;AAEDpF,MAAAA,IAAI,CAAC+d,OAAL,CAAa3Y,CAAb;AACA8J,MAAAA,KAAK,GAAGtP,MAAR;AACD;;AAED,UAAM,IAAI0I,KAAJ,mDACuC0V,IAAI,CAACC,SAAL,CAAetY,IAAf,CADvC,EAAN;AAGD,GApEwB;;AAsEzB;;;AAIAoM,EAAAA,wBAAwB,CAACjS,MAAD;AACtB,QAAMyT,EAAE,GAAGtT,WAAW,CAACuT,SAAZ,CAAsB1T,MAAtB,EAA8BA,MAA9B,CAAX;AACA,QAAMgS,IAAI,GAAGyB,EAAE,CAAC2K,WAAH,EAAb;;AAEA,QACE,CAACpM,IAAI,YAAYqM,QAAhB,IAA4BrM,IAAI,YAAYsM,UAA7C,KACAtM,IAAI,CAACG,YAAL,IAAqB,IAFvB,EAGE;AACA,aAAOH,IAAP;AACD;;AAED,WAAOyB,EAAE,CAAC9F,aAAV;AACD,GAtFwB;;AAwFzB;;;AAIAyE,EAAAA,SAAS,CAACpS,MAAD;AACP,WAAO,CAAC,CAACoC,UAAU,CAAC0E,GAAX,CAAe9G,MAAf,CAAT;AACD,GA9FwB;;AAgGzB;;;AAIAue,EAAAA,UAAU,CAACve,MAAD;AACR,WAAO,CAAC,CAACmC,YAAY,CAAC2E,GAAb,CAAiB9G,MAAjB,CAAT;AACD,GAtGwB;;AAwGzB;;;AAIAwe,EAAAA,IAAI,CAACxe,MAAD;AACF,QAAMyT,EAAE,GAAGtT,WAAW,CAACuT,SAAZ,CAAsB1T,MAAtB,EAA8BA,MAA9B,CAAX;AACA,QAAMgS,IAAI,GAAG7R,WAAW,CAAC8R,wBAAZ,CAAqCjS,MAArC,CAAb;AACAoC,IAAAA,UAAU,CAAC8D,GAAX,CAAelG,MAAf,EAAuB,KAAvB;;AAEA,QAAIgS,IAAI,CAAC/C,aAAL,KAAuBwE,EAA3B,EAA+B;AAC7BA,MAAAA,EAAE,CAAC+K,IAAH;AACD;AACF,GApHwB;;AAsHzB;;;AAIA7K,EAAAA,KAAK,CAAC3T,MAAD;AACH,QAAMyT,EAAE,GAAGtT,WAAW,CAACuT,SAAZ,CAAsB1T,MAAtB,EAA8BA,MAA9B,CAAX;AACA,QAAMgS,IAAI,GAAG7R,WAAW,CAAC8R,wBAAZ,CAAqCjS,MAArC,CAAb;AACAoC,IAAAA,UAAU,CAAC8D,GAAX,CAAelG,MAAf,EAAuB,IAAvB;;AAEA,QAAIgS,IAAI,CAAC/C,aAAL,KAAuBwE,EAA3B,EAA+B;AAC7BA,MAAAA,EAAE,CAACE,KAAH,CAAS;AAAE8K,QAAAA,aAAa,EAAE;AAAjB,OAAT;AACD;AACF,GAlIwB;;AAoIzB;;;AAIAzK,EAAAA,QAAQ,CAAChU,MAAD;AACN,IAAWG,WAAW,CAACuT,SAAZ,CAAsB1T,MAAtB,EAA8BA,MAA9B;AACX,QAAM;AAAEuH,MAAAA;AAAF,QAAgBvH,MAAtB;AACA,QAAMgS,IAAI,GAAG7R,WAAW,CAAC8R,wBAAZ,CAAqCjS,MAArC,CAAb;AACA,QAAMkS,YAAY,GAAGF,IAAI,CAACG,YAAL,EAArB;;AAEA,QAAID,YAAY,IAAIA,YAAY,CAACwM,UAAb,GAA0B,CAA9C,EAAiD;AAC/CxM,MAAAA,YAAY,CAACqB,eAAb;AACD;;AAED,QAAIhM,SAAJ,EAAe;AACbwM,MAAAA,UAAU,CAACC,QAAX,CAAoBhU,MAApB;AACD;AACF,GArJwB;;AAuJzB;;;AAIAoV,EAAAA,UAAU,CACRpV,MADQ,EAERwU,MAFQ;QAGRmK,8EAAkC;AAElC,QAAM;AAAEnD,MAAAA,QAAQ,GAAG;AAAb,QAAuBmD,OAA7B;AACA,QAAMxb,QAAQ,GAAGhD,WAAW,CAACuT,SAAZ,CAAsB1T,MAAtB,EAA8BA,MAA9B,CAAjB;AACA,QAAI4e,QAAJ;AAGA;AACA;AACA;;AACA,QAAI;AACFA,MAAAA,QAAQ,GAAI5Q,YAAY,CAACwG,MAAD,CAAZ,GACRA,MADQ,GAERA,MAAM,CAACU,aAFX;AAGD,KAJD,CAIE,OAAO2J,GAAP,EAAY;AACZ,UACE,CAACA,GAAG,CAACC,OAAJ,CAAYC,QAAZ,CAAqB,iDAArB,CADH,EAEE;AACA,cAAMF,GAAN;AACD;AACF;;AAED,QAAI,CAACD,QAAL,EAAe;AACb,aAAO,KAAP;AACD;;AAED,WACEA,QAAQ,CAACzJ,OAAT,4BAA4ChS,QAA5C,KACC,CAACqY,QAAD,IAAaoD,QAAQ,CAACI,iBAAtB,GACG,IADH,GAEI,OAAOJ,QAAQ,CAACI,iBAAhB,KAAsC,SAAtC;AACC;AACAJ,IAAAA,QAAQ,CAACzJ,OAAT,CAAiB,2BAAjB,MAAkDhS,QAFpD,IAGA,CAAC,CAACyb,QAAQ,CAACrP,YAAT,CAAsB,uBAAtB,CANN,CADF;AASD,GAjMwB;;AAmMzB;;;AAIAgH,EAAAA,UAAU,CAACvW,MAAD,EAAsB4U,IAAtB;AACR5U,IAAAA,MAAM,CAACuW,UAAP,CAAkB3B,IAAlB;AACD,GAzMwB;;AA2MzB;;;AAIAqK,EAAAA,kBAAkB,CAACjf,MAAD,EAAsB4U,IAAtB;AAChB,WAAO5U,MAAM,CAACif,kBAAP,CAA0BrK,IAA1B,CAAP;AACD,GAjNwB;;AAmNzB;;;AAIAsK,EAAAA,cAAc,CAAClf,MAAD,EAAsB4U,IAAtB;AACZ,WAAO5U,MAAM,CAACkf,cAAP,CAAsBtK,IAAtB,CAAP;AACD,GAzNwB;;AA2NzB;;;AAIAiF,EAAAA,eAAe,CACb7Z,MADa,EAEb4U,IAFa,EAGbuK,WAHa;AAKbnf,IAAAA,MAAM,CAAC6Z,eAAP,CAAuBjF,IAAvB,EAA6BuK,WAA7B;AACD,GArOwB;;AAuOzB;;;AAIAzL,EAAAA,SAAS,CAAC1T,MAAD,EAAsB6F,IAAtB;AACP,QAAMgB,cAAc,GAAG3E,wBAAwB,CAAC4E,GAAzB,CAA6B9G,MAA7B,CAAvB;AACA,QAAMyP,OAAO,GAAG1O,MAAM,CAACid,QAAP,CAAgBnY,IAAhB,IACZ/D,iBAAiB,CAACgF,GAAlB,CAAsB9G,MAAtB,CADY,GAEZ6G,cAFY,aAEZA,cAFY,uBAEZA,cAAc,CAAEC,GAAhB,CAAoB3G,WAAW,CAACuG,OAAZ,CAAoB1G,MAApB,EAA4B6F,IAA5B,CAApB,CAFJ;;AAIA,QAAI,CAAC4J,OAAL,EAAc;AACZ,YAAM,IAAIjH,KAAJ,sDAC0C0V,IAAI,CAACC,SAAL,CAAetY,IAAf,CAD1C,EAAN;AAGD;;AAED,WAAO4J,OAAP;AACD,GAxPwB;;AA0PzB;;;AAIAwF,EAAAA,UAAU,CAACjV,MAAD,EAAsBwZ,KAAtB;AACR,QAAM,CAAC3T,IAAD,IAAS9E,MAAM,CAAC8E,IAAP,CAAY7F,MAAZ,EAAoBwZ,KAAK,CAACtZ,IAA1B,CAAf;AACA,QAAMuT,EAAE,GAAGtT,WAAW,CAACuT,SAAZ,CAAsB1T,MAAtB,EAA8B6F,IAA9B,CAAX;AACA,QAAI6I,QAAJ;AAGA;;AACA,QAAI3N,MAAM,CAAC0X,IAAP,CAAYzY,MAAZ,EAAoB;AAAEsY,MAAAA,EAAE,EAAEkB;AAAN,KAApB,CAAJ,EAAwC;AACtCA,MAAAA,KAAK,GAAG;AAAEtZ,QAAAA,IAAI,EAAEsZ,KAAK,CAACtZ,IAAd;AAAoByO,QAAAA,MAAM,EAAE;AAA5B,OAAR;AACD;AAGD;AACA;;;AACA,QAAMyQ,QAAQ,iDAAd;AACA,QAAMrX,KAAK,GAAG6H,KAAK,CAACC,IAAN,CAAW4D,EAAE,CAAC4L,gBAAH,CAAoBD,QAApB,CAAX,CAAd;AACA,QAAIvI,KAAK,GAAG,CAAZ;;AAEA,SAAK,IAAM9W,IAAX,IAAmBgI,KAAnB,EAA0B;AACxB,UAAM0H,OAAO,GAAG1P,IAAI,CAAC6O,UAAL,CAAgB,CAAhB,CAAhB;;AAEA,UAAIa,OAAO,IAAI,IAAX,IAAmBA,OAAO,CAAChO,WAAR,IAAuB,IAA9C,EAAoD;AAClD;AACD;;AAED,UAAM;AAAEhB,QAAAA;AAAF,UAAagP,OAAO,CAAChO,WAA3B;AACA,UAAM6d,IAAI,GAAGvf,IAAI,CAACwP,YAAL,CAAkB,mBAAlB,CAAb;AACA,UAAMgQ,UAAU,GAAGD,IAAI,IAAI,IAAR,GAAe7e,MAAf,GAAwB/C,QAAQ,CAAC4hB,IAAD,EAAO,EAAP,CAAnD;AACA,UAAM/G,GAAG,GAAG1B,KAAK,GAAG0I,UAApB;;AAEA,UAAI/F,KAAK,CAAC7K,MAAN,IAAgB4J,GAApB,EAAyB;AACvB,YAAM5J,MAAM,GAAGqN,IAAI,CAACC,GAAL,CAASxb,MAAT,EAAiBub,IAAI,CAACI,GAAL,CAAS,CAAT,EAAY5C,KAAK,CAAC7K,MAAN,GAAekI,KAA3B,CAAjB,CAAf;AACAnI,QAAAA,QAAQ,GAAG,CAACe,OAAD,EAAUd,MAAV,CAAX;AACA;AACD;;AAEDkI,MAAAA,KAAK,GAAG0B,GAAR;AACD;;AAED,QAAI,CAAC7J,QAAL,EAAe;AACb,YAAM,IAAIlG,KAAJ,wDAC4C0V,IAAI,CAACC,SAAL,CAAe3E,KAAf,CAD5C,EAAN;AAGD;;AAED,WAAO9K,QAAP;AACD,GA5SwB;;AA8SzB;;;;;;;;AASAsE,EAAAA,UAAU,CAAChT,MAAD,EAAsBuF,KAAtB;AACR,QAAM;AAAEwP,MAAAA,MAAF;AAAUpB,MAAAA;AAAV,QAAoBpO,KAA1B;AACA,QAAM0N,UAAU,GAAGtN,KAAK,CAACsN,UAAN,CAAiB1N,KAAjB,CAAnB;AACA,QAAMia,SAAS,GAAGrf,WAAW,CAAC8U,UAAZ,CAAuBjV,MAAvB,EAA+B+U,MAA/B,CAAlB;AACA,QAAM0K,QAAQ,GAAG9Z,KAAK,CAACmP,WAAN,CAAkBvP,KAAlB,IACbia,SADa,GAEbrf,WAAW,CAAC8U,UAAZ,CAAuBjV,MAAvB,EAA+B2T,KAA/B,CAFJ;AAIA,QAAM3V,MAAM,GAAGmC,WAAW,CAACkV,SAAZ,CAAsBrV,MAAtB,CAAf;AACA,QAAMkb,QAAQ,GAAGld,MAAM,CAACgB,QAAP,CAAgB0gB,WAAhB,EAAjB;AACA,QAAM,CAACC,SAAD,EAAYrM,WAAZ,IAA2BL,UAAU,GAAGwM,QAAH,GAAcD,SAAzD;AACA,QAAM,CAACI,OAAD,EAAUxM,SAAV,IAAuBH,UAAU,GAAGuM,SAAH,GAAeC,QAAtD;AAGA;AACA;;AACA,QAAMI,OAAO,GAAI7R,YAAY,CAAC2R,SAAD,CAAZ,GACbA,SADa,GAEbA,SAAS,CAACzK,aAFd;AAGA,QAAM4K,kBAAkB,GAAG,CAAC,CAACD,OAAO,CAACtQ,YAAR,CAAqB,uBAArB,CAA7B;AACA,QAAMwQ,KAAK,GAAI/R,YAAY,CAAC4R,OAAD,CAAZ,GACXA,OADW,GAEXA,OAAO,CAAC1K,aAFZ;AAGA,QAAM8K,gBAAgB,GAAG,CAAC,CAACD,KAAK,CAACxQ,YAAN,CAAmB,uBAAnB,CAA3B;AAEA2L,IAAAA,QAAQ,CAAC+E,QAAT,CAAkBN,SAAlB,EAA6BG,kBAAkB,GAAG,CAAH,GAAOxM,WAAtD;AACA4H,IAAAA,QAAQ,CAACgF,MAAT,CAAgBN,OAAhB,EAAyBI,gBAAgB,GAAG,CAAH,GAAO5M,SAAhD;AACA,WAAO8H,QAAP;AACD,GAnVwB;;AAqVzB;;;AAIArD,EAAAA,WAAW,CAAC7X,MAAD,EAAsByP,OAAtB;AACT,QAAI0Q,KAAK,GAAGnS,YAAY,CAACyB,OAAD,CAAZ,GAAwBA,OAAxB,GAAkCA,OAAO,CAACyF,aAAtD;;AAEA,QAAIiL,KAAK,IAAI,CAACA,KAAK,CAACvI,YAAN,CAAmB,iBAAnB,CAAd,EAAqD;AACnDuI,MAAAA,KAAK,GAAGA,KAAK,CAAChL,OAAN,qBAAR;AACD;;AAED,QAAMtP,IAAI,GAAGsa,KAAK,GAAGpe,eAAe,CAAC+E,GAAhB,CAAoBqZ,KAApB,CAAH,GAA+C,IAAjE;;AAEA,QAAI,CAACta,IAAL,EAAW;AACT,YAAM,IAAI2C,KAAJ,sDAAwD2X,KAAxD,EAAN;AACD;;AAED,WAAOta,IAAP;AACD,GAvWwB;;AAyWzB;;;AAIAwU,EAAAA,cAAc,CAACra,MAAD,EAAsB6L,KAAtB;AACZ,QAAI,iBAAiBA,KAArB,EAA4B;AAC1BA,MAAAA,KAAK,GAAGA,KAAK,CAAC4O,WAAd;AACD;;AAED,QAAM;AAAE2F,MAAAA,OAAO,EAAEC,CAAX;AAAcC,MAAAA,OAAO,EAAEC,CAAvB;AAA0B/L,MAAAA;AAA1B,QAAqC3I,KAA3C;;AAEA,QAAIwU,CAAC,IAAI,IAAL,IAAaE,CAAC,IAAI,IAAtB,EAA4B;AAC1B,YAAM,IAAI/X,KAAJ,0DAA4DqD,KAA5D,EAAN;AACD;;AAED,QAAMhG,IAAI,GAAG1F,WAAW,CAAC0X,WAAZ,CAAwB7X,MAAxB,EAAgC6L,KAAK,CAAC2I,MAAtC,CAAb;AACA,QAAMtU,IAAI,GAAGC,WAAW,CAACC,QAAZ,CAAqBJ,MAArB,EAA6B6F,IAA7B,CAAb;AAGA;AACA;;AACA,QAAI9E,MAAM,CAACR,MAAP,CAAcP,MAAd,EAAsB6F,IAAtB,CAAJ,EAAiC;AAC/B,UAAM2a,IAAI,GAAGhM,MAAM,CAAC4G,qBAAP,EAAb;AACA,UAAMqF,MAAM,GAAGzgB,MAAM,CAACc,QAAP,CAAgB+E,IAAhB,IACXwa,CAAC,GAAGG,IAAI,CAACE,IAAT,GAAgBF,IAAI,CAACE,IAAL,GAAYF,IAAI,CAAC3c,KAAjB,GAAyBwc,CAD9B,GAEXE,CAAC,GAAGC,IAAI,CAACG,GAAT,GAAeH,IAAI,CAACG,GAAL,GAAWH,IAAI,CAACxY,MAAhB,GAAyBuY,CAF5C;AAIA,UAAMzF,IAAI,GAAG/Z,MAAM,CAACyY,KAAP,CAAaxZ,MAAb,EAAqBE,IAArB,EAA2B;AACtC4a,QAAAA,IAAI,EAAE2F,MAAM,GAAG,OAAH,GAAa;AADa,OAA3B,CAAb;AAGA,UAAMjH,KAAK,GAAGiH,MAAM,GAChB1f,MAAM,CAAC6f,MAAP,CAAc5gB,MAAd,EAAsB8a,IAAtB,CADgB,GAEhB/Z,MAAM,CAAC0Y,KAAP,CAAazZ,MAAb,EAAqB8a,IAArB,CAFJ;;AAIA,UAAItB,KAAJ,EAAW;AACT,YAAMjU,MAAK,GAAGxE,MAAM,CAACwE,KAAP,CAAavF,MAAb,EAAqBwZ,KAArB,CAAd;;AACA,eAAOjU,MAAP;AACD;AACF;;;AAGD,QAAI2V,QAAJ;AACA,QAAM;AAAElc,MAAAA;AAAF,QAAemB,WAAW,CAACkV,SAAZ,CAAsBrV,MAAtB,CAArB;;AAGA,QAAIhB,QAAQ,CAAC6hB,mBAAb,EAAkC;AAChC3F,MAAAA,QAAQ,GAAGlc,QAAQ,CAAC6hB,mBAAT,CAA6BR,CAA7B,EAAgCE,CAAhC,CAAX;AACD,KAFD,MAEO;AACL,UAAM5c,QAAQ,GAAG3E,QAAQ,CAAC8hB,sBAAT,CAAgCT,CAAhC,EAAmCE,CAAnC,CAAjB;;AAEA,UAAI5c,QAAJ,EAAc;AACZuX,QAAAA,QAAQ,GAAGlc,QAAQ,CAAC0gB,WAAT,EAAX;AACAxE,QAAAA,QAAQ,CAAC+E,QAAT,CAAkBtc,QAAQ,CAACod,UAA3B,EAAuCpd,QAAQ,CAACgL,MAAhD;AACAuM,QAAAA,QAAQ,CAACgF,MAAT,CAAgBvc,QAAQ,CAACod,UAAzB,EAAqCpd,QAAQ,CAACgL,MAA9C;AACD;AACF;;AAED,QAAI,CAACuM,QAAL,EAAe;AACb,YAAM,IAAI1S,KAAJ,0DAA4DqD,KAA5D,EAAN;AACD;;;AAGD,QAAMtG,KAAK,GAAGpF,WAAW,CAACwS,YAAZ,CAAyB3S,MAAzB,EAAiCkb,QAAjC,EAA2C;AACvDtI,MAAAA,UAAU,EAAE,KAD2C;AAEvDC,MAAAA,aAAa,EAAE;AAFwC,KAA3C,CAAd;AAIA,WAAOtN,KAAP;AACD,GA5awB;;AA8azB;;;AAIAyb,EAAAA,YAAY,CACVhhB,MADU,EAEV0O,QAFU,EAGViQ,OAHU;AAQV,QAAM;AAAE/L,MAAAA,UAAF;AAAcC,MAAAA;AAAd,QAAgC8L,OAAtC;AACA,QAAM,CAACsC,WAAD,EAAcC,aAAd,IAA+BtO,UAAU,GAC3ClE,QAD2C,GAE3CD,iBAAiB,CAACC,QAAD,CAFrB;AAGA,QAAMyS,UAAU,GAAGF,WAAW,CAACE,UAA/B;AACA,QAAIC,QAAQ,GAAsB,IAAlC;AACA,QAAIzS,MAAM,GAAG,CAAb;;AAEA,QAAIwS,UAAJ,EAAgB;AAAA;;AACd,UAAMhe,QAAQ,GAAGhD,WAAW,CAACuT,SAAZ,CAAsB1T,MAAtB,EAA8BA,MAA9B,CAAjB;AACA,UAAMqhB,iBAAiB,GAAGF,UAAU,CAAChM,OAAX,CAAmB,0BAAnB,CAA1B,CAFc;AAId;AACA;AACA;;AACA,UAAMmM,QAAQ,GACZD,iBAAiB,IAAIle,QAAQ,CAACqP,QAAT,CAAkB6O,iBAAlB,CAArB,GACIA,iBADJ,GAEI,IAHN;AAIA,UAAIE,QAAQ,GAAGJ,UAAU,CAAChM,OAAX,CAAmB,mBAAnB,CAAf;AACA,UAAI1F,OAAO,GAAsB,IAAjC,CAZc;AAed;;AACA,UAAI8R,QAAJ,EAAc;AACZH,QAAAA,QAAQ,GAAGG,QAAQ,CAACpM,OAAT,CAAiB,0BAAjB,CAAX;;AAEA,YAAIiM,QAAJ,EAAc;AACZ,cAAMpjB,MAAM,GAAGmC,WAAW,CAACkV,SAAZ,CAAsBrV,MAAtB,CAAf;AACA,cAAMuF,KAAK,GAAGvH,MAAM,CAACgB,QAAP,CAAgB0gB,WAAhB,EAAd;AACAna,UAAAA,KAAK,CAAC0a,QAAN,CAAemB,QAAf,EAAyB,CAAzB;AACA7b,UAAAA,KAAK,CAAC2a,MAAN,CAAae,WAAb,EAA0BC,aAA1B;AAEA,cAAMM,QAAQ,GAAGjc,KAAK,CAACkc,aAAN,EAAjB;AACA,cAAMC,QAAQ,GAAG,CACf,GAAG9R,KAAK,CAACvQ,SAAN,CAAgB4B,KAAhB,CAAsB0gB,IAAtB,CACDH,QAAQ,CAACnC,gBAAT,CAA0B,yBAA1B,CADC,CADY,EAIf,GAAGzP,KAAK,CAACvQ,SAAN,CAAgB4B,KAAhB,CAAsB0gB,IAAtB,CACDH,QAAQ,CAACnC,gBAAT,CAA0B,yBAA1B,CADC,CAJY,CAAjB;AASAqC,UAAAA,QAAQ,CAACjR,OAAT,CAAiBgD,EAAE;AACjBA,YAAAA,EAAG,CAAC0N,UAAJ,CAAgBS,WAAhB,CAA4BnO,EAA5B;AACD,WAFD,EAhBY;AAqBZ;AACA;AACA;AACA;;AACA9E,UAAAA,MAAM,GAAG6S,QAAQ,CAAC/f,WAAT,CAAsBhB,MAA/B;AACAgP,UAAAA,OAAO,GAAG2R,QAAV;AACD;AACF,OA/BD,MA+BO,IAAIE,QAAJ,EAAc;AACnB;AACA;AACAC,QAAAA,QAAQ,GAAGD,QAAQ,CAACle,aAAT,CAAuB,mBAAvB,CAAX,CAHmB;;AAMnB,YAAI,CAACme,QAAL,EAAe;AACb5S,UAAAA,MAAM,GAAG,CAAT;AACD,SAFD,MAEO;AACLyS,UAAAA,QAAQ,GAAGG,QAAQ,CAACpM,OAAT,CAAiB,0BAAjB,CAAX;AACA1F,UAAAA,OAAO,GAAG8R,QAAV;AACA5S,UAAAA,MAAM,GAAGc,OAAO,CAAChO,WAAR,CAAqBhB,MAA9B;AACAgP,UAAAA,OAAO,CAAC4P,gBAAR,CAAyB,yBAAzB,EAAoD5O,OAApD,CAA4DgD,EAAE;AAC5D9E,YAAAA,MAAM,IAAI8E,EAAE,CAAChS,WAAH,CAAgBhB,MAA1B;AACD,WAFD;AAGD;AACF;;AAED,UACEgP,OAAO,IACPd,MAAM,KAAKc,OAAO,CAAChO,WAAR,CAAqBhB,MADhC,KAOC0gB,UAAU,CAACvJ,YAAX,CAAwB,uBAAxB,KAIEtZ,UAAU,4BAAImR,OAAO,CAAChO,WAAZ,iDAAI,qBAAqBwU,QAArB,CAA8B,MAA9B,CAXjB,CADF,EAaE;AACAtH,QAAAA,MAAM;AACP;AACF;;AAED,QAAI,CAACyS,QAAL,EAAe;AACb,UAAIvO,aAAJ,EAAmB;AACjB,eAAO,IAAP;AACD;;AACD,YAAM,IAAIrK,KAAJ,wDAC4CkG,QAD5C,EAAN;AAGD;AAGD;AACA;;;AACA,QAAM+M,SAAS,GAAGtb,WAAW,CAAC0X,WAAZ,CAAwB7X,MAAxB,EAAgCohB,QAAhC,CAAlB;AACA,QAAMlhB,IAAI,GAAGC,WAAW,CAACC,QAAZ,CAAqBJ,MAArB,EAA6Byb,SAA7B,CAAb;AACA,WAAO;AAAEvb,MAAAA,IAAF;AAAQyO,MAAAA;AAAR,KAAP;AACD,GApiBwB;;AAsiBzB;;;AAIAgE,EAAAA,YAAY,CACV3S,MADU,EAEVkb,QAFU,EAGVyD,OAHU;AAQV,QAAM;AAAE/L,MAAAA,UAAF;AAAcC,MAAAA;AAAd,QAAgC8L,OAAtC;AACA,QAAMlL,EAAE,GAAGxF,cAAc,CAACiN,QAAD,CAAd,GACPA,QAAQ,CAAChN,UADF,GAEPgN,QAAQ,CAAC7H,cAFb;AAGA,QAAInF,UAAJ;AACA,QAAI2T,YAAJ;AACA,QAAIpP,SAAJ;AACA,QAAIqP,WAAJ;AACA,QAAIhN,WAAJ;;AAEA,QAAIrB,EAAJ,EAAQ;AACN,UAAIxF,cAAc,CAACiN,QAAD,CAAlB,EAA8B;AAC5BhN,QAAAA,UAAU,GAAGgN,QAAQ,CAAChN,UAAtB;AACA2T,QAAAA,YAAY,GAAG3G,QAAQ,CAAC2G,YAAxB;AACApP,QAAAA,SAAS,GAAGyI,QAAQ,CAACzI,SAArB;AACAqP,QAAAA,WAAW,GAAG5G,QAAQ,CAAC4G,WAAvB,CAJ4B;AAM5B;AACA;AACA;;AACA,YAAIrjB,SAAS,IAAIuQ,aAAa,EAA9B,EAAkC;AAChC8F,UAAAA,WAAW,GACToG,QAAQ,CAAChN,UAAT,KAAwBgN,QAAQ,CAACzI,SAAjC,IACAyI,QAAQ,CAAC2G,YAAT,KAA0B3G,QAAQ,CAAC4G,WAFrC;AAGD,SAJD,MAIO;AACLhN,UAAAA,WAAW,GAAGoG,QAAQ,CAACpG,WAAvB;AACD;AACF,OAhBD,MAgBO;AACL5G,QAAAA,UAAU,GAAGgN,QAAQ,CAAC7H,cAAtB;AACAwO,QAAAA,YAAY,GAAG3G,QAAQ,CAAC5H,WAAxB;AACAb,QAAAA,SAAS,GAAGyI,QAAQ,CAAC/H,YAArB;AACA2O,QAAAA,WAAW,GAAG5G,QAAQ,CAAC9H,SAAvB;AACA0B,QAAAA,WAAW,GAAGoG,QAAQ,CAAC6G,SAAvB;AACD;AACF;;AAED,QACE7T,UAAU,IAAI,IAAd,IACAuE,SAAS,IAAI,IADb,IAEAoP,YAAY,IAAI,IAFhB,IAGAC,WAAW,IAAI,IAJjB,EAKE;AACA,YAAM,IAAItZ,KAAJ,wDAC4C0S,QAD5C,EAAN;AAGD;;AAED,QAAMnG,MAAM,GAAG5U,WAAW,CAAC6gB,YAAZ,CACbhhB,MADa,EAEb,CAACkO,UAAD,EAAa2T,YAAb,CAFa,EAGb;AAAEjP,MAAAA,UAAF;AAAcC,MAAAA;AAAd,KAHa,CAAf;;AAKA,QAAI,CAACkC,MAAL,EAAa;AACX,aAAO,IAAP;AACD;;AAED,QAAMpB,KAAK,GAAGmB,WAAW,GACrBC,MADqB,GAErB5U,WAAW,CAAC6gB,YAAZ,CAAyBhhB,MAAzB,EAAiC,CAACyS,SAAD,EAAYqP,WAAZ,CAAjC,EAA2D;AACzDlP,MAAAA,UADyD;AAEzDC,MAAAA;AAFyD,KAA3D,CAFJ;;AAMA,QAAI,CAACc,KAAL,EAAY;AACV,aAAO,IAAP;AACD;;AAED,QAAIpO,KAAK,GAAU;AAAEwP,MAAAA,MAAM,EAAEA,MAAV;AAA2BpB,MAAAA,KAAK,EAAEA;AAAlC,KAAnB;AAEA;AACA;AACA;;AACA,QACEhO,KAAK,CAACqQ,UAAN,CAAiBzQ,KAAjB,KACAI,KAAK,CAACqc,SAAN,CAAgBzc,KAAhB,CADA,IAEAyI,YAAY,CAACyE,SAAD,CAFZ,IAGA1R,MAAM,CAAC0X,IAAP,CAAYzY,MAAZ,EAAoB;AAAEsY,MAAAA,EAAE,EAAE/S,KAAK,CAACoO,KAAZ;AAAmB0F,MAAAA,IAAI,EAAE;AAAzB,KAApB,CAJF,EAKE;AACA9T,MAAAA,KAAK,GAAGxE,MAAM,CAACkhB,WAAP,CAAmBjiB,MAAnB,EAA2BuF,KAA3B,EAAkC;AAAE2U,QAAAA,KAAK,EAAE;AAAT,OAAlC,CAAR;AACD;;AAED,WAAQ3U,KAAR;AACD,GAnoBwB;;AAqoBzBuN,EAAAA,QAAQ,CAAC9S,MAAD,EAAsBuF,KAAtB;AACN,QAAM;AAAEwP,MAAAA,MAAF;AAAUpB,MAAAA;AAAV,QAAoBpO,KAA1B;AACA,WACExE,MAAM,CAACiX,OAAP,CAAehY,MAAf,EAAuB+U,MAAM,CAAC7U,IAA9B,KAAuCa,MAAM,CAACiX,OAAP,CAAehY,MAAf,EAAuB2T,KAAK,CAACzT,IAA7B,CADzC;AAGD;;AA1oBwB;;SC7BXgiB,mBACdliB,QACAmiB;AAEA,MAAMC,UAAU,GAAc,EAA9B;AACA,MAAMC,YAAY,GAAc,EAAhC;AACA,MAAMrF,YAAY,GAAoB,EAAtC;AACA,MAAMsF,sBAAsB,GAAqB,EAAjD;AAEAH,EAAAA,SAAS,CAAC1R,OAAV,CAAkB8R,QAAQ;AACxB,YAAQA,QAAQ,CAAC7R,IAAjB;AACE,WAAK,WAAL;AAAkB;AAChB,cAAI6R,QAAQ,CAACH,UAAT,CAAoB3hB,MAAxB,EAAgC;AAC9B8hB,YAAAA,QAAQ,CAACH,UAAT,CAAoB3R,OAApB,CAA4B+R,SAAS;AACnCJ,cAAAA,UAAU,CAACzb,IAAX,CAAgB6b,SAAhB;AACD,aAFD;AAGD;;AAEDD,UAAAA,QAAQ,CAACF,YAAT,CAAsB5R,OAAtB,CAA8BgS,WAAW;AACvCJ,YAAAA,YAAY,CAAC1b,IAAb,CAAkB8b,WAAlB;AACD,WAFD;AAIA;AACD;;AACD,WAAK,eAAL;AAAsB;AACpBH,UAAAA,sBAAsB,CAAC3b,IAAvB,CAA4B4b,QAA5B,EADoB;;AAIpB,cAAM;AAAEpB,YAAAA;AAAF,cAAiBoB,QAAQ,CAAC/N,MAAhC;;AAEA,cAAI,CAAC2M,UAAL,EAAiB;AACf;AACD;;AAED,cAAMuB,aAAa,GAAGvF,gBAAgB,CAACnd,MAAD,EAASmhB,UAAT,CAAtC;;AAEA,cAAI,CAACuB,aAAL,EAAoB;AAClB;AACD,WAdmB;;;AAiBpB,cACE1F,YAAY,CAAC2F,IAAb,CAAkB;AAAA,gBAAC;AAAEziB,cAAAA;AAAF,aAAD;AAAA,mBAAcI,IAAI,CAACoE,MAAL,CAAYxE,IAAZ,EAAkBwiB,aAAa,CAACxiB,IAAhC,CAAd;AAAA,WAAlB,CADF,EAEE;AACA;AACD,WArBmB;;;AAwBpB8c,UAAAA,YAAY,CAACrW,IAAb,CAAkB+b,aAAlB;AACD;AAvCH;AAyCD,GA1CD;AA4CA,SAAO;AAAEN,IAAAA,UAAF;AAAcC,IAAAA,YAAd;AAA4BrF,IAAAA,YAA5B;AAA0CsF,IAAAA;AAA1C,GAAP;AACD;AAED;;;;;;;;;;AASO,IAAMthB,WAAW,GAAsB,CAAChB,MAAD;MAAS;AAAEoiB,IAAAA;AAAF;AACrD,MAAM;AAAE7a,IAAAA;AAAF,MAAgBvH,MAAtB;AACA,MAAMmhB,UAAU,GAAG5Z,SAAS,GACxB7G,IAAI,CAACZ,MAAL,CAAYE,MAAZ,EAAoBuH,SAAS,CAACwN,MAAV,CAAiB7U,IAArC,CADwB,GAExB,IAFJ;AAGA,MAAM0iB,aAAa,GAAGzB,UAAU,GAC5BhhB,WAAW,CAACuT,SAAZ,CAAsB1T,MAAtB,EAA8BmhB,UAA9B,CAD4B,GAE5B,IAFJ;;AAIA,MAAI,CAACyB,aAAL,EAAoB;AAClB,WAAO,KAAP;AACD;;AAED,SAAOR,UAAU,CAACO,IAAX,CACLH,SAAS,IACPA,SAAS,YAAYK,WAArB,IACAL,SAAS,CAACxS,OAAV,MAAsB4S,aAAtB,aAAsBA,aAAtB,uBAAsBA,aAAa,CAAE5S,OAArC,CAHG,CAAP;AAKD,CAlBM;AAoBP;;;;;;AAKO,IAAM8S,UAAU,GAAsB,CAACC,CAAD;MAAI;AAAEV,IAAAA;AAAF;AAC/C,SAAOA,YAAY,CAAC5hB,MAAb,GAAsB,CAA7B;AACD,CAFM;AAIP;;;;;AAIO,IAAMuiB,0BAA0B,GAAsB;MAC3D;AAAEzb,IAAAA;AAAF;MACA;AAAE8a,IAAAA;AAAF;AAEA,SAAO9a,SAAS,GACZ5B,KAAK,CAACqQ,UAAN,CAAiBzO,SAAjB,KAA+B8a,YAAY,CAAC5hB,MAAb,GAAsB,CADzC,GAEZ,KAFJ;AAGD,CAPM;AASP;;;;AAGO,IAAMwiB,eAAe,GAAsB,CAACF,CAAD;MAAI;AAAE/F,IAAAA;AAAF;AACpD,SAAOA,YAAY,CAACvc,MAAb,GAAsB,CAA7B;AACD,CAFM;AAIP;;;;AAGO,IAAMyiB,iBAAiB,GAAsB,CAClDH,CADkD;MAElD;AAAEX,IAAAA,UAAF;AAAcE,IAAAA,sBAAd;AAAsCD,IAAAA;AAAtC;AAEA,SACEA,YAAY,CAAC5hB,MAAb,GAAsB,CAAtB,IACA2hB,UAAU,CAAC3hB,MAAX,KAAsB,CADtB,IAEA6hB,sBAAsB,CAAC7hB,MAAvB,GAAgC,CAHlC;AAKD,CATM;;AC1GP;;;;;;;;;;;;;;;;;;;;;;;;;MAwBa0iB;AACX9M,EAAAA,YAAoBrW,QAA6BojB;AAA7B,eAAA,GAAApjB,MAAA;AAA6B,mBAAA,GAAAojB,UAAA;AAKjD;;;;;;AAMA,cAAA,GAASjB,SAAD;;AAGN,UAAI;AACF,aAAKkB,kBAAL,CAAwBlB,SAAxB;AACD,OAFD,CAEE,OAAOtD,GAAP,EAAY;AACZ;AACAyE,QAAAA,OAAO,CAACC,KAAR,CAAc1E,GAAd,EAFY;;AAKZ,aAAKuE,UAAL;AACD;AACF,KAZD;AAcA;;;;;;;AAMQ,2BAAA,GAAsBjB,SAAD;AAC3B,UAAMqB,YAAY,GAAGtB,kBAAkB,CAAC,KAAKliB,MAAN,EAAcmiB,SAAd,CAAvC;AACA,UAAM;AAAEnF,QAAAA,YAAF;AAAgBqF,QAAAA;AAAhB,UAAiCmB,YAAvC;;AAIA,UAAIR,0BAA0B,CAAC,KAAKhjB,MAAN,EAAcwjB,YAAd,CAA9B,EAA2D;AACzD,YAAMzjB,IAAI,GAAGgd,mBAAmB,CAACC,YAAD,CAAhC;AACA,aAAKyG,wBAAL,CAA8B1jB,IAA9B;AACD,OAHD,MAGO,IAAIiB,WAAW,CAAC,KAAKhB,MAAN,EAAcwjB,YAAd,CAAf,EAA4C;AACjD,aAAKpN,WAAL;AACD,OAFM,MAEA,IAAI8M,iBAAiB,CAAC,KAAKljB,MAAN,EAAcwjB,YAAd,CAArB,EAAkD;AACvD,aAAKE,eAAL,CAAqBrB,YAArB;AACD,OAFM,MAEA,IAAIS,UAAU,CAAC,KAAK9iB,MAAN,EAAcwjB,YAAd,CAAd,EAA2C;AAChD,aAAKvZ,cAAL;AACD,OAFM,MAEA,IAAIgZ,eAAe,CAAC,KAAKjjB,MAAN,EAAcwjB,YAAd,CAAnB,EAAgD;AACrD,aAAKhN,UAAL,CAAgBwG,YAAhB;AACD;AACF,KAlBO;AAoBR;;;;;AAIQ,mBAAA,GAAcA,YAAD;AAGnB,UAAM;AAAEzV,QAAAA;AAAF,UAAgB,KAAKvH,MAA3B;AAGA;;AACA,UACEG,WAAW,CAACqR,WAAZ,CAAwB,KAAKxR,MAA7B,KACAsC,qBAAqB,CAACwE,GAAtB,CAA0B,KAAK9G,MAA/B,CAFF,EAGE;AACAwC,QAAAA,0BAA0B,CAAC0D,GAA3B,CAA+B,KAAKlG,MAApC,EAA4Cgd,YAA5C;AACA1a,QAAAA,qBAAqB,CAAC4D,GAAtB,CAA0B,KAAKlG,MAA/B,EAAuC,KAAvC;AACA;AACD;;;AAGDgd,MAAAA,YAAY,CAACvM,OAAb,CAAqBkT,SAAS;AAC5B,YAAM5jB,IAAI,GAAG4jB,SAAS,CAAC5jB,IAAV,CAAeyW,UAA5B;AACA,YAAM8B,EAAE,GAAGmF,2BAA2B,CAAC,KAAKzd,MAAN,EAAcuH,SAAd,EAAyBoc,SAAzB,CAAtC;AACA5P,QAAAA,UAAU,CAAC2F,YAAX,CAAwB,KAAK1Z,MAA7B,EAAqCsY,EAArC;AACAvX,QAAAA,MAAM,CAACyV,UAAP,CAAkB,KAAKxW,MAAvB,EAA+BD,IAA/B;AACD,OALD;AAMD,KAvBO;AAyBR;;;;;AAIQ,oBAAA,GAAc;AAGpB,UAAM;AAAEwH,QAAAA;AAAF,UAAgB,KAAKvH,MAA3B;AAEAe,MAAAA,MAAM,CAACqV,WAAP,CAAmB,KAAKpW,MAAxB;AAEA,WAAKojB,UAAL;;AAEA,UAAI7b,SAAJ,EAAe;AACb;AACAiM,QAAAA,UAAU,CAAC;AACT,cACE,KAAKxT,MAAL,CAAYuH,SAAZ,IACA5B,KAAK,CAACjB,MAAN,CAAa6C,SAAb,EAAwB,KAAKvH,MAAL,CAAYuH,SAApC,CAFF,EAGE;AACAwM,YAAAA,UAAU,CAAC8G,IAAX,CAAgB,KAAK7a,MAArB;AACD;AACF,SAPS,EAOP,GAPO,CAAV;AAQD;AACF,KApBO;AAsBR;;;;;AAIQ,iCAAA,GAA4BD,IAAD;;AAIjCgB,MAAAA,MAAM,CAACmV,cAAP,CAAsB,KAAKlW,MAA3B;;AAEA,UAAID,IAAI,CAACU,MAAT,EAAiB;AACf;AACAM,QAAAA,MAAM,CAACyV,UAAP,CAAkB,KAAKxW,MAAvB,EAA+BD,IAA/B;AACD;;AAED,WAAKqjB,UAAL;AACD,KAZO;AAcR;;;;;AAIQ,uBAAA,GAAiB;AAGvBriB,MAAAA,MAAM,CAACkJ,cAAP,CAAsB,KAAKjK,MAA3B;AACAG,MAAAA,WAAW,CAACwT,KAAZ,CAAkB,KAAK3T,MAAvB;AAEA,WAAKojB,UAAL;AACD,KAPO;AASR;;;;;AAGQ,wBAAA,GAAmBxF,KAAD;AACxB,WAAK,IAAM/X,IAAX,IAAmB+X,KAAnB,EAA0B;AACxB,YAAMnC,SAAS,GAAGtb,WAAW,CAAC0X,WAAZ,CAAwB,KAAK7X,MAA7B,EAAqC6F,IAArC,CAAlB;;AAEA,YAAI4V,SAAJ,EAAe;AACb,cAAMvb,IAAI,GAAGC,WAAW,CAACC,QAAZ,CAAqB,KAAKJ,MAA1B,EAAkCyb,SAAlC,CAAb;AAEA1H,UAAAA,UAAU,CAAC1N,MAAX,CAAkB,KAAKrG,MAAvB,EAA+B;AAAEsY,YAAAA,EAAE,EAAEpY;AAAN,WAA/B;AACA,eAAKkjB,UAAL;AACD;AACF;AACF,KAXO;;AA3IN,SAAKpjB,MAAL,GAAcA,MAAd;AACA,SAAKojB,UAAL,GAAkBA,UAAlB;AACD;;;;SCnDaQ,oBACd/d,MACAge,UACAlF;AAEA,MAAM,CAACmF,gBAAD,IAAqB7d,QAAQ,CAAC,MAAM,IAAI8d,gBAAJ,CAAqBF,QAArB,CAAP,CAAnC;AAEAtkB,EAAAA,yBAAyB,CAAC;AACxB;AACAukB,IAAAA,gBAAgB,CAACE,UAAjB;AACD,GAHwB,CAAzB;AAKAvkB,EAAAA,SAAS,CAAC;AACR,QAAI,CAACoG,IAAI,CAACrE,OAAV,EAAmB;AACjB,YAAM,IAAIgH,KAAJ,CAAU,wDAAV,CAAN;AACD;;;AAGDsb,IAAAA,gBAAgB,CAACG,OAAjB,CAAyBpe,IAAI,CAACrE,OAA9B,EAAuCmd,OAAvC;;AAGA,WAAOmF,gBAAgB,CAACE,UAAjB,CAA4B3I,IAA5B,CAAiCyI,gBAAjC,CAAP;AACD,GAVQ,CAAT;AAWD;;ACnBD,IAAMI,0BAAwB,GAAyB;AACrDC,EAAAA,SAAS,EAAE,IAD0C;AAErDC,EAAAA,aAAa,EAAE,IAFsC;AAGrDC,EAAAA,OAAO,EAAE;AAH4C,CAAvD;;AAMA,SAASC,wBAAT,CAAkC7U,OAAlC;;;AACE,MAAI0Q,KAAK,GAAGnS,YAAY,CAACyB,OAAD,CAAZ,GAAwBA,OAAxB,GAAkCA,OAAO,CAACyF,aAAtD;;AAEA,MAAIiL,KAAK,IAAI,CAACA,KAAK,CAACvI,YAAN,CAAmB,iBAAnB,CAAd,EAAqD;AACnDuI,IAAAA,KAAK,GAAGA,KAAK,CAAChL,OAAN,qBAAR;AACD;;AAED,MAAMsG,SAAS,GAAG0E,KAAK,IAAIpe,eAAe,CAAC+E,GAAhB,CAAoBqZ,KAApB,CAA3B;;AACA,MAAI1E,SAAJ,EAAe;AACb,WAAOA,SAAP;AACD;AAGD;;;AACA,SAAO,UAAA0E,KAAK,UAAL,gCAAOjL,aAAP,GACHoP,wBAAwB,CAACnE,KAAK,CAACjL,aAAP,CADrB,GAEH,IAFJ;AAGD;;SAEeqP,cACd1e,MACA2e;AAEA,MAAMxkB,MAAM,GAAGC,cAAc,EAA7B;AACA,MAAMwkB,YAAY,GAAGpjB,MAAM,CAAiB,IAAIqjB,GAAJ,EAAjB,CAA3B;AAEA,MAAMC,iBAAiB,GAAG9Q,WAAW,CAAEsO,SAAD;AACpC,QAAI,CAACqC,iBAAiB,CAAChjB,OAAvB,EAAgC;AAC9B;AACD;;AAED2gB,IAAAA,SAAS,CAAC1R,OAAV,CAAkB;UAAC;AAAE+D,QAAAA;AAAF;AACjB,UAAMiH,SAAS,GAAG6I,wBAAwB,CAAC9P,MAAD,CAA1C;;AACA,UAAI,CAACiH,SAAL,EAAgB;AACd;AACD;;AAED,aAAOgJ,YAAY,CAACjjB,OAAb,CAAqBojB,GAArB,CAAyBnJ,SAAzB,CAAP;AACD,KAPD;AAQD,GAboC,EAalC,EAbkC,CAArC;AAeAmI,EAAAA,mBAAmB,CAAC/d,IAAD,EAAO8e,iBAAP,EAA0BT,0BAA1B,CAAnB;;AAGAO,EAAAA,YAAY,CAACjjB,OAAb,CAAqBqjB,KAArB;AACA,MAAMC,OAAO,GAAGjR,WAAW,CAAC;AAC1B,QAAMkR,OAAO,GAAGnV,KAAK,CAACC,IAAN,CAAW4U,YAAY,CAACjjB,OAAb,CAAqBwjB,MAArB,EAAX,CAAhB;;AAGA,QAAMC,cAAc,GAAGF,OAAO,CAACG,MAAR,CACrBjc,CAAC,IACC,CAAC8b,OAAO,CAACpC,IAAR,CAAawC,CAAC,IACb7kB,IAAI,CAAC8kB,QAAL,CACEjlB,WAAW,CAACC,QAAZ,CAAqBJ,MAArB,EAA6BmlB,CAA7B,CADF,EAEEhlB,WAAW,CAACC,QAAZ,CAAqBJ,MAArB,EAA6BiJ,CAA7B,CAFF,CADD,CAFkB,CAAvB;AAUAgc,IAAAA,cAAc,CAACxU,OAAf,CAAuBxH,CAAC;;;AACtB,+BAAAvG,mBAAmB,CAACoE,GAApB,CAAwBmC,CAAxB;AACD,KAFD;AAIAwb,IAAAA,YAAY,CAACjjB,OAAb,CAAqBqjB,KAArB;AACD,GAnB0B,EAmBxB,EAnBwB,CAA3B;AAqBA,SAAOC,OAAP;AACD;;SC3EeO;AACd,MAAMrlB,MAAM,GAAGC,cAAc,EAA7B;AACA,MAAMukB,iBAAiB,GAAGnjB,MAAM,CAAU,KAAV,CAAhC;AACA,MAAMikB,iBAAiB,GAAGjkB,MAAM,CAAgB,IAAhB,CAAhC;AACA,MAAMkkB,WAAW,GAAG1R,WAAW,CAAC;AAC9B,QAAI2Q,iBAAiB,CAAChjB,OAAlB,KAA8B,KAAlC,EAAyC;AACvC,UAAMxD,MAAM,GAAGmC,WAAW,CAACkV,SAAZ,CAAsBrV,MAAtB,CAAf;AAEAwkB,MAAAA,iBAAiB,CAAChjB,OAAlB,GAA4B,IAA5B;;AAEA,UAAI8jB,iBAAiB,CAAC9jB,OAAtB,EAA+B;AAC7BxD,QAAAA,MAAM,CAACsI,oBAAP,CAA4Bgf,iBAAiB,CAAC9jB,OAA9C;AACD;;AAED8jB,MAAAA,iBAAiB,CAAC9jB,OAAlB,GAA4BxD,MAAM,CAACmI,qBAAP,CAA6B;AACvDqe,QAAAA,iBAAiB,CAAChjB,OAAlB,GAA4B,KAA5B;AACA8jB,QAAAA,iBAAiB,CAAC9jB,OAAlB,GAA4B,IAA5B;AACD,OAH2B,CAA5B;AAID;AACF,GAf8B,EAe5B,EAf4B,CAA/B;AAiBA/B,EAAAA,SAAS,CAAC;AACR;AACA,QAAI+kB,iBAAiB,CAAChjB,OAAtB,EAA+B;AAC7BgjB,MAAAA,iBAAiB,CAAChjB,OAAlB,GAA4B,KAA5B;AACD;AACF,GALQ,CAAT;AAOA,SAAO;AACLgjB,IAAAA,iBADK;AAELe,IAAAA;AAFK,GAAP;AAID;;AC5BD,IAAMrB,wBAAwB,GAAyB;AACrDC,EAAAA,SAAS,EAAE,IAD0C;AAErDC,EAAAA,aAAa,EAAE,IAFsC;AAGrDoB,EAAAA,qBAAqB,EAAE,IAH8B;AAIrDnB,EAAAA,OAAO,EAAE;AAJ4C,CAAvD;SAOgBoB,uBAAuB5f;AACrC,MAAM7F,MAAM,GAAGC,cAAc,EAA7B;AAEA,MAAM;AAAEukB,IAAAA,iBAAF;AAAqBe,IAAAA;AAArB,MAAqCF,iBAAiB,EAA5D;AACA,MAAMK,UAAU,GAAGnB,aAAa,CAAC1e,IAAD,EAAO2e,iBAAP,CAAhC;AAEA,MAAMmB,YAAY,GAAGhU,OAAO,CAC1B,MAAM,IAAIwR,mBAAJ,CAAwBnjB,MAAxB,EAAgC0lB,UAAhC,CADoB,EAE1B,CAACA,UAAD,EAAa1lB,MAAb,CAF0B,CAA5B;AAKA,MAAM4lB,SAAS,GAAGvkB,MAAM,CAAuC,IAAvC,CAAxB;AACA,MAAMwkB,aAAa,GAAGxkB,MAAM,CAAC,KAAD,CAA5B;AACA,MAAMqT,KAAK,GAAGb,WAAW,CAAEsO,SAAD;AACxB,QAAI,CAACqC,iBAAiB,CAAChjB,OAAvB,EAAgC;AAC9B;AACD;;AAEDqkB,IAAAA,aAAa,CAACrkB,OAAd,GAAwB,IAAxB;AACAmkB,IAAAA,YAAY,CAACjR,KAAb,CAAmByN,SAAnB;;AAEA,QAAIyD,SAAS,CAACpkB,OAAd,EAAuB;AACrBskB,MAAAA,YAAY,CAACF,SAAS,CAACpkB,OAAX,CAAZ;AACD;;AAEDokB,IAAAA,SAAS,CAACpkB,OAAV,GAAoBgS,UAAU,CAAC;AAC7BqS,MAAAA,aAAa,CAACrkB,OAAd,GAAwB,KAAxB;AACAokB,MAAAA,SAAS,CAACpkB,OAAV,GAAoB,IAApB;AACD,KAH6B,EAG3B,GAH2B,CAA9B;AAID,GAhBwB,EAgBtB,EAhBsB,CAAzB;AAkBAoiB,EAAAA,mBAAmB,CAAC/d,IAAD,EAAO6O,KAAP,EAAcwP,wBAAd,CAAnB;AAEA,SAAO;AACL2B,IAAAA,aADK;AAELN,IAAAA;AAFK,GAAP;AAID;;;;;;;ACRD;;;AAIA;AACA;;AACA,IAAMQ,aAAa,GAAG,EAAtB;IAEaC,eAAe,GAAIrmB,KAAD;AAC7B,MAAM;AACJoR,IAAAA,SADI;AAEJlI,IAAAA,QAAQ,GAAGmI,eAFP;AAGJC,IAAAA,gBAAgB,EAAEC,qBAHd;AAIJzN,IAAAA,WAJI;AAKJ+D,IAAAA,QAAQ,GAAG,KALP;AAMJJ,IAAAA,aANI;AAOJrE,IAAAA,UAPI;AAQJD,IAAAA,iBAAiB,GAAGnD,KAAK,iBAAIhC,mBAAA,CAACwT,kBAAD,oBAAwBxR,MAAxB,CARzB;AASJ0D,IAAAA,KAAK,GAAG,EATJ;AAUJiO,IAAAA,EAAE,EAAEC,SAAS,GAAG;AAVZ,MAYF5R,KAZJ;AAAA,MAWK+D,UAXL,4BAYI/D,KAZJ;;AAaA,MAAMK,MAAM,GAAGwN,QAAQ,EAAvB;;AAEA,MAAM,CAACgE,WAAD,EAAcC,cAAd,IAAgCxL,QAAQ,CAAC,KAAD,CAA9C;AACA,MAAM7E,GAAG,GAAGC,MAAM,CAAiB,IAAjB,CAAlB;AACA,MAAMskB,YAAY,GAAGF,sBAAsB,CAACrkB,GAAD,CAA3C;;AAGAe,EAAAA,YAAY,CAAC+D,GAAb,CAAiBlG,MAAjB,EAAyBwH,QAAzB;;AAGA,MAAMpB,KAAK,GAAGuL,OAAO,CACnB,OAAO;AACLH,IAAAA,WAAW,EAAE,KADR;AAELM,IAAAA,mBAAmB,EAAE,KAFhB;AAGLC,IAAAA,aAAa,EAAE;AAHV,GAAP,CADmB,EAMnB,EANmB,CAArB;AASA,MAAMhL,UAAU,GAAGnB,aAAa,CAAC5F,MAAD,CAAhC;;AAGAT,EAAAA,yBAAyB,CAAC;AACxB;AACA,QAAIvB,MAAJ;;AAEA,QAAIoD,GAAG,CAACI,OAAJ,KAAgBxD,MAAM,GAAG0P,cAAc,CAACtM,GAAG,CAACI,OAAL,CAAvC,CAAJ,EAA2D;AACzDK,MAAAA,gBAAgB,CAACqE,GAAjB,CAAqBlG,MAArB,EAA6BhC,MAA7B;AACA8D,MAAAA,iBAAiB,CAACoE,GAAlB,CAAsBlG,MAAtB,EAA8BoB,GAAG,CAACI,OAAlC;AACAQ,MAAAA,eAAe,CAACkE,GAAhB,CAAoBlG,MAApB,EAA4BoB,GAAG,CAACI,OAAhC;AACAO,MAAAA,eAAe,CAACmE,GAAhB,CAAoB9E,GAAG,CAACI,OAAxB,EAAiCxB,MAAjC;AACD,KALD,MAKO;AACLgC,MAAAA,eAAe,CAACqE,MAAhB,CAAuBrG,MAAvB;AACD;;AAED,QAAI;AACF;AACA,UAAM;AAAEuH,QAAAA;AAAF,UAAgBvH,MAAtB;AACA,UAAMgS,IAAI,GAAG7R,WAAW,CAAC8R,wBAAZ,CAAqCjS,MAArC,CAAb;AACA,UAAMkS,YAAY,GAAGF,IAAI,CAACG,YAAL,EAArB;;AAEA,UACE/L,KAAK,CAACoL,WAAN,IACA,CAACU,YADD,IAEA,CAAC/R,WAAW,CAACiS,SAAZ,CAAsBpS,MAAtB,CAHH,EAIE;AACA;AACD;;AAED,UAAMqS,eAAe,GAAGH,YAAY,CAACxB,IAAb,KAAsB,MAA9C,CAdE;;AAiBF,UAAI,CAACnJ,SAAD,IAAc,CAAC8K,eAAnB,EAAoC;AAClC;AACD,OAnBC;;;AAsBF,UAAMC,aAAa,GAAGxQ,iBAAiB,CAACgF,GAAlB,CAAsB9G,MAAtB,CAAtB;AACA,UAAIuS,uBAAuB,GAAG,KAA9B;;AACA,UACED,aAAa,CAACE,QAAd,CAAuBN,YAAY,CAAChE,UAApC,KACAoE,aAAa,CAACE,QAAd,CAAuBN,YAAY,CAACO,SAApC,CAFF,EAGE;AACAF,QAAAA,uBAAuB,GAAG,IAA1B;AACD,OA7BC;;;AAgCF,UAAIF,eAAe,IAAIE,uBAAnB,IAA8ChL,SAAlD,EAA6D;AAC3D,YAAMmL,UAAU,GAAGvS,WAAW,CAACwS,YAAZ,CAAyB3S,MAAzB,EAAiCkS,YAAjC,EAA+C;AAChEU,UAAAA,UAAU,EAAE,IADoD;AAEhEC,UAAAA,aAAa,EAAE;AAFiD,SAA/C,CAAnB;;AAIA,YAAIH,UAAU,IAAI/M,KAAK,CAACjB,MAAN,CAAagO,UAAb,EAAyBnL,SAAzB,CAAlB,EAAuD;AACrD;AACD;AACF,OAxCC;AA2CF;AACA;AACA;;;AACA,UAAIA,SAAS,IAAI,CAACpH,WAAW,CAAC2S,QAAZ,CAAqB9S,MAArB,EAA6BuH,SAA7B,CAAlB,EAA2D;AACzDvH,QAAAA,MAAM,CAACuH,SAAP,GAAmBpH,WAAW,CAACwS,YAAZ,CAAyB3S,MAAzB,EAAiCkS,YAAjC,EAA+C;AAChEU,UAAAA,UAAU,EAAE,KADoD;AAEhEC,UAAAA,aAAa,EAAE;AAFiD,SAA/C,CAAnB;AAIA;AACD,OApDC;;;AAuDF,UAAMY,EAAE,GAAGtT,WAAW,CAACuT,SAAZ,CAAsB1T,MAAtB,EAA8BA,MAA9B,CAAX;AACAoG,MAAAA,KAAK,CAAC0L,mBAAN,GAA4B,IAA5B;AAEA,UAAMiB,WAAW,GAAGxL,SAAS,IAAIpH,WAAW,CAAC6S,UAAZ,CAAuBhT,MAAvB,EAA+BuH,SAA/B,CAAjC;;AAEA,UAAIwL,WAAJ,EAAiB;AACf,YAAIpN,KAAK,CAACsN,UAAN,CAAiB1L,SAAjB,CAAJ,EAAkC;AAChC2K,UAAAA,YAAY,CAACgB,gBAAb,CACEH,WAAW,CAACI,YADd,EAEEJ,WAAW,CAACK,SAFd,EAGEL,WAAW,CAACM,cAHd,EAIEN,WAAW,CAACO,WAJd;AAMD,SAPD,MAOO;AACLpB,UAAAA,YAAY,CAACgB,gBAAb,CACEH,WAAW,CAACM,cADd,EAEEN,WAAW,CAACO,WAFd,EAGEP,WAAW,CAACI,YAHd,EAIEJ,WAAW,CAACK,SAJd;AAMD;;AACD,YAAM+H,MAAM,GAAGpI,WAAW,CAACM,cAAZ,CAA2B6B,aAA1C;AACAiG,QAAAA,MAAM,CAACC,qBAAP,GAA+BrI,WAAW,CAACqI,qBAAZ,CAAkCC,IAAlC,CAC7BtI,WAD6B,CAA/B;AAGAuI,QAAAA,cAAc,CAACH,MAAD,EAAS;AACrBI,UAAAA,UAAU,EAAE,WADS;AAErB0K,UAAAA,QAAQ,EAAExS;AAFW,SAAT,CAAd,CApBe;;AAyBf,eAAO0H,MAAM,CAACC,qBAAd;AACD,OA1BD,MA0BO;AACLlJ,QAAAA,YAAY,CAACqB,eAAb;AACD;;AAEDC,MAAAA,UAAU,CAAC;AACTpN,QAAAA,KAAK,CAAC0L,mBAAN,GAA4B,KAA5B;AACD,OAFS,CAAV;AAGD,KA7FD,CA6FE,gBAAM;AACN;AACA1L,MAAAA,KAAK,CAAC0L,mBAAN,GAA4B,KAA5B;AACD;AACF,GA9GwB,CAAzB;AAiHA;;AACArS,EAAAA,SAAS,CAAC;AACR,QAAI2B,GAAG,CAACI,OAAJ,IAAeuP,SAAnB,EAA8B;AAC5B3P,MAAAA,GAAG,CAACI,OAAJ,CAAYmS,KAAZ;AACD;AACF,GAJQ,EAIN,CAAC5C,SAAD,CAJM,CAAT;AAOA;AACA;AACA;AACA;;AACA,MAAM6C,oBAAoB,GAAGC,WAAW,CACtCC,QAAQ,CAAC;AACP,QAAI;AACF,UACE,CAAC1N,KAAK,CAACoL,WAAP,IACA,CAACpL,KAAK,CAAC0L,mBADP,IAEA,CAAC6T,YAAY,CAACE,aAAb,CAA2BrkB,OAH9B,EAIE;AACA,YAAMwQ,IAAI,GAAG7R,WAAW,CAAC8R,wBAAZ,CAAqCjS,MAArC,CAAb;AACA,YAAM;AAAEiP,UAAAA;AAAF,YAAoB+C,IAA1B;AACA,YAAMyB,EAAE,GAAGtT,WAAW,CAACuT,SAAZ,CAAsB1T,MAAtB,EAA8BA,MAA9B,CAAX;AACA,YAAMkS,YAAY,GAAGF,IAAI,CAACG,YAAL,EAArB;;AAEA,YAAIlD,aAAa,KAAKwE,EAAtB,EAA0B;AACxBrN,UAAAA,KAAK,CAAC2L,aAAN,GAAsB9C,aAAtB;AACA7M,UAAAA,UAAU,CAAC8D,GAAX,CAAelG,MAAf,EAAuB,IAAvB;AACD,SAHD,MAGO;AACLoC,UAAAA,UAAU,CAACiE,MAAX,CAAkBrG,MAAlB;AACD;;AAED,YAAI,CAACkS,YAAL,EAAmB;AACjB,iBAAO6B,UAAU,CAACC,QAAX,CAAoBhU,MAApB,CAAP;AACD;;AAED,YAAM;AAAEkO,UAAAA,UAAF;AAAcuE,UAAAA;AAAd,YAA4BP,YAAlC;AAEA,YAAM+B,oBAAoB,GACxBC,iBAAiB,CAAClU,MAAD,EAASkO,UAAT,CAAjB,IACAiG,6BAA6B,CAACnU,MAAD,EAASkO,UAAT,CAF/B;AAIA,YAAMkG,mBAAmB,GACvBF,iBAAiB,CAAClU,MAAD,EAASyS,SAAT,CAAjB,IACA0B,6BAA6B,CAACnU,MAAD,EAASyS,SAAT,CAF/B;;AAIA,YAAIwB,oBAAoB,IAAIG,mBAA5B,EAAiD;AAC/C,cAAM7O,KAAK,GAAGpF,WAAW,CAACwS,YAAZ,CAAyB3S,MAAzB,EAAiCkS,YAAjC,EAA+C;AAC3DU,YAAAA,UAAU,EAAE,KAD+C;AAE3DC,YAAAA,aAAa,EAAE;AAF4C,WAA/C,CAAd;AAIAkB,UAAAA,UAAU,CAACM,MAAX,CAAkBrU,MAAlB,EAA0BuF,KAA1B;AACD,SAND,MAMO;AACLwO,UAAAA,UAAU,CAACC,QAAX,CAAoBhU,MAApB;AACD;AACF;AACF,KA1CD,CA0CE,iBAAM;AAEP;AACF,GA9CO,EA8CL,GA9CK,CAD8B,EAgDtC,CAACwH,QAAD,CAhDsC,CAAxC;AAmDA,MAAM8M,4BAA4B,GAAG3C,OAAO,CAC1C,MAAM4C,QAAQ,CAACX,oBAAD,EAAuB,CAAvB,CAD4B,EAE1C,CAACA,oBAAD,CAF0C,CAA5C;AAMA;AACA;AACA;;AACA,MAAM3C,gBAAgB,GAAG4C,WAAW,CACjChI,KAAD;AACE,QACE,CAACrE,QAAD,IACA0M,iBAAiB,CAAClU,MAAD,EAAS6L,KAAK,CAAC2I,MAAf,CADjB,IAEA,CAACC,iBAAiB,CAAC5I,KAAD,EAAQqF,qBAAR,CAHpB,EAIE;AACA;AACA;AACA;AACAoD,MAAAA,4BAA4B,CAACI,KAA7B;AAEAiR,MAAAA,YAAY,CAACJ,WAAb;AACD;AACF,GAdiC,EAelC,CAAC/d,QAAD,EAAW0J,qBAAX,CAfkC,CAApC;AAmBA;AACA;;AACA3R,EAAAA,yBAAyB,CAAC;AACxB,QAAMsG,IAAI,GAAGzE,GAAG,CAACI,OAAjB;;AAGAqE,IAAAA,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAE8Q,gBAAN,CAAuB,aAAvB,EAAsC1F,gBAAtC;;AAGA,WAAO,MAAMpL,IAAN,aAAMA,IAAN,uBAAMA,IAAI,CAAE+Q,mBAAN,CAA0B,aAA1B,EAAyC3F,gBAAzC,CAAb;AACD,GARwB,EAQtB,CAAClK,UAAD,EAAamK,qBAAb,CARsB,CAAzB;AAWA;AACA;AACA;AACA;;AACA3R,EAAAA,yBAAyB,CAAC;AACxB,QAAMvB,MAAM,GAAGmC,WAAW,CAACkV,SAAZ,CAAsBrV,MAAtB,CAAf;AACAhC,IAAAA,MAAM,CAACgB,QAAP,CAAgB2X,gBAAhB,CACE,iBADF,EAEErC,4BAFF;AAKA,WAAO;AACLtW,MAAAA,MAAM,CAACgB,QAAP,CAAgB4X,mBAAhB,CACE,iBADF,EAEEtC,4BAFF;AAID,KALD;AAMD,GAbwB,EAatB,CAACA,4BAAD,CAbsB,CAAzB;AAeA,MAAM/N,WAAW,GAAGsC,QAAQ,CAAC,CAAC7I,MAAD,EAAS,EAAT,CAAD,CAA5B;;AAEA,MACEyD,WAAW,IACXzD,MAAM,CAACa,QAAP,CAAgBJ,MAAhB,KAA2B,CAD3B,IAEAmP,KAAK,CAACC,IAAN,CAAWnP,IAAI,CAACqH,KAAL,CAAW/H,MAAX,CAAX,EAA+BS,MAA/B,KAA0C,CAF1C,IAGAC,IAAI,CAACC,MAAL,CAAYX,MAAZ,MAAwB,EAHxB,IAIA,CAACwR,WALH,EAME;AACA,QAAMqF,KAAK,GAAG9V,MAAM,CAAC8V,KAAP,CAAa7W,MAAb,EAAqB,EAArB,CAAd;AACAuG,IAAAA,WAAW,CAACI,IAAZ,CAAiB;AACf,OAAChE,kBAAD,GAAsB,IADP;AAEfc,MAAAA,WAFe;AAGfsR,MAAAA,MAAM,EAAE8B,KAHO;AAIflD,MAAAA,KAAK,EAAEkD;AAJQ,KAAjB;AAMD;;AAED,sBACElZ,mBAAA,CAAC2P,eAAe,CAAC/D,QAAjB;AAA0B3I,IAAAA,KAAK,EAAE4G;GAAjC,eACE7J,mBAAA,CAAC8K,eAAe,CAACc,QAAjB;AAA0B3I,IAAAA,KAAK,EAAEiI;GAAjC,eACElL,mBAAA,CAAC4T,SAAD;AACEtM,IAAAA,GAAG,EAAE8B;AACL+P,IAAAA,IAAI,EAAEtP,QAAQ,GAAGR,SAAH,GAAe;KACzBtD;AACJqT,IAAAA,UAAU,EAAErT,UAAU,CAACqT;AACvBC,IAAAA,WAAW,EAAEtT,UAAU,CAACsT;AACxBC,IAAAA,cAAc,EAAEvT,UAAU,CAACuT;;uBAEX;AAChB9S,IAAAA,eAAe,EAAEqD,QAAQ,GAAGR,SAAH,GAAe;AACxCmQ,IAAAA,8BAA8B;AAC9B/V,IAAAA,GAAG,EAAEA;AACLiC,IAAAA,KAAK;AACH;AACAM,MAAAA,QAAQ,EAAE,UAFP;AAGH;AACAuE,MAAAA,OAAO,EAAE,MAJN;AAKH;AACAkP,MAAAA,UAAU,EAAE,UANT;AAOH;AACAC,MAAAA,QAAQ,EAAE;AARP,OAUAhU,KAVA;AAYLuW,IAAAA,MAAM,EAAE/F,WAAW,CAChBhI,KAAD;AACE,UACEqI,iBAAiB,CAAClU,MAAD,EAAS6L,KAAK,CAAC2I,MAAf,CAAjB,IACA,CAAC+C,cAAc,CAAC1L,KAAD,EAAQnI,UAAU,CAACkW,MAAnB,CAFjB,EAGE;AACA/N,QAAAA,KAAK,CAACkK,cAAN;AACA5V,QAAAA,WAAW,CAAC0Z,eAAZ,CAA4B7Z,MAA5B,EAAoC6L,KAAK,CAACyC,aAA1C,EAAyD,MAAzD;AACD;AACF,KATgB,EAUjB,CAAC5K,UAAU,CAACkW,MAAZ,CAViB;AAYnBE,IAAAA,KAAK,EAAEjG,WAAW,CACfhI,KAAD;AACE,UACE,CAACrE,QAAD,IACA0M,iBAAiB,CAAClU,MAAD,EAAS6L,KAAK,CAAC2I,MAAf,CADjB,IAEA,CAAC+C,cAAc,CAAC1L,KAAD,EAAQnI,UAAU,CAACoW,KAAnB,CAHjB,EAIE;AACAjO,QAAAA,KAAK,CAACkK,cAAN;AACA5V,QAAAA,WAAW,CAAC0Z,eAAZ,CAA4B7Z,MAA5B,EAAoC6L,KAAK,CAACyC,aAA1C,EAAyD,KAAzD;AACA,YAAM;AAAE/G,UAAAA;AAAF,YAAgBvH,MAAtB;;AAEA,YAAIuH,SAAJ,EAAe;AACb,cAAI5B,KAAK,CAACqQ,UAAN,CAAiBzO,SAAjB,CAAJ,EAAiC;AAC/BxG,YAAAA,MAAM,CAACmV,cAAP,CAAsBlW,MAAtB;AACD,WAFD,MAEO;AACL,gBAAM6F,IAAI,GAAGnF,IAAI,CAACZ,MAAL,CAAYE,MAAZ,EAAoBuH,SAAS,CAACwN,MAAV,CAAiB7U,IAArC,CAAb;;AACA,gBAAIa,MAAM,CAACR,MAAP,CAAcP,MAAd,EAAsB6F,IAAtB,CAAJ,EAAiC;AAC/BkO,cAAAA,UAAU,CAAC1N,MAAX,CAAkBrG,MAAlB;AACD;AACF;AACF;AACF;AACF,KAtBe,EAuBhB,CAACwH,QAAD,EAAW9D,UAAU,CAACoW,KAAtB,CAvBgB;AAyBlBS,IAAAA,OAAO,EAAE1G,WAAW,CACjBhI,KAAD;AACE,UACE,CAACrE,QAAD,IACA,CAACpB,KAAK,CAAC0L,mBADP,IAEAoC,iBAAiB,CAAClU,MAAD,EAAS6L,KAAK,CAAC2I,MAAf,CAFjB,IAGA,CAAC+C,cAAc,CAAC1L,KAAD,EAAQnI,UAAU,CAAC6W,OAAnB,CAJjB,EAKE;AACA,YAAMvI,IAAI,GAAG7R,WAAW,CAAC8R,wBAAZ,CAAqCjS,MAArC,CAAb;AACAoG,QAAAA,KAAK,CAAC2L,aAAN,GAAsBC,IAAI,CAAC/C,aAA3B;AAEA7M,QAAAA,UAAU,CAAC8D,GAAX,CAAelG,MAAf,EAAuB,IAAvB;AACD;AACF,KAbiB,EAclB,CAACwH,QAAD,EAAW9D,UAAU,CAAC6W,OAAtB,CAdkB;AAgBpB7C,IAAAA,MAAM,EAAE7D,WAAW,CAChBhI,KAAD;AACE,UACErE,QAAQ,IACRpB,KAAK,CAAC0L,mBADN,IAEA,CAACoC,iBAAiB,CAAClU,MAAD,EAAS6L,KAAK,CAAC2I,MAAf,CAFlB,IAGA+C,cAAc,CAAC1L,KAAD,EAAQnI,UAAU,CAACgU,MAAnB,CAJhB,EAKE;AACA;AACD;AAGD;AACA;AACA;;;AACA,UAAM1F,IAAI,GAAG7R,WAAW,CAAC8R,wBAAZ,CAAqCjS,MAArC,CAAb;;AACA,UAAIoG,KAAK,CAAC2L,aAAN,KAAwBC,IAAI,CAAC/C,aAAjC,EAAgD;AAC9C;AACD;;AAED,UAAM;AAAE0I,QAAAA;AAAF,UAAoB9L,KAA1B;AACA,UAAM4H,EAAE,GAAGtT,WAAW,CAACuT,SAAZ,CAAsB1T,MAAtB,EAA8BA,MAA9B,CAAX;AAGA;AACA;;AACA,UAAI2X,aAAa,KAAKlE,EAAtB,EAA0B;AACxB;AACD;AAGD;;;AACA,UACEzF,YAAY,CAAC2J,aAAD,CAAZ,IACAA,aAAa,CAACC,YAAd,CAA2B,mBAA3B,CAFF,EAGE;AACA;AACD;AAGD;AACA;;;AACA,UACED,aAAa,IAAI,IAAjB,IACA7J,SAAS,CAAC6J,aAAD,CADT,IAEAxX,WAAW,CAACiV,UAAZ,CAAuBpV,MAAvB,EAA+B2X,aAA/B,CAHF,EAIE;AACA,YAAM9R,IAAI,GAAG1F,WAAW,CAAC0X,WAAZ,CAAwB7X,MAAxB,EAAgC2X,aAAhC,CAAb;;AAEA,YAAIzQ,SAAO,CAAC6B,SAAR,CAAkBlD,IAAlB,KAA2B,CAAC7F,MAAM,CAACO,MAAP,CAAcsF,IAAd,CAAhC,EAAqD;AACnD;AACD;AACF;;AAEDzD,MAAAA,UAAU,CAACiE,MAAX,CAAkBrG,MAAlB;AACD,KAvDgB,EAwDjB,CAACwH,QAAD,EAAW9D,UAAU,CAACgU,MAAtB,CAxDiB;AA0DnBI,IAAAA,OAAO,EAAEjE,WAAW,CACjBhI,KAAD;AACE,UACE,CAACrE,QAAD,IACAuQ,SAAS,CAAC/X,MAAD,EAAS6L,KAAK,CAAC2I,MAAf,CADT,IAEA,CAAC+C,cAAc,CAAC1L,KAAD,EAAQnI,UAAU,CAACoU,OAAnB,CAFf,IAGAhK,SAAS,CAACjC,KAAK,CAAC2I,MAAP,CAJX,EAKE;AACA,YAAM3O,IAAI,GAAG1F,WAAW,CAAC0X,WAAZ,CAAwB7X,MAAxB,EAAgC6L,KAAK,CAAC2I,MAAtC,CAAb;AACA,YAAMtU,IAAI,GAAGC,WAAW,CAACC,QAAZ,CAAqBJ,MAArB,EAA6B6F,IAA7B,CAAb,CAFA;AAKA;AACA;AACA;;AACA,YAAI9E,MAAM,CAACiX,OAAP,CAAehY,MAAf,EAAuBE,IAAvB,CAAJ,EAAkC;AAChC,cAAMgmB,UAAU,GAAGxlB,IAAI,CAACoG,GAAL,CAAS9G,MAAT,EAAiBE,IAAjB,CAAnB;;AACA,cAAIgmB,UAAU,KAAKrgB,IAAnB,EAAyB;AACvB,gBAAMgR,MAAK,GAAG9V,MAAM,CAAC8V,KAAP,CAAa7W,MAAb,EAAqBE,IAArB,CAAd;;AACA,gBAAMqY,GAAG,GAAGxX,MAAM,CAACwX,GAAP,CAAWvY,MAAX,EAAmBE,IAAnB,CAAZ;AAEA,gBAAMsY,SAAS,GAAGzX,MAAM,CAAC0X,IAAP,CAAYzY,MAAZ,EAAoB;AAAEsY,cAAAA,EAAE,EAAEzB;AAAN,aAApB,CAAlB;AACA,gBAAM6B,OAAO,GAAG3X,MAAM,CAAC0X,IAAP,CAAYzY,MAAZ,EAAoB;AAAEsY,cAAAA,EAAE,EAAEC;AAAN,aAApB,CAAhB;;AAEA,gBACEC,SAAS,IACTE,OADA,IAEApY,IAAI,CAACoE,MAAL,CAAY8T,SAAS,CAAC,CAAD,CAArB,EAA0BE,OAAO,CAAC,CAAD,CAAjC,CAHF,EAIE;AACA,kBAAMnT,KAAK,GAAGxE,MAAM,CAACwE,KAAP,CAAavF,MAAb,EAAqB6W,MAArB,CAAd;AACA9C,cAAAA,UAAU,CAACM,MAAX,CAAkBrU,MAAlB,EAA0BuF,KAA1B;AACD;AACF;AACF;AACF;AACF,KAnCiB,EAoClB,CAACiC,QAAD,EAAW9D,UAAU,CAACoU,OAAtB,CApCkB;AAsCpBa,IAAAA,gBAAgB,EAAE9E,WAAW,CAC1BhI,KAAD;AACE,UACEqI,iBAAiB,CAAClU,MAAD,EAAS6L,KAAK,CAAC2I,MAAf,CAAjB,IACA,CAAC+C,cAAc,CAAC1L,KAAD,EAAQnI,UAAU,CAACiV,gBAAnB,CAFjB,EAGE;AACArE,QAAAA,4BAA4B,CAACI,KAA7B;AACAlB,QAAAA,UAAU,CAAC;AACTpN,UAAAA,KAAK,CAACoL,WAAN,IAAqBC,cAAc,CAAC,KAAD,CAAnC;AACArL,UAAAA,KAAK,CAACoL,WAAN,GAAoB,KAApB;AAEAnP,UAAAA,YAAY,CAAC6D,GAAb,CAAiBlG,MAAjB,EAAyB,KAAzB;AACAsC,UAAAA,qBAAqB,CAAC4D,GAAtB,CAA0BlG,MAA1B,EAAkC,IAAlC;AAEA,cAAMgd,YAAY,GAChBxa,0BAA0B,CAACsE,GAA3B,CAA+B9G,MAA/B,KAA0C,EAD5C;AAIA;;AACA,cAAI,CAACgd,YAAY,CAACvc,MAAlB,EAA0B;AACxB;AACD;;AAED+B,UAAAA,0BAA0B,CAAC0D,GAA3B,CAA+BlG,MAA/B,EAAuC,EAAvC;AAEA,cAAM;AAAEuH,YAAAA;AAAF,cAAgBvH,MAAtB;AAEAgd,UAAAA,YAAY,CAACvM,OAAb,CAAqBkT,SAAS;AAC5B,gBAAM5jB,IAAI,GAAG4jB,SAAS,CAAC5jB,IAAV,CAAeyW,UAA5B;AACA,gBAAM8B,EAAE,GAAGmF,2BAA2B,CACpCzd,MADoC,EAEpCuH,SAFoC,EAGpCoc,SAHoC,CAAtC;AAKA5P,YAAAA,UAAU,CAAC2F,YAAX,CAAwB1Z,MAAxB,EAAgCsY,EAAhC;AACAvX,YAAAA,MAAM,CAACyV,UAAP,CAAkBxW,MAAlB,EAA0BD,IAA1B;AACD,WATD;AAUD,SA9BS,EA8BPgmB,aA9BO,CAAV;AA+BD;AACF,KAvC0B,EAwC3B,CAACriB,UAAU,CAACiV,gBAAZ,CAxC2B;AA0C7BO,IAAAA,mBAAmB,EAAErF,WAAW,CAC7BhI,KAAD;AACE,UACEqI,iBAAiB,CAAClU,MAAD,EAAS6L,KAAK,CAAC2I,MAAf,CAAjB,IACA,CAAC+C,cAAc,CAAC1L,KAAD,EAAQnI,UAAU,CAACwV,mBAAnB,CAFjB,EAGE;AACA,SAAC9S,KAAK,CAACoL,WAAP,IAAsBC,cAAc,CAAC,IAAD,CAApC;AACArL,QAAAA,KAAK,CAACoL,WAAN,GAAoB,IAApB;AACAnP,QAAAA,YAAY,CAAC6D,GAAb,CAAiBlG,MAAjB,EAAyB,IAAzB;AACD;AACF,KAV6B,EAW9B,CAAC0D,UAAU,CAACwV,mBAAZ,CAX8B;AAahCC,IAAAA,kBAAkB,EAAEtF,WAAW,CAC5BhI,KAAD;AACE,UACEqI,iBAAiB,CAAClU,MAAD,EAAS6L,KAAK,CAAC2I,MAAf,CAAjB,IACA,CAAC+C,cAAc,CAAC1L,KAAD,EAAQnI,UAAU,CAACyV,kBAAnB,CAFjB,EAGE;AACA,SAAC/S,KAAK,CAACoL,WAAP,IAAsBC,cAAc,CAAC,IAAD,CAApC;AACArL,QAAAA,KAAK,CAACoL,WAAN,GAAoB,IAApB;AACAnP,QAAAA,YAAY,CAAC6D,GAAb,CAAiBlG,MAAjB,EAAyB,IAAzB;AACD;AACF,KAV4B,EAW7B,CAAC0D,UAAU,CAACyV,kBAAZ,CAX6B;AAa/B8B,IAAAA,OAAO,EAAEpH,WAAW,CACjBhI,KAAD;AACE;AACAA,MAAAA,KAAK,CAACyC,aAAN,GAAsBiC,gBAAgB,CAAC1E,KAAK,CAACyC,aAAP,CAAtC;;AAEA,UACE4F,iBAAiB,CAAClU,MAAD,EAAS6L,KAAK,CAAC2I,MAAf,CAAjB,IACA,CAAC+C,cAAc,CAAC1L,KAAD,EAAQnI,UAAU,CAACuX,OAAnB,CADf,IAEA,CAACzT,QAHH,EAIE;AACAqE,QAAAA,KAAK,CAACkK,cAAN;AACA5V,QAAAA,WAAW,CAACoW,UAAZ,CAAuBvW,MAAvB,EAA+B6L,KAAK,CAACyC,aAArC;AACD;AACF,KAbiB,EAclB,CAAC9G,QAAD,EAAW9D,UAAU,CAACuX,OAAtB,CAdkB;IAjPtB,EAkQGvT,WAAW,CAAC;AACXnB,IAAAA,WADW;AAEXV,IAAAA,IAAI,EAAE7F,MAFK;AAGXoH,IAAAA,aAHW;AAIXtE,IAAAA,iBAJW;AAKXC,IAAAA,UALW;AAMXwE,IAAAA,SAAS,EAAEvH,MAAM,CAACuH;AANP,GAAD,CAlQd,CADF,CADF,CADF;AAiRD;;ACtmBD;;;;AAIO,IAAM4e,cAAc,gBAAG7d,aAAa,CAAC,KAAD,CAApC;AAEP;;;;IAIa8d,UAAU,GAAG;AACxB,SAAO7d,UAAU,CAAC4d,cAAD,CAAjB;AACD;;ACHD,SAASE,OAAT,CAAiB9C,KAAjB;AACE,SAAOA,KAAK,YAAY/a,KAAxB;AACD;AAGD;;;;;AAIO,IAAM8d,oBAAoB,gBAAGhe,aAAa,CAG9C,EAH8C,CAA1C;;AAKP,IAAMie,WAAW,GAAG,CAACC,CAAD,EAASC,CAAT,KAAoBD,CAAC,KAAKC,CAA9C;AAEA;;;;;;;;;;;SASgBC,iBACdtH;MACAuH,iFAAsCJ;AAEtC,MAAM,GAAGK,WAAH,IAAkBC,UAAU,CAACC,CAAC,IAAIA,CAAC,GAAG,CAAV,EAAa,CAAb,CAAlC;AACA,MAAMrZ,OAAO,GAAGlF,UAAU,CAAC+d,oBAAD,CAA1B;;AACA,MAAI,CAAC7Y,OAAL,EAAc;AACZ,UAAM,IAAIjF,KAAJ,oFAAN;AAGD;;AACD,MAAM;AAAEue,IAAAA,QAAF;AAAYpQ,IAAAA;AAAZ,MAAiClJ,OAAvC;AAEA,MAAMuZ,+BAA+B,GAAG3lB,MAAM,EAA9C;AACA,MAAM4lB,cAAc,GAAG5lB,MAAM,CAAwB,MAAM,IAA9B,CAA7B;AACA,MAAM6lB,mBAAmB,GAAG7lB,MAAM,CAAK,IAAL,CAAlC;AACA,MAAI8lB,aAAJ;;AAEA,MAAI;AACF,QACE/H,QAAQ,KAAK6H,cAAc,CAACzlB,OAA5B,IACAwlB,+BAA+B,CAACxlB,OAFlC,EAGE;AACA2lB,MAAAA,aAAa,GAAG/H,QAAQ,CAAC2H,QAAQ,EAAT,CAAxB;AACD,KALD,MAKO;AACLI,MAAAA,aAAa,GAAGD,mBAAmB,CAAC1lB,OAApC;AACD;AACF,GATD,CASE,OAAOqd,GAAP,EAAY;AACZ,QAAImI,+BAA+B,CAACxlB,OAAhC,IAA2C6kB,OAAO,CAACxH,GAAD,CAAtD,EAA6D;AAC3DA,MAAAA,GAAG,CAACC,OAAJ,uEAA2EkI,+BAA+B,CAACxlB,OAAhC,CAAwC4lB,KAAnH;AACD;;AAED,UAAMvI,GAAN;AACD;;AACDtf,EAAAA,yBAAyB,CAAC;AACxB0nB,IAAAA,cAAc,CAACzlB,OAAf,GAAyB4d,QAAzB;AACA8H,IAAAA,mBAAmB,CAAC1lB,OAApB,GAA8B2lB,aAA9B;AACAH,IAAAA,+BAA+B,CAACxlB,OAAhC,GAA0CwF,SAA1C;AACD,GAJwB,CAAzB;AAMAzH,EAAAA,yBAAyB,CACvB;AACE,aAAS8nB,eAAT;AACE,UAAI;AACF,YAAMC,gBAAgB,GAAGL,cAAc,CAACzlB,OAAf,CAAuBulB,QAAQ,EAA/B,CAAzB;;AAEA,YAAIJ,UAAU,CAACW,gBAAD,EAAmBJ,mBAAmB,CAAC1lB,OAAvC,CAAd,EAA+D;AAC7D;AACD;;AAED0lB,QAAAA,mBAAmB,CAAC1lB,OAApB,GAA8B8lB,gBAA9B;AACD,OARD,CAQE,OAAOzI,GAAP,EAAY;AACZ;AACA;AACA;AACA;AACAmI,QAAAA,+BAA+B,CAACxlB,OAAhC,GAA0Cqd,GAA1C;AACD;;AAED+H,MAAAA,WAAW;AACZ;;AAED,QAAMW,WAAW,GAAG5Q,gBAAgB,CAAC0Q,eAAD,CAApC;AAEAA,IAAAA,eAAe;AAEf,WAAO,MAAME,WAAW,EAAxB;AACD,GA3BsB;AA6BvB,GAAC5Q,gBAAD,EAAmBoQ,QAAnB,CA7BuB,CAAzB;AAgCA,SAAOI,aAAP;AACD;AAED;;;;SAGgBK,mBAAmBxnB;AACjC,MAAMynB,cAAc,GAAGpmB,MAAM,CAAwB,EAAxB,CAAN,CAAkCG,OAAzD;AACA,MAAMkmB,QAAQ,GAAGrmB,MAAM,CAEpB;AACDrB,IAAAA;AADC,GAFoB,CAAN,CAIdwB,OAJH;AAKA,MAAMmmB,QAAQ,GAAG9T,WAAW,CAAE7T,MAAD;AAC3B0nB,IAAAA,QAAQ,CAAC1nB,MAAT,GAAkBA,MAAlB;AACAynB,IAAAA,cAAc,CAAChX,OAAf,CAAwBmX,QAAD,IAAmCA,QAAQ,CAAC5nB,MAAD,CAAlE;AACD,GAH2B,EAGzB,EAHyB,CAA5B;AAKA,MAAM6nB,eAAe,GAAGlW,OAAO,CAAC;AAC9B,WAAO;AACLoV,MAAAA,QAAQ,EAAE,MAAMW,QAAQ,CAAC1nB,MADpB;AAEL2W,MAAAA,gBAAgB,EAAGkN,QAAD;AAChB4D,QAAAA,cAAc,CAAC9gB,IAAf,CAAoBkd,QAApB;AACA,eAAO;AACL4D,UAAAA,cAAc,CAACK,MAAf,CAAsBL,cAAc,CAACM,OAAf,CAAuBlE,QAAvB,CAAtB,EAAwD,CAAxD;AACD,SAFD;AAGD;AAPI,KAAP;AASD,GAV8B,EAU5B,CAAC4D,cAAD,EAAiBC,QAAjB,CAV4B,CAA/B;AAWA,SAAO;AAAEG,IAAAA,eAAF;AAAmBF,IAAAA;AAAnB,GAAP;AACD;;;AC5HD;;;;;IAKaK,KAAK,GAAIroB,KAAD;AAMnB,MAAM;AAAEK,IAAAA,MAAF;AAAUa,IAAAA,QAAV;AAAoB8mB,IAAAA,QAApB;AAA8B/mB,IAAAA;AAA9B,MAAiDjB,KAAvD;AAAA,MAA8CsoB,IAA9C,4BAAuDtoB,KAAvD;;AACA,MAAMuoB,UAAU,GAAG7mB,MAAM,CAAC,KAAD,CAAzB;AAEA,MAAM,CAACoM,OAAD,EAAU0a,UAAV,IAAwBxqB,KAAK,CAACsI,QAAN,CAA8B;AAC1D,QAAI,CAACvF,IAAI,CAAC0nB,UAAL,CAAgBxnB,KAAhB,CAAL,EAA6B;AAC3B,YAAM,IAAI4H,KAAJ,CACJ,6EACc0V,IAAI,CAACC,SAAL,CAAevd,KAAf,CADd,CADI,CAAN;AAID;;AACD,QAAI,CAACG,MAAM,CAACid,QAAP,CAAgBhe,MAAhB,CAAL,EAA8B;AAC5B,YAAM,IAAIwI,KAAJ,CACJ,qDAA8C0V,IAAI,CAACC,SAAL,CAAene,MAAf,CAA9C,CADI,CAAN;AAGD;;AACDA,IAAAA,MAAM,CAACa,QAAP,GAAkBD,KAAlB;AACAkE,IAAAA,MAAM,CAACujB,MAAP,CAAcroB,MAAd,EAAsBioB,IAAtB;AACA,WAAO,CAACjoB,MAAD,CAAP;AACD,GAf6B,CAA9B;AAiBA,MAAM;AACJ6nB,IAAAA,eADI;AAEJF,IAAAA,QAAQ,EAAEW;AAFN,MAGFd,kBAAkB,CAACxnB,MAAD,CAHtB;AAKA,MAAMuoB,eAAe,GAAG1U,WAAW,CAAC;AAClC,QAAI8T,QAAJ,EAAc;AACZA,MAAAA,QAAQ,CAAC3nB,MAAM,CAACa,QAAR,CAAR;AACD;;AAEDsnB,IAAAA,UAAU,CAAC,CAACnoB,MAAD,CAAD,CAAV;AACAsoB,IAAAA,oBAAoB,CAACtoB,MAAD,CAApB;AACD,GAPkC,EAOhC,CAAC2nB,QAAD,CAPgC,CAAnC;AASAllB,EAAAA,mBAAmB,CAACyD,GAApB,CAAwBlG,MAAxB,EAAgCuoB,eAAhC;AAEA9oB,EAAAA,SAAS,CAAC;AACR,WAAO;AACLgD,MAAAA,mBAAmB,CAACyD,GAApB,CAAwBlG,MAAxB,EAAgC,QAAhC;AACAkoB,MAAAA,UAAU,CAAC1mB,OAAX,GAAqB,IAArB;AACD,KAHD;AAID,GALQ,EAKN,EALM,CAAT;AAOA,MAAM,CAAC4Q,SAAD,EAAYoW,YAAZ,IAA4BviB,QAAQ,CAAC9F,WAAW,CAACiS,SAAZ,CAAsBpS,MAAtB,CAAD,CAA1C;AAEAP,EAAAA,SAAS,CAAC;AACR+oB,IAAAA,YAAY,CAACroB,WAAW,CAACiS,SAAZ,CAAsBpS,MAAtB,CAAD,CAAZ;AACD,GAFQ,CAAT;AAIAT,EAAAA,yBAAyB,CAAC;AACxB,QAAMkpB,EAAE,GAAG,MAAMD,YAAY,CAACroB,WAAW,CAACiS,SAAZ,CAAsBpS,MAAtB,CAAD,CAA7B;;AACA,QAAIvC,4BAAJ,EAAkC;AAChC;AACA;AACA;AACAuB,MAAAA,QAAQ,CAAC2X,gBAAT,CAA0B,SAA1B,EAAqC8R,EAArC;AACAzpB,MAAAA,QAAQ,CAAC2X,gBAAT,CAA0B,UAA1B,EAAsC8R,EAAtC;AACA,aAAO;AACLzpB,QAAAA,QAAQ,CAAC4X,mBAAT,CAA6B,SAA7B,EAAwC6R,EAAxC;AACAzpB,QAAAA,QAAQ,CAAC4X,mBAAT,CAA6B,UAA7B,EAAyC6R,EAAzC;AACD,OAHD;AAID,KAVD,MAUO;AACLzpB,MAAAA,QAAQ,CAAC2X,gBAAT,CAA0B,OAA1B,EAAmC8R,EAAnC,EAAuC,IAAvC;AACAzpB,MAAAA,QAAQ,CAAC2X,gBAAT,CAA0B,MAA1B,EAAkC8R,EAAlC,EAAsC,IAAtC;AACA,aAAO;AACLzpB,QAAAA,QAAQ,CAAC4X,mBAAT,CAA6B,OAA7B,EAAsC6R,EAAtC,EAA0C,IAA1C;AACAzpB,QAAAA,QAAQ,CAAC4X,mBAAT,CAA6B,MAA7B,EAAqC6R,EAArC,EAAyC,IAAzC;AACD,OAHD;AAID;AACF,GApBwB,EAoBtB,EApBsB,CAAzB;AAsBA,sBACE9qB,mBAAA,CAAC2oB,oBAAoB,CAAC/c,QAAtB;AAA+B3I,IAAAA,KAAK,EAAEinB;GAAtC,eACElqB,mBAAA,CAAC4P,YAAY,CAAChE,QAAd;AAAuB3I,IAAAA,KAAK,EAAE6M;GAA9B,eACE9P,mBAAA,CAAC0K,aAAa,CAACkB,QAAf;AAAwB3I,IAAAA,KAAK,EAAEZ;GAA/B,eACErC,mBAAA,CAACwoB,cAAc,CAAC5c,QAAhB;AAAyB3I,IAAAA,KAAK,EAAEwR;GAAhC,EACGvR,QADH,CADF,CADF,CADF,CADF;AAWD;;ACvGD;;;;;IAKa6nB,SAAS,GAAG;AACvB,MAAM1oB,MAAM,GAAGuI,UAAU,CAACF,aAAD,CAAzB;;AAEA,MAAI,CAACrI,MAAL,EAAa;AACX,UAAM,IAAIwI,KAAJ,6EAAN;AAGD;;AAED,SAAOxI,MAAP;AACD;;ACnBD;;;;AAOA,IAAM2oB,gBAAgB,GAAG,CAACnI,IAAD,EAAgBoI,WAAhB;AACvB,MAAMC,MAAM,GAAG,CAACD,WAAW,CAACjI,GAAZ,GAAkBiI,WAAW,CAACE,MAA/B,IAAyC,CAAxD;AAEA,SAAOtI,IAAI,CAACG,GAAL,IAAYkI,MAAZ,IAAsBrI,IAAI,CAACsI,MAAL,IAAeD,MAA5C;AACD,CAJD;;AAMA,IAAME,iBAAiB,GAAG,CACxB/oB,MADwB,EAExBgpB,MAFwB,EAGxBC,MAHwB;AAKxB,MAAMC,KAAK,GAAG/oB,WAAW,CAAC6S,UAAZ,CAAuBhT,MAAvB,EAA+BgpB,MAA/B,EAAuC5N,qBAAvC,EAAd;AACA,MAAM+N,KAAK,GAAGhpB,WAAW,CAAC6S,UAAZ,CAAuBhT,MAAvB,EAA+BipB,MAA/B,EAAuC7N,qBAAvC,EAAd;AAEA,SAAOuN,gBAAgB,CAACO,KAAD,EAAQC,KAAR,CAAhB,IAAkCR,gBAAgB,CAACQ,KAAD,EAAQD,KAAR,CAAzD;AACD,CATD;AAWA;;;;;;;;;;AAQO,IAAME,oBAAoB,GAAG,CAClCppB,MADkC,EAElCqpB,WAFkC;AAIlC,MAAMC,mBAAmB,GAAGvoB,MAAM,CAACwE,KAAP,CAAavF,MAAb,EAAqB2F,KAAK,CAAC4S,GAAN,CAAU8Q,WAAV,CAArB,CAA5B;AACA,MAAME,SAAS,GAAG3Z,KAAK,CAACC,IAAN,CAAW9O,MAAM,CAACwoB,SAAP,CAAiBvpB,MAAjB,EAAyB;AAAEsY,IAAAA,EAAE,EAAE+Q;AAAN,GAAzB,CAAX,CAAlB;AAEA,MAAI3I,IAAI,GAAG,CAAX;AACA,MAAI8I,KAAK,GAAGD,SAAS,CAAC9oB,MAAtB;AACA,MAAIooB,MAAM,GAAG7M,IAAI,CAACyN,KAAL,CAAWD,KAAK,GAAG,CAAnB,CAAb;;AAEA,MACET,iBAAiB,CACf/oB,MADe,EAEfe,MAAM,CAACwE,KAAP,CAAavF,MAAb,EAAqBupB,SAAS,CAAC7I,IAAD,CAA9B,CAFe,EAGf4I,mBAHe,CADnB,EAME;AACA,WAAOvoB,MAAM,CAACwE,KAAP,CAAavF,MAAb,EAAqBupB,SAAS,CAAC7I,IAAD,CAA9B,EAAsC4I,mBAAtC,CAAP;AACD;;AAED,MAAIC,SAAS,CAAC9oB,MAAV,GAAmB,CAAvB,EAA0B;AACxB,WAAOM,MAAM,CAACwE,KAAP,CACLvF,MADK,EAELupB,SAAS,CAACA,SAAS,CAAC9oB,MAAV,GAAmB,CAApB,CAFJ,EAGL6oB,mBAHK,CAAP;AAKD;;AAED,SAAOT,MAAM,KAAKU,SAAS,CAAC9oB,MAArB,IAA+BooB,MAAM,KAAKnI,IAAjD,EAAuD;AACrD,QACEqI,iBAAiB,CACf/oB,MADe,EAEfe,MAAM,CAACwE,KAAP,CAAavF,MAAb,EAAqBupB,SAAS,CAACV,MAAD,CAA9B,CAFe,EAGfS,mBAHe,CADnB,EAME;AACAE,MAAAA,KAAK,GAAGX,MAAR;AACD,KARD,MAQO;AACLnI,MAAAA,IAAI,GAAGmI,MAAP;AACD;;AAEDA,IAAAA,MAAM,GAAG7M,IAAI,CAACyN,KAAL,CAAW,CAAC/I,IAAI,GAAG8I,KAAR,IAAiB,CAA5B,CAAT;AACD;;AAED,SAAOzoB,MAAM,CAACwE,KAAP,CAAavF,MAAb,EAAqBupB,SAAS,CAACC,KAAD,CAA9B,EAAuCF,mBAAvC,CAAP;AACD,CA9CM;;ACdP;;;;;;;;;IASaI,SAAS,GAAsB1pB,MAAnB;AACvB,MAAM2pB,CAAC,GAAG3pB,MAAV;AACA,MAAM;AAAE4pB,IAAAA,KAAF;AAASjC,IAAAA,QAAT;AAAmB1d,IAAAA;AAAnB,MAAsC0f,CAA5C;AAGA;;AACAznB,EAAAA,wBAAwB,CAACgE,GAAzB,CAA6ByjB,CAA7B,EAAgC,IAAIhoB,OAAJ,EAAhC;;AAEAgoB,EAAAA,CAAC,CAAC1f,cAAF,GAAmBkM,IAAI;AACrB,QAAIA,IAAI,KAAK,MAAb,EAAqB;AACnB,aAAOlM,cAAc,CAACkM,IAAD,CAArB;AACD;;AAED,QAAInW,MAAM,CAACuH,SAAP,IAAoB5B,KAAK,CAACmP,WAAN,CAAkB9U,MAAM,CAACuH,SAAzB,CAAxB,EAA6D;AAC3D,UAAMsiB,gBAAgB,GAAG9oB,MAAM,CAACsX,KAAP,CAAarY,MAAb,EAAqB;AAC5CsQ,QAAAA,KAAK,EAAErH,CAAC,IAAIlI,MAAM,CAACoX,OAAP,CAAenY,MAAf,EAAuBiJ,CAAvB,CADgC;AAE5CqP,QAAAA,EAAE,EAAEtY,MAAM,CAACuH;AAFiC,OAArB,CAAzB;;AAKA,UAAIsiB,gBAAJ,EAAsB;AACpB,YAAM,GAAGC,eAAH,IAAsBD,gBAA5B;AACA,YAAME,kBAAkB,GAAGhpB,MAAM,CAACwE,KAAP,CACzBvF,MADyB,EAEzB8pB,eAFyB,EAGzB9pB,MAAM,CAACuH,SAAP,CAAiBwN,MAHQ,CAA3B;AAMA,YAAMiV,gBAAgB,GAAGZ,oBAAoB,CAACO,CAAD,EAAII,kBAAJ,CAA7C;;AAEA,YAAI,CAACpkB,KAAK,CAACmP,WAAN,CAAkBkV,gBAAlB,CAAL,EAA0C;AACxCjW,UAAAA,UAAU,CAAC1N,MAAX,CAAkBrG,MAAlB,EAA0B;AAAEsY,YAAAA,EAAE,EAAE0R;AAAN,WAA1B;AACD;AACF;AACF;AACF,GA1BD;AA6BA;;;AACAL,EAAAA,CAAC,CAACC,KAAF,GAAWnS,EAAD;AACR,QAAMwS,OAAO,GAAkB,EAA/B;;AAEA,YAAQxS,EAAE,CAAC/G,IAAX;AACE,WAAK,aAAL;AACA,WAAK,aAAL;AACA,WAAK,UAAL;AACA,WAAK,YAAL;AAAmB;AACjBuZ,UAAAA,OAAO,CAACtjB,IAAR,CAAa,GAAGujB,UAAU,CAACP,CAAD,EAAIlS,EAAE,CAACvX,IAAP,CAA1B;AACA;AACD;;AAED,WAAK,eAAL;AAAsB;AAAA;;AACpB;AACA,mCAAAqC,wBAAwB,CAACuE,GAAzB,CAA6B9G,MAA7B,iFAAsC0W,KAAtC;AACAnU,UAAAA,wBAAwB,CAAC8D,MAAzB,CAAgCrG,MAAhC;AACA;AACD;;AAED,WAAK,aAAL;AACA,WAAK,aAAL;AAAoB;AAClBiqB,UAAAA,OAAO,CAACtjB,IAAR,CAAa,GAAGujB,UAAU,CAACP,CAAD,EAAIrpB,IAAI,CAACR,MAAL,CAAY2X,EAAE,CAACvX,IAAf,CAAJ,CAA1B;AACA;AACD;;AAED,WAAK,YAAL;AAAmB;AACjB,cAAMiqB,QAAQ,GAAG7pB,IAAI,CAAC8pB,QAAL,CAAc3S,EAAE,CAACvX,IAAjB,CAAjB;AACA+pB,UAAAA,OAAO,CAACtjB,IAAR,CAAa,GAAGujB,UAAU,CAACP,CAAD,EAAIQ,QAAJ,CAA1B;AACA;AACD;;AAED,WAAK,WAAL;AAAkB;AAChB,cAAME,UAAU,GAAG/pB,IAAI,CAACgqB,MAAL,CACjBhqB,IAAI,CAACR,MAAL,CAAY2X,EAAE,CAACvX,IAAf,CADiB,EAEjBI,IAAI,CAACR,MAAL,CAAY2X,EAAE,CAAC8S,OAAf,CAFiB,CAAnB;AAIAN,UAAAA,OAAO,CAACtjB,IAAR,CAAa,GAAGujB,UAAU,CAACP,CAAD,EAAIU,UAAJ,CAA1B;AACA;AACD;AAnCH;;AAsCAT,IAAAA,KAAK,CAACnS,EAAD,CAAL;;AAEA,SAAK,IAAM,CAACvX,IAAD,EAAO+E,GAAP,CAAX,IAA0BglB,OAA1B,EAAmC;AACjC,UAAM,CAACpkB,IAAD,IAAS9E,MAAM,CAAC8E,IAAP,CAAY8jB,CAAZ,EAAezpB,IAAf,CAAf;AACA+B,MAAAA,WAAW,CAACiE,GAAZ,CAAgBL,IAAhB,EAAsBZ,GAAtB;AACD;AACF,GA/CD;;AAiDA0kB,EAAAA,CAAC,CAAC9P,eAAF,GAAqBjF,IAAD;AAClB,QAAM;AAAErN,MAAAA;AAAF,QAAgBoiB,CAAtB;;AAEA,QAAI,CAACpiB,SAAL,EAAgB;AACd;AACD;;AAED,QAAM,CAACsP,KAAD,EAAQ0B,GAAR,IAAe5S,KAAK,CAAC6kB,KAAN,CAAYjjB,SAAZ,CAArB;AACA,QAAMiR,SAAS,GAAGzX,MAAM,CAAC0X,IAAP,CAAYkR,CAAZ,EAAe;AAAErR,MAAAA,EAAE,EAAEzB,KAAK,CAAC3W;AAAZ,KAAf,CAAlB;AACA,QAAMwY,OAAO,GAAG3X,MAAM,CAAC0X,IAAP,CAAYkR,CAAZ,EAAe;AAAErR,MAAAA,EAAE,EAAEC,GAAG,CAACrY;AAAV,KAAf,CAAhB;;AAEA,QAAIyF,KAAK,CAACmP,WAAN,CAAkBvN,SAAlB,KAAgC,CAACiR,SAArC,EAAgD;AAC9C;AACD;AAGD;;;AACA,QAAM0C,QAAQ,GAAG/a,WAAW,CAAC6S,UAAZ,CAAuB2W,CAAvB,EAA0BpiB,SAA1B,CAAjB;AACA,QAAIia,QAAQ,GAAGtG,QAAQ,CAACuG,aAAT,EAAf;AACA,QAAIgJ,MAAM,GAAGjJ,QAAQ,CAAC5S,UAAT,CAAoB,CAApB,CAAb;;AAGA4S,IAAAA,QAAQ,CAAC5S,UAAT,CAAoB6B,OAApB,CAA4B5K,IAAI;AAC9B,UAAIA,IAAI,CAACpE,WAAL,IAAoBoE,IAAI,CAACpE,WAAL,CAAiBipB,IAAjB,OAA4B,EAApD,EAAwD;AACtDD,QAAAA,MAAM,GAAG5kB,IAAT;AACD;AACF,KAJD;AAOA;AACA;;AACA,QAAI6S,OAAJ,EAAa;AACX,UAAM,CAAC4I,QAAD,IAAa5I,OAAnB;AACA,UAAMiS,CAAC,GAAGzP,QAAQ,CAAC0P,UAAT,EAAV;AACA,UAAMnb,OAAO,GAAGtP,WAAW,CAACuT,SAAZ,CAAsBiW,CAAtB,EAAyBrI,QAAzB,CAAhB;AACAqJ,MAAAA,CAAC,CAACE,WAAF,CAAcpb,OAAd;AACA+R,MAAAA,QAAQ,GAAGmJ,CAAC,CAAClJ,aAAF,EAAX;AACD;AAGD;AACA;AACA;;;AACA,QAAIjJ,SAAJ,EAAe;AACbiS,MAAAA,MAAM,GAAGjJ,QAAQ,CAACpe,aAAT,CAAuB,qBAAvB,CAAT;AACD;AAGD;;;AACAwM,IAAAA,KAAK,CAACC,IAAN,CAAW2R,QAAQ,CAACnC,gBAAT,CAA0B,yBAA1B,CAAX,EAAiE5O,OAAjE,CACEqa,EAAE;AACA,UAAMC,SAAS,GAAGD,EAAE,CAACvb,YAAH,CAAgB,uBAAhB,MAA6C,GAA/D;AACAub,MAAAA,EAAE,CAACrpB,WAAH,GAAiBspB,SAAS,GAAG,IAAH,GAAU,EAApC;AACD,KAJH;AAQA;AACA;;AACA,QAAI3c,SAAS,CAACqc,MAAD,CAAb,EAAuB;AACrB,UAAMO,IAAI,GAAGP,MAAM,CAAC9c,aAAP,CAAqB1O,aAArB,CAAmC,MAAnC,CAAb,CADqB;AAGrB;;AACA+rB,MAAAA,IAAI,CAAC3nB,KAAL,CAAW+T,UAAX,GAAwB,KAAxB;AACA4T,MAAAA,IAAI,CAACC,WAAL,CAAiBR,MAAjB;AACAjJ,MAAAA,QAAQ,CAACyJ,WAAT,CAAqBD,IAArB;AACAP,MAAAA,MAAM,GAAGO,IAAT;AACD;;AAED,QAAM3a,QAAQ,GAAGsZ,CAAC,CAACuB,WAAF,EAAjB;AACA,QAAMvqB,MAAM,GAAGud,IAAI,CAACC,SAAL,CAAe9N,QAAf,CAAf;AACA,QAAM8a,OAAO,GAAGntB,MAAM,CAACotB,IAAP,CAAYC,kBAAkB,CAAC1qB,MAAD,CAA9B,CAAhB;AACA8pB,IAAAA,MAAM,CAACa,YAAP,CAAoB,qBAApB,EAA2CH,OAA3C;AACAvW,IAAAA,IAAI,CAACjE,OAAL,CAAa,8BAAb,EAA6Cwa,OAA7C;;AAGA,QAAMI,GAAG,GAAG/J,QAAQ,CAAC7T,aAAT,CAAuB1O,aAAvB,CAAqC,KAArC,CAAZ;AACAssB,IAAAA,GAAG,CAACN,WAAJ,CAAgBzJ,QAAhB;AACA+J,IAAAA,GAAG,CAACD,YAAJ,CAAiB,QAAjB,EAA2B,MAA3B;AACA9J,IAAAA,QAAQ,CAAC7T,aAAT,CAAuB6d,IAAvB,CAA4BP,WAA5B,CAAwCM,GAAxC;AACA3W,IAAAA,IAAI,CAACjE,OAAL,CAAa,WAAb,EAA0B4a,GAAG,CAACE,SAA9B;AACA7W,IAAAA,IAAI,CAACjE,OAAL,CAAa,YAAb,EAA2BnB,YAAY,CAAC+b,GAAD,CAAvC;AACA/J,IAAAA,QAAQ,CAAC7T,aAAT,CAAuB6d,IAAvB,CAA4B5J,WAA5B,CAAwC2J,GAAxC;AACA,WAAO3W,IAAP;AACD,GApFD;;AAsFA+U,EAAAA,CAAC,CAACpT,UAAF,GAAgB3B,IAAD;AACb,QAAI,CAAC+U,CAAC,CAAC1K,kBAAF,CAAqBrK,IAArB,CAAL,EAAiC;AAC/B+U,MAAAA,CAAC,CAACzK,cAAF,CAAiBtK,IAAjB;AACD;AACF,GAJD;;AAMA+U,EAAAA,CAAC,CAAC1K,kBAAF,GAAwBrK,IAAD;AACrB;;;AAGA,QAAMvE,QAAQ,GACZuE,IAAI,CAACrG,OAAL,CAAa,8BAAb,KACA2B,yBAAyB,CAAC0E,IAAD,CAF3B;;AAIA,QAAIvE,QAAJ,EAAc;AACZ,UAAMqb,OAAO,GAAGC,kBAAkB,CAAC3tB,MAAM,CAAC4tB,IAAP,CAAYvb,QAAZ,CAAD,CAAlC;AACA,UAAMwb,MAAM,GAAG3N,IAAI,CAAC4N,KAAL,CAAWJ,OAAX,CAAf;AACA/B,MAAAA,CAAC,CAACoC,cAAF,CAAiBF,MAAjB;AACA,aAAO,IAAP;AACD;;AACD,WAAO,KAAP;AACD,GAfD;;AAiBAlC,EAAAA,CAAC,CAACzK,cAAF,GAAoBtK,IAAD;AACjB,QAAM7U,IAAI,GAAG6U,IAAI,CAACrG,OAAL,CAAa,YAAb,CAAb;;AAEA,QAAIxO,IAAJ,EAAU;AACR,UAAMisB,KAAK,GAAGjsB,IAAI,CAAClC,KAAL,CAAW,YAAX,CAAd;AACA,UAAIA,KAAK,GAAG,KAAZ;;AAEA,WAAK,IAAMouB,IAAX,IAAmBD,KAAnB,EAA0B;AACxB,YAAInuB,KAAJ,EAAW;AACTkW,UAAAA,UAAU,CAACmY,UAAX,CAAsBvC,CAAtB,EAAyB;AAAEwC,YAAAA,MAAM,EAAE;AAAV,WAAzB;AACD;;AAEDxC,QAAAA,CAAC,CAACnT,UAAF,CAAayV,IAAb;AACApuB,QAAAA,KAAK,GAAG,IAAR;AACD;;AACD,aAAO,IAAP;AACD;;AACD,WAAO,KAAP;AACD,GAlBD;;AAoBA8rB,EAAAA,CAAC,CAAChC,QAAF,GAAa;AACX;AACA;AACA;AACA;AACAyE,IAAAA,QAAQ,CAACC,uBAAT,CAAiC;AAC/B,UAAM9D,eAAe,GAAG9lB,mBAAmB,CAACqE,GAApB,CAAwB6iB,CAAxB,CAAxB;;AAEA,UAAIpB,eAAJ,EAAqB;AACnBA,QAAAA,eAAe;AAChB;;AAEDZ,MAAAA,QAAQ;AACT,KARD;AASD,GAdD;;AAgBA,SAAOgC,CAAP;AACD;;AAED,IAAMO,UAAU,GAAG,CAACP,CAAD,EAAYzpB,IAAZ;AACjB,MAAM+pB,OAAO,GAAkB,EAA/B;;AACA,OAAK,IAAM,CAAChhB,CAAD,EAAI5B,CAAJ,CAAX,IAAqBtG,MAAM,CAACurB,MAAP,CAAc3C,CAAd,EAAiB;AAAErR,IAAAA,EAAE,EAAEpY;AAAN,GAAjB,CAArB,EAAqD;AACnD,QAAM+E,GAAG,GAAG9E,WAAW,CAACuG,OAAZ,CAAoBijB,CAApB,EAAuB1gB,CAAvB,CAAZ;AACAghB,IAAAA,OAAO,CAACtjB,IAAR,CAAa,CAACU,CAAD,EAAIpC,GAAJ,CAAb;AACD;;AACD,SAAOglB,OAAP;AACD,CAPD;;ACtQA;IAManZ,QAAQ,GAAGzS,UAAU,GAAG2nB,eAAH,GAAqBuG;;;;"}